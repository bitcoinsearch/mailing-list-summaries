{
    "header_summary": "The programming community exercises caution with new feature implementations, notably CheckTemplateVerify (CTV), which is drawing concern due to the lack of substantial proofs of concept, risking potential chain splits. James O'Beirne's OP_VAULT presents a notable use case for CTV, yet it requires additional opcodes not currently encompassed by OP_CTV.\n\nAnyprevout (APO) has gained support within the Lightning community, recognized for advancing eltoo/LN-Symmetry, but consensus highlights the need for more work to ensure its benefits outweigh the risks before activation. A tentative timeline suggests APO integration might occur around 2025/2026, assuming the next year is dedicated to its refinement and resolving the complexities brought by CTV discussions.\n\nMichael Folkson raises questions about the apprehension towards APO, pondering if it stems from technical hurdles or the overshadowing effects of CTV-related debates. He advocates for a deeper investigation into Bitcoin, encouraging community engagement and learning through an educational resource.",
    "recent_posts": [
        {
            "id": "022250",
            "title": "Swift Activation - CTV",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022250.html",
            "authors": [
                "Michael Folkson"
            ],
            "published_at": "2023-12-30T13:54:04+00:00",
            "summary": "- New CTV proposals often lack proof of concept, posing risk of chain splits.\n- APO gains consensus in Lightning community but activation before 2025/2026 is premature.\n- Michael inquires if APO hesitancy is technical or due to CTV confusion.",
            "n_threads": 7,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Anthony Towns",
                "Erik Aronesty",
                "Luke Dashjr",
                "alicexbt"
            ],
            "file_path": "static/bitcoin-dev/Dec_2023/022250_Swift-Activation-CTV.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Dec_2023/combined_Swift-Activation-CTV.xml"
        }
    ],
    "active_posts": [
        {
            "id": "021370",
            "title": "Ordinal Inscription Size Limits",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021370.html",
            "authors": [
                "Robert Dickinson"
            ],
            "published_at": "2023-01-27T12:44:10+00:00",
            "summary": "- The writer questions the wisdom of unlimited NFT content storage using ordinals.\n- They suggest imposing a size limit on blockchain inscriptions like OP_RETURN.\n- Proposes linking satoshis to real-world legal constructs for blockchain property transfers.",
            "n_threads": 18,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Andrew Poelstra",
                "Aymeric Vitte",
                "Claus Ehrenberg",
                "Erik Aronesty",
                "Greg Tonoski",
                "Kostas Karasavvas",
                "Melvin Carvalho",
                "Nagaev Boris",
                "alicexbt",
                "rot13maxi"
            ],
            "file_path": "static/bitcoin-dev/Jan_2023/021370_Ordinal-Inscription-Size-Limits.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Jan_2023/combined_Ordinal-Inscription-Size-Limits.xml"
        },
        {
            "id": "022201",
            "title": "Lamport scheme (not signature) to economize on L1",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022201.html",
            "authors": [
                "yurisvb at pm.me"
            ],
            "published_at": "2023-12-18T01:37:23+00:00",
            "summary": "- The proposal integrates the Lamport Scheme with ECC for L1 blockchain transaction signing.\n- Penalty payments are enforced if preimages are not published within the prescribed timeframe.\n- Argon2 is suggested to further reduce transaction space on the blockchain.",
            "n_threads": 18,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "David A. Harding",
                "G. Andrew Stone",
                "Nagaev Boris",
                "Sergio Demian Lerner"
            ],
            "file_path": "static/bitcoin-dev/Dec_2023/022201_Lamport-scheme-not-signature-to-economize-on-L1.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Dec_2023/combined_Lamport-scheme-not-signature-to-economize-on-L1.xml"
        },
        {
            "id": "022191",
            "title": "Scaling Lightning Safely With Feerate-Dependent Timelocks",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022191.html",
            "authors": [
                "jlspc"
            ],
            "published_at": "2023-12-14T17:07:40+00:00",
            "summary": "- Feerate-Dependent Timelocks deter DoS attacks by extending timelocks during congestion.\n- FDTs adjust to blockchain conditions, improving security while maintaining capital efficiency.\n- Implementing FDTs requires minimal additional resources and proposes updating Bitcoin's consensus rules.",
            "n_threads": 13,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Antoine Riard",
                "David A. Harding",
                "Eric Voskuil",
                "Nagaev Boris"
            ],
            "file_path": "static/bitcoin-dev/Dec_2023/022191_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Dec_2023/combined_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml"
        },
        {
            "id": "004254",
            "title": "Scaling Lightning Safely With Feerate-Dependent Timelocks",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-December/004254.html",
            "authors": [
                "jlspc"
            ],
            "published_at": "2023-12-14T17:07:40+00:00",
            "summary": "- The blog highlights Lightning Network's vulnerability to spam attacks and ineffective current solutions.\n- It proposes Feerate-Dependent Timelocks (FDTs) for better security and minimal implementation costs.\n- FDTs provide additional benefits and a correction to a Bitcoin whitepaper mistake, with resources available for details.",
            "n_threads": 9,
            "dev_name": "lightning-dev",
            "contributors": [
                "Antoine Riard",
                "David A. Harding",
                "Eric Voskuil",
                "Nagaev Boris"
            ],
            "file_path": "static/lightning-dev/Dec_2023/004254_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml",
            "combined_summ_file_path": "static/lightning-dev/Dec_2023/combined_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml"
        },
        {
            "id": "195",
            "title": "Covenant tools softfork",
            "link": "https://delvingbitcoin.org/t/covenant-tools-softfork/98",
            "authors": [
                "jamesob"
            ],
            "published_at": "2023-09-28T18:38:38.957000+00:00",
            "summary": "- The proposed softfork enables various Bitcoin network improvements, including enhanced security and efficiency.\n- BIP-118, BIP-119, and newly supported BIP-345 facilitate rapid deployment of Bitcoin vaults.\n- Roughly 7,000 lines of code, the softfork awaits community consensus for activation specifics.",
            "n_threads": 24,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "LLFourn",
                "ajtowns",
                "fiatjaf",
                "harding",
                "instagibbs",
                "matthewjablack",
                "moonsettler",
                "sjors",
                "stevenroose",
                "ursuscamp"
            ],
            "file_path": "static/delvingbitcoin/Sept_2023/195_Covenant-tools-softfork.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Sept_2023/combined_Covenant-tools-softfork.xml"
        },
        {
            "id": "873",
            "title": "[BUG]: spammers get Bitcoin blockspace at discounted price. Let's fix it",
            "link": "https://delvingbitcoin.org/t/bug-spammers-get-bitcoin-blockspace-at-discounted-price-lets-fix-it/327",
            "authors": [
                "GregTonoski"
            ],
            "published_at": "2023-12-27T20:54:30.891000+00:00",
            "summary": "- Disparities in Bitcoin transaction costs are exemplified using two contrasting cases.\n- Sender critiques current pricing, suggesting uniform blockspace costs to prevent bias.\n- Proposed Segwit update aims to equalize transaction costs by standardizing byte weight.",
            "n_threads": 3,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "moonsettler",
                "murch"
            ],
            "file_path": "static/delvingbitcoin/Dec_2023/873_-BUG-spammers-get-Bitcoin-blockspace-at-discounted-price-Let-s-fix-it.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Dec_2023/combined_-BUG-spammers-get-Bitcoin-blockspace-at-discounted-price-Let-s-fix-it.xml"
        },
        {
            "id": "885",
            "title": "[Meta] On consensus changes in bitcoin 2024",
            "link": "https://delvingbitcoin.org/t/meta-on-consensus-changes-in-bitcoin-2024/334",
            "authors": [
                "reardencode"
            ],
            "published_at": "2024-01-01T16:05:12.954000+00:00",
            "summary": "- Debates persist on modifying Bitcoin's consensus rules; two camps resist changes.\n- Some propose an IETF-like consensus model; Bitcoin lacks a clear consensus mechanism.\n- For Bitcoin's growth, a new method to gauge consensus on changes is necessary.",
            "n_threads": 2,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "ursuscamp"
            ],
            "file_path": "static/delvingbitcoin/Jan_2024/885_-Meta-On-consensus-changes-in-bitcoin-2024.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Jan_2024/combined_-Meta-On-consensus-changes-in-bitcoin-2024.xml"
        }
    ],
    "today_in_history_posts": [
        {
            "id": "018338",
            "title": "Bech32m BIP: new checksum, and usage for segwit address",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2021-January/018338.html",
            "authors": [
                "Pieter Wuille"
            ],
            "published_at": "2021-01-05T00:14:12+00:00",
            "summary": "- Pieter Wuille introduced a BIP draft for updated segwit address checksums.\n- The proposal suggests Bech32m for v1+ and retains Bech32 for v0 addresses.\n- Feedback from the community on this change can be given at the provided link.",
            "n_threads": 8,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Rusty Russell",
                "nakagat"
            ],
            "file_path": "static/bitcoin-dev/Jan_2021/018338_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Jan_2021/combined_Bech32m-BIP-new-checksum-and-usage-for-segwit-address.xml",
            "combined_summary": "- Pieter contrasted Bech32 checksum's error detection with hash functions, emphasizing Bech32's specific strengths.\n- Pieter Wuille updated reference implementations for Bech32m and solicited community feedback on the BIP draft.\n- Bech32m was introduced for v1+ segwit addresses, maintaining Bech32 for v0, and noted in the updated BIP173."
        },
        {
            "id": "002929",
            "title": "PoDLEs revisited",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-January/002929.html",
            "authors": [
                "Lloyd Fournier"
            ],
            "published_at": "2021-01-04T06:13:05+00:00",
            "summary": "- Lloyd Fournier reviews a PoDLE-based dual funding proposal for Lightning Network.\n- Two proposals aim to prevent misuse during Lightning Network's channel setup.\n- The post contrasts PoDLE's security with its complexity and an alternative simpler protocol.",
            "n_threads": 10,
            "dev_name": "lightning-dev",
            "contributors": [
                "Rusty Russell",
                "ZmnSCPxj"
            ],
            "file_path": "static/lightning-dev/Jan_2021/002929_PoDLEs-revisited.xml",
            "combined_summ_file_path": "static/lightning-dev/Jan_2021/combined_PoDLEs-revisited.xml",
            "combined_summary": "- Taproot maintains privacy against methods linking UTXOs to node IDs but alters little for public channels.\n- Lloyd Fournier suggests immediate h2 broadcast in PoDLE to thwart parallel attacks, despite some downsides.\n- Signaling transactions reveal participant actions, complicating input ownership proof and parallel attack prevention."
        },
        {
            "id": "55",
            "title": "Lightning Fees - inbound vs outbound",
            "link": "https://delvingbitcoin.org/t/lightning-fees-inbound-vs-outbound/29",
            "authors": [
                "ajtowns"
            ],
            "published_at": "2023-01-12T07:16:51.472000+00:00",
            "summary": "- Accurate knowledge of channel demand enables Alice and Bob to optimize fees and maximize revenue.\n- Imperfect knowledge leads to individual fee strategies and potentially suboptimal total fees collected.\n- Understanding demand functions is crucial for strategic fee setting in payment networks.",
            "n_threads": 5,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "renepickhardt"
            ],
            "file_path": "static/delvingbitcoin/Jan_2023/55_Lightning-Fees-inbound-vs-outbound.xml",
            "combined_summ_file_path": "",
            "combined_summary": ""
        }
    ]
}