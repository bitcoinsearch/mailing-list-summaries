{
    "header_summary": "The programming community is engaged in a heated discussion regarding the implementation of new Bitcoin features such as CheckTemplateVerify (CTV) and Anyprevout (APO), balancing the desire for innovation against the need for widespread consensus. Frequent proposals, especially for CTV, often lack comprehensive testing and new insights, raising concerns about the risks of chain splits and underdeveloped applications. James O'Beirne's OP_VAULT proposal, requiring additional opcodes to OP_CTV, is a notable exception, while APO is favored within the Lightning community for potential enhancements to eltoo/LN-Symmetry, though its immediate activation is considered premature with a more realistic timeline being around 2025/2026, assuming CTV-related issues are addressed.\n\nThe decentralized decision-making process inherent to Bitcoin's development is causing fatigue in the community, which is exacerbated by the current informal debate methods that are hindering effective resolutions. The community is pushing for a more structured process to overcome the challenges in achieving consensus for development changes.\n\nAmidst uncertainty, there's a call for greater transparency from Bitcoin Core maintainers about the criteria used for integrating changes that require consensus. With rumors circulating that developers are prompted to activate features outside of Core first, there is a strong desire for an official stance from Core maintainers. The community is advocating for a clear, transparent protocol for proposing, testing, and integrating changes into Bitcoin Core, especially for consensus-critical components, to ensure the orderly advancement of the codebase and preserve trust among developers.",
    "recent_posts": [
        {
            "id": "022250",
            "title": "Swift Activation - CTV",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022250.html",
            "authors": [
                "Michael Folkson"
            ],
            "published_at": "2023-12-30T13:54:04+00:00",
            "summary": "- Consistent new CTV proposals lack consensus and advanced PoCs, risking chain splits.\n- APO achieves design maturity and community consensus but requires more work before activation.\n- Michael inquires if technical issues or CTV confusion causes APO activation hesitancy.",
            "n_threads": 7,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Anthony Towns",
                "Erik Aronesty",
                "Luke Dashjr",
                "alicexbt"
            ],
            "file_path": "static/bitcoin-dev/Dec_2023/022250_Swift-Activation-CTV.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Dec_2023/combined_Swift-Activation-CTV.xml"
        },
        {
            "id": "888",
            "title": "[Meta] On consensus changes in bitcoin 2024",
            "link": "https://delvingbitcoin.org/t/meta-on-consensus-changes-in-bitcoin-2024/334/2",
            "authors": [
                "ursuscamp"
            ],
            "published_at": "2024-01-01T22:15:43.788000+00:00",
            "summary": "- The programming community lacks clear decision-making processes for Bitcoin development.\n- There is speculation on the pre-implementation of consensus features, clarity is sought.\n- Calls emerge for transparent protocols on proposing and merging changes in Bitcoin Core.",
            "n_threads": 2,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "reardencode"
            ],
            "file_path": "static/delvingbitcoin/Jan_2024/888_-Meta-On-consensus-changes-in-bitcoin-2024.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Jan_2024/combined_-Meta-On-consensus-changes-in-bitcoin-2024.xml"
        }
    ],
    "active_posts": [
        {
            "id": "021370",
            "title": "Ordinal Inscription Size Limits",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021370.html",
            "authors": [
                "Robert Dickinson"
            ],
            "published_at": "2023-01-27T12:44:10+00:00",
            "summary": "- The writer questions the wisdom of unlimited NFT storage via ordinal inscriptions.\n- They suggest imposing size limits on NFT content similar to OP_RETURN rules.\n- Proposing linking satoshis to legal constructs enables blockchain property transfers.",
            "n_threads": 18,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Andrew Poelstra",
                "Aymeric Vitte",
                "Claus Ehrenberg",
                "Erik Aronesty",
                "Greg Tonoski",
                "Kostas Karasavvas",
                "Melvin Carvalho",
                "Nagaev Boris",
                "alicexbt",
                "rot13maxi"
            ],
            "file_path": "static/bitcoin-dev/Jan_2023/021370_Ordinal-Inscription-Size-Limits.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Jan_2023/combined_Ordinal-Inscription-Size-Limits.xml"
        },
        {
            "id": "022201",
            "title": "Lamport scheme (not signature) to economize on L1",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022201.html",
            "authors": [
                "yurisvb at pm.me"
            ],
            "published_at": "2023-12-18T01:37:23+00:00",
            "summary": "- A dual-key system combining ECC and Lamport chain is proposed for L1 blockchain transactions.\n- A two-step verification involving tuple broadcast and publishing preimages enhances byte efficiency.\n- Using Argon2 for hashing could shrink transaction sizes from 136 to 24 bytes.",
            "n_threads": 18,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "David A. Harding",
                "G. Andrew Stone",
                "Nagaev Boris",
                "Sergio Demian Lerner"
            ],
            "file_path": "static/bitcoin-dev/Dec_2023/022201_Lamport-scheme-not-signature-to-economize-on-L1.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Dec_2023/combined_Lamport-scheme-not-signature-to-economize-on-L1.xml"
        },
        {
            "id": "022191",
            "title": "Scaling Lightning Safely With Feerate-Dependent Timelocks",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022191.html",
            "authors": [
                "jlspc"
            ],
            "published_at": "2023-12-14T17:07:40+00:00",
            "summary": "- The Lightning Network uses Feerate-Dependent Timelocks (FDTs) to counteract denial-of-service attacks.\n- FDTs adjust timelocks during congestion, deterring attackers and enhancing capital efficiency.\n- While FDTs require more hardware resources, their implementation promises significant security benefits.",
            "n_threads": 13,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Antoine Riard",
                "David A. Harding",
                "Eric Voskuil",
                "Nagaev Boris"
            ],
            "file_path": "static/bitcoin-dev/Dec_2023/022191_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Dec_2023/combined_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml"
        },
        {
            "id": "004254",
            "title": "Scaling Lightning Safely With Feerate-Dependent Timelocks",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-December/004254.html",
            "authors": [
                "jlspc"
            ],
            "published_at": "2023-12-14T17:07:40+00:00",
            "summary": "- The blog post suggests Feerate-Dependent Timelocks (FDTs) to counter Lightning Network vulnerabilities.\n- FDTs extend timelocks during high fees, increasing security with minimal resource impact.\n- FDTs offer multiple benefits and a compelling case for integration into Bitcoin consensus rules.",
            "n_threads": 9,
            "dev_name": "lightning-dev",
            "contributors": [
                "Antoine Riard",
                "David A. Harding",
                "Eric Voskuil",
                "Nagaev Boris"
            ],
            "file_path": "static/lightning-dev/Dec_2023/004254_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml",
            "combined_summ_file_path": "static/lightning-dev/Dec_2023/combined_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml"
        },
        {
            "id": "195",
            "title": "Covenant tools softfork",
            "link": "https://delvingbitcoin.org/t/covenant-tools-softfork/98",
            "authors": [
                "jamesob"
            ],
            "published_at": "2023-09-28T18:38:38.957000+00:00",
            "summary": "- The proposed softfork activates BIP-118, BIP-119, and BIP-345, enhancing Bitcoin's features.\n- BIP-118 and BIP-119 are stable, while BIP-345's Bitcoin vaults show quick deployability.\n- The softfork's code includes tests; community feedback will inform the activation timeline.",
            "n_threads": 24,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "LLFourn",
                "ajtowns",
                "fiatjaf",
                "harding",
                "instagibbs",
                "matthewjablack",
                "moonsettler",
                "sjors",
                "stevenroose",
                "ursuscamp"
            ],
            "file_path": "static/delvingbitcoin/Sept_2023/195_Covenant-tools-softfork.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Sept_2023/combined_Covenant-tools-softfork.xml"
        },
        {
            "id": "789",
            "title": "Unspendable keys in descriptors",
            "link": "https://delvingbitcoin.org/t/unspendable-keys-in-descriptors/304",
            "authors": [
                "salvatoshi"
            ],
            "published_at": "2023-12-19T13:29:37.600000+00:00",
            "summary": "- The integration with taproot introduces challenges like creating unspendable keys.\n- Different methods for generating these keys have trade-offs impacting usability and security.\n- Root xpub with random chaincode is favored, but descriptor recycling offers a cleaner approach.",
            "n_threads": 20,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "AntoineP",
                "RandyMcMillan",
                "josibake",
                "sipa",
                "wydengyre"
            ],
            "file_path": "static/delvingbitcoin/Dec_2023/789_Unspendable-keys-in-descriptors.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Dec_2023/combined_Unspendable-keys-in-descriptors.xml"
        },
        {
            "id": "873",
            "title": "[BUG]: spammers get Bitcoin blockspace at discounted price. Let's fix it",
            "link": "https://delvingbitcoin.org/t/bug-spammers-get-bitcoin-blockspace-at-discounted-price-lets-fix-it/327",
            "authors": [
                "GregTonoski"
            ],
            "published_at": "2023-12-27T20:54:30.891000+00:00",
            "summary": "- Bitcoin transaction pricing disparities are presented, showing simple ones can cost more than complex.\n- The sender criticizes price discrimination, advocating for consistent blockspace pricing per byte.\n- A proposed solution is uniform pricing in Segwit's next version to ensure equitable cost distribution.",
            "n_threads": 3,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "moonsettler",
                "murch"
            ],
            "file_path": "static/delvingbitcoin/Dec_2023/873_-BUG-spammers-get-Bitcoin-blockspace-at-discounted-price-Let-s-fix-it.xml",
            "combined_summ_file_path": "static/delvingbitcoin/Dec_2023/combined_-BUG-spammers-get-Bitcoin-blockspace-at-discounted-price-Let-s-fix-it.xml"
        }
    ],
    "today_in_history_posts": [
        {
            "id": "017547",
            "title": "Modern Soft Fork Activation",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-January/017547.html",
            "authors": [
                "Matt Corallo"
            ],
            "published_at": "2020-01-10T21:30:09+00:00",
            "summary": "- The author evaluates soft-fork activation methods, highlighting progress and listing five key requirements.\n- BIP 9 meets several criteria by ensuring miner readiness, while BIP 8 faces criticism.\n- The Great Consensus Cleanup suggests a BIP 9 implementation with a potential shift to BIP 8 if needed.",
            "n_threads": 13,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Anthony Towns",
                "Jeremy",
                "Jorge Tim\u00f3n",
                "Luke Dashjr",
                "Yosef"
            ],
            "file_path": "static/bitcoin-dev/Jan_2020/017547_Modern-Soft-Fork-Activation.xml",
            "combined_summ_file_path": "static/bitcoin-dev/Jan_2020/combined_Modern-Soft-Fork-Activation.xml",
            "combined_summary": "- Matt Corallo proposed a BIP 9 process for Bitcoin soft fork activation with observation time.\n- Concerns about miner upgrade thresholds and BIP 8 flaws sparked proposals for revision and thresholds.\n- Discussions emphasized avoiding activation against significant objections and balancing community will with technical upgrade risks."
        },
        {
            "id": "002435",
            "title": "Decoy node_ids and short_channel_ids",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-January/002435.html",
            "authors": [
                "Bastien TEINTURIER"
            ],
            "published_at": "2020-01-20T16:44:53+00:00",
            "summary": "- Unannounced Lightning Network channels enhance privacy but current invoices expose sensitive identifiers.\n- The author suggests using one-time keys for node_ids and decoy short_channel_ids, requiring updates in the onion protocol.\n- Improved methods employ payment_secrets, reducing data size, but can't eliminate onion payload bytes.",
            "n_threads": 20,
            "dev_name": "lightning-dev",
            "contributors": [
                "Rusty Russell",
                "ZmnSCPxj",
                "m.a.holden"
            ],
            "file_path": "static/lightning-dev/Jan_2020/002435_Decoy-node-ids-and-short-channel-ids.xml",
            "combined_summ_file_path": "static/lightning-dev/Jan_2020/combined_Decoy-node-ids-and-short-channel-ids.xml",
            "combined_summary": "- Strategies to enhance Bitcoin Lightning Network privacy include using distinct node_ids per invoice.\n- Payment secrets and decoy keys may prevent channel probing and information leakage.\n- Proposals include more efficient SCID management and improvements for unannounced channels."
        },
        {
            "id": "55",
            "title": "Lightning Fees - inbound vs outbound",
            "link": "https://delvingbitcoin.org/t/lightning-fees-inbound-vs-outbound/29",
            "authors": [
                "ajtowns"
            ],
            "published_at": "2023-01-12T07:16:51.472000+00:00",
            "summary": "- Parties maximize revenue by setting optimal fees based on complete demand knowledge.\n- Unbalanced knowledge leads to different fee calculations and suboptimal revenue.\n- Accurate demand prediction is crucial for strategic fee setting and maximizing income.",
            "n_threads": 5,
            "dev_name": "delvingbitcoin",
            "contributors": [
                "renepickhardt"
            ],
            "file_path": "static/delvingbitcoin/Jan_2023/55_Lightning-Fees-inbound-vs-outbound.xml",
            "combined_summ_file_path": "",
            "combined_summary": ""
        }
    ]
}