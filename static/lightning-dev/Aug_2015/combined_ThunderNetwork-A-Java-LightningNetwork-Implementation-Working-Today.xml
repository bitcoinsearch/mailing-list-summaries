<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - ThunderNetwork - A Java LightningNetwork Implementation Working Today</title>
  <updated>2023-06-03T15:16:19.785637+00:00</updated>
  <author>
    <name>Joseph Poon 2015-08-11 19:16:07</name>
  </author>
  <author>
    <name>Mats Jerratsch 2015-08-11 19:26:43</name>
  </author>
  <author>
    <name>Mats Jerratsch 2015-08-11 20:19:24</name>
  </author>
  <author>
    <name>Rusty Russell 2015-08-14 01:26:44</name>
  </author>
  <author>
    <name>Joseph Poon 2015-08-11 18:30:47</name>
  </author>
  <author>
    <name>Mats Jerratsch 2015-08-11 18:42:50</name>
  </author>
  <author>
    <name>Joseph Poon 2015-08-11 20:06:23</name>
  </author>
  <author>
    <name>Mats Jerratsch 2015-08-11 20:44:27</name>
  </author>
  <author>
    <name>Joseph Poon 2015-08-11 23:50:29</name>
  </author>
  <author>
    <name>Mats Jerratsch 2015-08-11 16:12:04</name>
  </author>
  <author>
    <name>Joseph Poon 2015-08-11 20:33:05</name>
  </author>
  <link href="lightning-dev/Aug_2015/000114_ThunderNetwork-A-Java-LightningNetwork-Implementation-Working-Today.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000115_ThunderNetwork-A-Java-LightningNetwork-Implementation-Working-Today.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000119_ThunderNetwork-A-Java-LightningNetwork-Implementation-Working-Today.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000131_ThunderNetwork-A-Java-LightningNetwork-Implementation-Working-Today.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000112_ThunderNetwork-A-Java-LightningNetwork-Implementation-Working-Today.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000113_ThunderNetwork-A-Java-LightningNetwork-Implementation-Working-Today.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000117_ThunderNetwork-A-Java-LightningNetwork-Implementation-Working-Today.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000121_ThunderNetwork-A-Java-LightningNetwork-Implementation-Working-Today.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000122_ThunderNetwork-A-Java-LightningNetwork-Implementation-Working-Today.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000109_ThunderNetwork-A-Java-LightningNetwork-Implementation-Working-Today.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000120_ThunderNetwork-A-Java-LightningNetwork-Implementation-Working-Today.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - ThunderNetwork - A Java LightningNetwork Implementation Working Today</title>
    <updated>2023-06-03T15:16:19.785637+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000114.html" rel="alternate"/>
    <summary>In discussions surrounding the Lightning Network Protocol, Joseph Poon and Mats Jerratsch explore various scenarios in which a client could hold funds hostage. They discuss potential risks associated with payment channels, such as malleability risks, exit scamming, and an asymmetric playing field. The conversation also touches on mitigating the problem of channel histories and open payments being less secure than settled balances. Rusty Russell acknowledges the need for a bitcoinj implementation of Lightning but is focused on ensuring he is happy with the basic inter-node protocol. Mats Jerratsch creates an implementation for a Lightning Network Payment-Hub + Client written in Java, but Joseph Poon requests that it not be called a Lightning Network implementation due to its differences in design and trust models.They discuss how to mitigate the problem of channel histories where one party holds all the funds at one point and the other party holds all the funds at a later point. They suggest setting a hard requirement on the spendable amount. However, reserve requirements are not a good solution because if one party has more money than the other, they can hold the funds hostage. In such cases, the affected party must negotiate with the attacker to get their money back. They also discuss hypothetical scenarios where Alice decides to be a "jerk" and broadcasts a mutated (re-signed) version of the commitment, leading to a hostage negotiation. They determine that if she resigns commitment 20, she would lose BTC while Bob would still receive the funds.The Lightning Network Payment-Hub + Client implementation in Java has been introduced by a developer. The channel design has been modified to work on the current Blockchain without requiring softforks, making it low-trust. However, with upcoming new OP_CODES, this will change. The prototype wallet provided will be followed by a potent backend in the future. In email exchanges, Joseph Poon expresses concerns about any system that has an implicit level of trust, especially in regards to long-term systemic risks. The goal of the Lightning Network is to allow users to connect with anyone without risking the counterparty outright stealing or encumbering funds. Joseph believes that if a semi-trusted implementation were to be used, it may encourage the use of systems that let you maliciously encumber HTLC funds in transit and funding on main-net. Overall, the discussion centers around potential risks and solutions associated with the Lightning Network Protocol and its implementations.In the world of finance, the concept of settled balance is important. It refers to the amount of money that has been cleared and is available for use. However, even this settled balance is not completely safe from theft or fraud. Modern banking systems rely heavily on electronic transfers and online transactions, which are generally secure but not foolproof. Hackers and cybercriminals are constantly looking for vulnerabilities in these systems that they can exploit. One common technique used by cybercriminals to steal settled balances is known as a "man-in-the-middle" attack. To protect against these kinds of attacks, banks and financial institutions use various security measures such as two-factor authentication, encryption, and monitoring systems that look for unusual activity. Despite these measures, there is always a risk that settled balances could be stolen. As such, it is important for individuals and businesses to remain vigilant and take steps to protect their accounts and transactions. This may include using strong passwords, regularly monitoring account activity, and reporting any suspicious activity to the bank immediately.</summary>
    <published>2015-08-11T19:16:07+00:00</published>
  </entry>
</feed>
