<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Attacking the lightning network</title>
  <updated>2023-06-01T23:35:20.125857+00:00</updated>
  <author>
    <name>Rusty Russell 2015-08-12 01:06:57</name>
  </author>
  <author>
    <name>Anthony Towns 2015-08-11 19:38:16</name>
  </author>
  <author>
    <name>Joseph Poon 2015-08-11 20:15:47</name>
  </author>
  <link href="lightning-dev/Aug_2015/000123_Attacking-the-lightning-network.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000116_Attacking-the-lightning-network.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000118_Attacking-the-lightning-network.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Attacking the lightning network</title>
    <updated>2023-06-01T23:35:20.125857+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000123.html" rel="alternate"/>
    <summary>The email exchange between Joseph Poon and Anthony Towns discusses the potential for a doublespend attack in the Lightning Network when setting up a new channel with an untrusted counterparty. The author suggests that if a user can afford to do a double-spend despite waiting for N confirmations, then they can take advantage of the network to gain funds. To do this, they recommend opening anonymous channels capable of receiving at least $X and simultaneously constructing multiple lightning channels, funding them at $d each.Once the new channels are active, the user can quickly route multiple payments from their new channels to their anonymous channels until they can't send anymore. The author then suggests publishing the doublespending fork so that the $d*n never got spent. The email conversation also discusses the potential for reorg attacks with Bitcoin, and how Lightning could reduce this vulnerability.The author mentions the cost of a doublespend attack, which would require 1.4*25*M bitcoin to mount over M blocks. If a user can open 2000 channels per block, then X &gt; 1.4*25*M/n, which provides insight into how much capacity the Lightning Network has in routable Bitcoin. The only people worse off are those who opened $d channels after N confirmations. None of the ripped-off hubs need to know where the money ended up, so there’s not much potential for iron pipe cryptography to get money back.Constraints include how many channels one can open in M-N blocks, having &gt;$X funds available in the first place to commit to double spend, and how much capacity the lightning network has in routable bitcoin. If it costs 1.4*25*M bitcoin to mount a double spend attack over M blocks (bribing 67% of hash power for the time it takes to do 2*M blocks), and you can open 2000 channels per block, then you’re putting up 525 bitcoin by flooding the blockchain with anchor transactions, sending it to yourself over lightning, then double spending the original 525 BTC at a cost of spending ~505 BTC on hash power. Increasing the blocksize or lowering the block reward increases the confirmations required. The conversation ends with Joseph Poon's signature.</summary>
    <published>2015-08-12T01:06:57+00:00</published>
  </entry>
</feed>
