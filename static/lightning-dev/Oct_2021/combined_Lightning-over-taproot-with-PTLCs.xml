<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning over taproot with PTLCs</title>
  <updated>2023-06-04T02:32:17.417727+00:00</updated>
  <author>
    <name>Anthony Towns 2021-10-19 04:16:13</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-19 06:26:50</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-09 01:12:07</name>
  </author>
  <author>
    <name>Jonas Nick 2021-10-09 12:21:03</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-09 13:59:39</name>
  </author>
  <author>
    <name>Lloyd Fournier 2021-10-11 21:12:14</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-12 03:08:21</name>
  </author>
  <author>
    <name>Lloyd Fournier 2021-10-13 04:15:14</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-11 06:29:51</name>
  </author>
  <author>
    <name>Lloyd Fournier 2021-10-11 10:23:19</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-12 03:26:58</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-10-12 04:18:37</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-12 04:48:56</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-10-09 01:49:38</name>
  </author>
  <author>
    <name>Anthony Towns 2021-10-09 02:15:19</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-10-09 02:27:37</name>
  </author>
  <author>
    <name>Jonas Nick 2021-10-10 18:01:55</name>
  </author>
  <author>
    <name>Lloyd Fournier 2021-10-11 06:05:05</name>
  </author>
  <link href="lightning-dev/Oct_2021/003324_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003325_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003278_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003282_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003283_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003291_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003293_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003306_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003287_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003288_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003294_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003295_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003296_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003279_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003280_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003281_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003284_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003286_Lightning-over-taproot-with-PTLCs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning over taproot with PTLCs</title>
    <updated>2023-06-04T02:32:17.417727+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-October/003324.html" rel="alternate"/>
    <summary>The Lightning Network protocol for Bitcoin transactions is set to receive a replacement for BOLT#2 and BOLT#3. The proposal focuses on implementing PTLCs while minimizing data storage requirements, latency, on-chain footprint, and third-party analysis. The proposed solution involves the use of deterministic nonces in MuSig, which raised concerns about security unless combined with heavy machinery that proves correctness of the nonce derivation in zero knowledge. The proposed solution involves Bob having a shachain-based secret generator, producing secrets s_0 to s_(2**48). In an email sent on October 11th, Lloyd Fournier suggested adjusting the protocol so that in-flight transactions are reciprocated. The email thread discusses ways to improve the Lightning Network's payment forwarding system with low latency. The proposed solution involves two channel parameters: payment delay (PD) and channel recovery delay (RD). If an old state is published, the recovery delay will correct it. However, if an active state includes a payment that has been forwarded, the shorter payment delay may be used to forward the payment claim details back.Anthony Towns proposed a replacement of BOLT#2 and BOLT#3 in order to implement PTLCs and take advantage of taproot. During the in-person LN summit, it was concluded that these features should be split up and implemented gradually. Furthermore, discussions centered around simulating eltoo's behavior and using revocable signatures for scorched earth punishments. ZmnSCPxj proposed a transition from the BOLT#3 format to a new scheme without requiring an onchain transaction, which would maintain the historical longevity of the channel. The Lightning Network was discussed, and it was suggested that transactions should not be put on-chain to avoid implementation complexity in drop-onchain cases. A suggestion was made to establish a new taproot-based channel without advertising it, and secretly committing to PTLCs in the new channel instead of the current one. Once the funding transaction for the new channel is sufficiently buried, it can be advertised instead of the old one, and the old channel can become a shadow channel.In another conversation, the speaker suggests using H(private-key, msg, other-party's-nonce-pair, 1), but they realize that other-party's-nonce-pair could be rederived from RA(n) or RB(n). The proposal uses the single sig adaptor sig variant. In an email exchange, the sender praises the recipient's work on "witness asymmetric channels" and their use of "revocable signatures" to solve the constant size storage problem in generalized payment channels. They also highlight the breakthrough of concurrent non-interactive payment forwarding using a refined version of Z's fast forward idea. Revocable signatures also enable scorched earth punishments, allowing wronged parties to take coins from all channels with the perpetrator.The proposed system aimed to allow low-latency payments while ensuring security in case of revoked states. Another proposal addressed the layering issue in payment forwarding systems, highlighting the need for a robust and secure layering system. Overall, these email conversations underscored the importance of considering all possible scenarios when designing complex payment networks such as Lightning.</summary>
    <published>2021-10-19T04:16:13+00:00</published>
  </entry>
</feed>
