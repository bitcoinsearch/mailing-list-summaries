<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Proposal for skip channel confirmation.</title>
  <updated>2023-06-03T01:59:06.072354+00:00</updated>
  <author>
    <name>Antoine Riard 2020-08-24 19:56:50</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-08-25 02:38:15</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-08-27 01:29:55</name>
  </author>
  <author>
    <name>Matt Corallo 2020-08-24 19:22:33</name>
  </author>
  <author>
    <name>Roei Erez 2020-08-25 10:01:53</name>
  </author>
  <author>
    <name>Roei Erez 2020-08-24 08:16:44</name>
  </author>
  <author>
    <name>Antoine Riard 2020-08-25 18:16:56</name>
  </author>
  <link href="lightning-dev/Aug_2020/002782_Proposal-for-skip-channel-confirmation-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2020/002783_Proposal-for-skip-channel-confirmation-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2020/002788_Proposal-for-skip-channel-confirmation-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2020/002781_Proposal-for-skip-channel-confirmation-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2020/002784_Proposal-for-skip-channel-confirmation-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2020/002780_Proposal-for-skip-channel-confirmation-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2020/002787_Proposal-for-skip-channel-confirmation-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Proposal for skip channel confirmation.</title>
    <updated>2023-06-03T01:59:06.072354+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-August/002782.html" rel="alternate"/>
    <summary>Roei Erez discusses the potential of enabling a zero-confirmation (0-conf) channel funding transaction confirmation system, which would make the channel fully operational before its on-chain confirmation. This protocol doesn't capture unidirectional 0-conf, but it could be useful in certain situations where parties trust each other or when buying a pre-loaded channel from a service such as Bitrefill. To support this behavior, Erez suggests four changes to the funding flow: accepting the channel message, sending minimum_depth=0 if fundee wants to skip confirmation, no change in funding signed message, and funding locked message.If the fundee sends the minimum_depth=0, then both parties send funding_locked while the channel_id is derived using a convention agreed upon by both. When the channel is confirmed, gossip messages such as channel_update are re-broadcasted and refer to the confirmed channel_id. Erez has created a pull request in LND that implements these changes.Overall, this proposal offers a solution to the "Immediate on-boarding" use case by allowing channels to be operational without waiting for on-chain confirmations. However, it is important to note that different implementations may support zero-conf channels in different ways, and this protocol may not be suitable for all scenarios.</summary>
    <published>2020-08-24T19:56:50+00:00</published>
  </entry>
</feed>
