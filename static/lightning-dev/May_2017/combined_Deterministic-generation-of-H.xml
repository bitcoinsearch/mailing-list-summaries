<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Deterministic generation of H</title>
  <updated>2023-06-02T01:08:47.579768+00:00</updated>
  <author>
    <name>Neil Fincham 2017-05-18 22:23:20</name>
  </author>
  <author>
    <name>Rusty Russell 2017-05-20 06:51:49</name>
  </author>
  <link href="lightning-dev/May_2017/000721_Deterministic-generation-of-H.xml" rel="alternate"/>
  <link href="lightning-dev/May_2017/000723_Deterministic-generation-of-H.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Deterministic generation of H</title>
    <updated>2023-06-02T01:08:47.579768+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-May/000721.html" rel="alternate"/>
    <summary>In an email exchange, Neil Fincham inquired whether it is possible to deterministically generate H without revealing S to the generator while still being safe to use S to close the channel. BIP32 allows for the generation of a Master Private Key, which can be transformed into a Master Public Key and used to generate a series of addresses without the use of private keys. Similarly, with LN, a random value S is generated and hashed into H, which is then distributed along with S to close the channel. Rusty replied that it is possible but not with the current method. He explained that we use the terms "payment hash" for H and "payment preimage" for S in LN. Rusty suggested using a pubkey for the payment hash and a privkey for the payment preimage, which could allow for the exact use of BIP32. However, he clarified that we still need the payment preimage to close out the HTLC but could send out payment requests without access to the preimages. Despite this, he pointed out that this cannot be done with SHA256. He also mentioned an even more mindblowing scheme using Schnorr where the signature itself serves as a kind of preimage, which would allow a similar partition scheme to what Neil described, but he is unsure about it.</summary>
    <published>2017-05-18T22:23:20+00:00</published>
  </entry>
</feed>
