<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BOLTs and meaning of "MUST" in potentially adversarial contexts</title>
  <updated>2023-06-03T18:05:02.334126+00:00</updated>
  <author>
    <name>Benjamin Mord 2018-01-16 14:37:25</name>
  </author>
  <author>
    <name>7riw77 at gmail.com 2018-01-18 11:12:38</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-01-11 17:29:38</name>
  </author>
  <link href="lightning-dev/Jan_2018/000937_BOLTs-and-meaning-of-MUST-in-potentially-adversarial-contexts.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000948_BOLTs-and-meaning-of-MUST-in-potentially-adversarial-contexts.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000918_BOLTs-and-meaning-of-MUST-in-potentially-adversarial-contexts.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BOLTs and meaning of "MUST" in potentially adversarial contexts</title>
    <updated>2023-06-03T18:05:02.334126+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000937.html" rel="alternate"/>
    <summary>The RFC 2119 protocol, written in 1997, is criticized for assuming a world of good and bad actors, whereas Satoshi saw every node as pursuing self-interest alone. The lightning concept embraces this idea at an abstract level, making it necessary to carry that philosophy through into the byte-level details and how those details are sold to programmers. Cryptocurrency protocol specifications are 100% advisory, so there is no RFC 2119 MUST - only self-interest. According to Rusty Russell, dividing requirements into sender and receiver helps to sell every detail of the protocol, as there is no other source of authority at our disposal. However, the spec does not live up to this property in all places, and bugs are fixed where found. The use of MUST in RFC2119 invites lazy thought in protocol design, where details need not be sold as beneficial to individuals. While the initial definition of MUST presumes good faith, integrity despite adversarial nodes is an explicit design goal of the lightning network.BOLT states that a lightning node MUST do something, and violation of a MUST should be considered hostile. Implementers may take implementation-specific defensive measures deemed appropriate, provided they have cryptographic evidence that the violation is not forged. However, a MUST does not assure implementers that they may assume this MUST will be respected by remote nodes since it is not the purpose of MUST to convey that cryptographic safeguards or such elsewhere in the protocol design have arranged to force adherence. It may be worth explicitly stating somewhere along with definitions of SHOULD and MAY.In RFCs, it is useful to have a brief discussion about the meaning of terms such as MUST, SHOULD, and MAY. The traditional approach to protocol design assumes cooperative nodes, but later tries to retrofit security when it is discovered that not all nodes are operating in good faith. Private implementations are not bound by these rules, but if they become significant enough, they go through the standardization process before becoming an issue within the community.</summary>
    <published>2018-01-16T14:37:25+00:00</published>
  </entry>
</feed>
