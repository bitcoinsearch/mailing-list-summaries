<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Replaceable Funding Transactions</title>
  <updated>2023-06-03T18:00:31.988277+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-01-03 13:09:34</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-01-02 00:12:31</name>
  </author>
  <author>
    <name>Pierre 2018-01-02 14:32:04</name>
  </author>
  <link href="lightning-dev/Jan_2018/000901_Replaceable-Funding-Transactions.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000889_Replaceable-Funding-Transactions.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000894_Replaceable-Funding-Transactions.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Replaceable Funding Transactions</title>
    <updated>2023-06-03T18:00:31.988277+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000901.html" rel="alternate"/>
    <summary>The email discussion revolves around the possibility of using replaceable funding transactions in BOLT v1.0 to address slow transaction confirmation on the blockchain level. The author suggests that RBF funding transactions are possible as long as both parties allow multiple channels per peer. The suggested process includes sending an open_channel for channel #1, creating an RBF-able funding transaction for low feerate, increasing the fee rate, and letting the counterparty forget channel #1. However, c-lightning restricts channels.In a recent email conversation, Pierre discusses the possibility of using Lightning Network to receive Bitcoin payments. He believes it should work as long as both ends support channels multiplexing, but expresses concern about being the accepting node and receiving too many unconfirmed channel requests. Pierre also believes that opening a channel should not necessarily be considered a time-sensitive operation, unless there are exceptional circumstances. The lack of ways to control transaction fees after a broadcasted transaction is also frustrating for users. The participants discuss developing a wallet that keeps transactions replaceable, but this would require waiting for funding_signed from all counterparties before broadcasting a replacement transaction. The accepting node hopes for a future BOLT spec to include a cancel_channel message to address their concerns about receiving too many unconfirmed channel requests.</summary>
    <published>2018-01-03T13:09:34+00:00</published>
  </entry>
</feed>
