<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Replaceable Funding Transactions</title>
  <updated>2023-06-02T01:45:56.075528+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-01-03 13:09:34</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-01-02 00:12:31</name>
  </author>
  <author>
    <name>Pierre 2018-01-02 14:32:04</name>
  </author>
  <link href="lightning-dev/Jan_2018/000901_Replaceable-Funding-Transactions.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000889_Replaceable-Funding-Transactions.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2018/000894_Replaceable-Funding-Transactions.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Replaceable Funding Transactions</title>
    <updated>2023-06-02T01:45:56.075528+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-January/000901.html" rel="alternate"/>
    <summary>The email conversation being discussed is centered around the possibility of using replaceable funding transactions in BOLT v1.0 to address slow transaction confirmation on the blockchain level. The author believes it is possible to do RBF funding transactions as long as both ends support channel multiplexing. However, the accepting node expresses concerns about receiving too many channel requests that never confirm and hopes for a future BOLT spec to include a cancel_channel message. The idea of developing a wallet that keeps transactions replaceable is also brought up, but it would require waiting for funding_signed from all counterparties before broadcasting a replacement transaction. Additionally, the lack of ways to control transaction fees after a broadcasted transaction contributes to frustration surrounding blockchain transaction fees. In another email conversation, Pierre discusses the possibility of using Lightning Network to receive Bitcoin payments. He believes it should work as long as both ends support channels multiplexing, which implementations like lnd or eclair do. However, he is hesitant about being the accepting node and receiving too many channel requests that never confirm. Pierre also expresses his opinion that the opening of a channel should not necessarily be considered a time-sensitive operation. While there may be exceptions to this, in general, he doesn't believe it is an urgent matter.</summary>
    <published>2018-01-03T13:09:34+00:00</published>
  </entry>
</feed>
