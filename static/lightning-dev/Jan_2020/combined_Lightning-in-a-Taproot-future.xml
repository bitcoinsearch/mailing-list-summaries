<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning in a Taproot future</title>
  <updated>2023-06-02T22:19:16.772422+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-12-17 15:05:17</name>
  </author>
  <author>
    <name>Lloyd Fournier 2019-12-18 03:51:56</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-24 09:56:10</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-15 15:43:07</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-07 00:26:05</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-10 15:24:56</name>
  </author>
  <author>
    <name>David A. Harding 2020-01-12 18:04:41</name>
  </author>
  <author>
    <name>David A. Harding 2020-01-05 13:58:47</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-06 07:37:20</name>
  </author>
  <author>
    <name>David A. Harding 2020-01-10 18:30:07</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-12 15:01:06</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-27 01:40:30</name>
  </author>
  <author>
    <name>Matt Corallo 2019-12-16 01:27:59</name>
  </author>
  <author>
    <name>Anthony Towns 2019-12-17 14:02:29</name>
  </author>
  <link href="lightning-dev/Dec_2019/002387_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002392_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002450_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002375_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002415_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002421_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002424_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002412_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002414_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002422_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002423_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002453_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002376_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002385_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning in a Taproot future</title>
    <updated>2023-06-02T22:19:16.773415+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002387.html" rel="alternate"/>
    <summary>The Lightning Network community is exploring various options to optimize its performance while maintaining security and privacy. The use of MuSig for PTLCs is being discussed as an alternative to Hash Timelocked Contracts (HTLCs). A maximally private channel using only absolute locktimes is also suggested. The Lightning Network is considering how to update the network to take advantage of the upcoming taproot update to the base layer. Two options are being considered: updating the current Poon-Dryja mechanism or keeping the current mechanism with SegWit v0 only and only updating to Schnorr/SegWit v1 when Decker-Russell-Osuntokun can be implemented.The implementation of Schnorr and Taproot at the base layer of Bitcoin will enable greater privacy, scalability, and efficiency for the Lightning Network. However, commitment transactions involve a lot of round trips and can affect latency. The Lightning Network is exploring different options to optimize its performance while maintaining security and privacy, including the use of fast-forwards or explicit 2-of-2 for commitment and MuSig for mutual close.The Lightning Network development team has been discussing an upgrade from HTLCs to PTLCs. They have determined that Decker-Russell-Osuntokun is a better option than Poon-Dryja only if all required features are enabled simultaneously. This includes using MuSig for the internal key and implementing an alternative script path to reduce communication round trips needed to generate signatures.In terms of improving the distinguishability of transactions with relative lock times, Lloyd Fournier suggests setting relative time locks on normal payments, while Dave proposes to suggest to the Bitcoin Core project to set nSequence to the block age of the UTXO being spent. This could enhance existing anti-fee-sniping by reducing the amount of PoW covering any of its descendant transactions.</summary>
    <published>2019-12-17T15:05:17+00:00</published>
  </entry>
</feed>
