<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Oversize preimage attack.</title>
  <updated>2023-06-03T16:26:54.285454+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2016-05-02 21:48:19</name>
  </author>
  <author>
    <name>Rusty Russell 2016-05-02 23:39:10</name>
  </author>
  <author>
    <name>Rusty Russell 2016-05-02 05:07:22</name>
  </author>
  <link href="lightning-dev/May_2016/000530_Oversize-preimage-attack-.xml" rel="alternate"/>
  <link href="lightning-dev/May_2016/000532_Oversize-preimage-attack-.xml" rel="alternate"/>
  <link href="lightning-dev/May_2016/000529_Oversize-preimage-attack-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Oversize preimage attack.</title>
    <updated>2023-06-03T16:26:54.285454+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-May/000530.html" rel="alternate"/>
    <summary>The post discusses the process of redeeming a preimage by dropping it to the blockchain and sending it directly to a miner, which could create a non-standard transaction that may not propagate. However, Segwit's witness program validation logic enforces a ceiling on the pre-image size by ensuring that each element of the passed witness stack is less-than-or-equal-to the maximum script element size of 520 bytes. Olaoluwa Osuntokun also discusses the requirement of using a 110k preimage to redeem and dropping it to the blockchain, which would create a non-standard transaction. Following this, Rusty plans to modify the HTLC scripts for the first time in a while.Rusty intends to prepend "OP_SIZE 32 OP_EQUALVERIFY" to the scripts, defining the length of a scriptsig that redeems a transaction. This change will prevent an attacker from creating an HTLC that requires a different-sized preimage to redeem and drop the commit tx to the blockchain and redeem it. Additionally, Rusty plans to drop the per-side HTLC limit from 1500 to 450 in BOLT #2, making the protocol simpler. If the limit remained at 1500, stealing the inputs would have cost more than 1 MB, resulting in a non-standard transaction that may not propagate.</summary>
    <published>2016-05-02T21:48:19+00:00</published>
  </entry>
</feed>
