<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Route finding and route generation</title>
  <updated>2023-06-03T17:37:57.934684+00:00</updated>
  <author>
    <name>Johan Tor√•s Halseth 2017-09-04 09:13:15</name>
  </author>
  <author>
    <name>Billy Tetrud 2017-09-04 20:48:54</name>
  </author>
  <author>
    <name>Billy Tetrud 2017-08-22 01:08:50</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2017-09-04 20:02:02</name>
  </author>
  <link href="lightning-dev/Sept_2017/000755_Route-finding-and-route-generation.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000759_Route-finding-and-route-generation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2017/000750_Route-finding-and-route-generation.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2017/000758_Route-finding-and-route-generation.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Route finding and route generation</title>
    <updated>2023-06-03T17:37:57.934684+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-September/000755.html" rel="alternate"/>
    <summary>A new proposal for a protocol to replace the current flood-the-network style route discovery for the Lightning Network has been put forward. The proposed protocol involves each node knowing its own local network topology and querying a number of connections for routes to the intended destination. This approach makes route discovery less taxing on the network in terms of bandwidth and storage space. When a node joins the network, it requests local network topology information from all its channels for information about channels 1 hop beyond, then requests topology information for channels 2 hops beyond until it has filled its cache to its satisfaction. When a node receives an announcement message from a node joining the network, it will store that node's info in its cache and forward that info to any node that's subscribed to topology changes that fall within the relevant distance.When a node wants to construct a route for a transaction, it checks to see if it has a path to that node in its cache, finds the cost of the cheapest path it has, asks all the channels on the edge of its cached local view for their cheapest path, and constructs a path when it gets all the responses. When a node receives a path request from a node, it checks its cache for its cheapest cache-only path, asks nodes on the edge of its cached local view for their cheapest path, and reports the results that satisfy the max-cost requirements of the requesting node.Laolu, a co-author of the Flare paper, has responded to the proposed protocol using a technical mailing list. Laolu explains that the proposed protocol is essentially Dynamic Source Routing (DSR) with a mix of components from Fisheye State Routing (FSR), making it a hybrid protocol that combines reactive and proactive elements to achieve its goals. Laolu stresses that asking nodes for a path to a destination defeats the purpose of using onion routing and suggests exploring more scalable routing protocols like distance vector-based algorithms instead. Overall, the proposed protocol keeps both node-announcement messages and route request messages highly localized, which can help reduce the burden on the network and improve efficiency. The system's layout allows for multiple heterogeneous routing protocols to be used within the network, similar to the Internet's eBGP vs iBGP, allowing different sub-graphs to choose protocols that best suit their goals in light of the tradeoffs.</summary>
    <published>2017-09-04T09:13:15+00:00</published>
  </entry>
</feed>
