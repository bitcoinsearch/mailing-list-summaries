<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning in the setting of blockchain hardforks</title>
  <updated>2023-06-02T01:12:07.675865+00:00</updated>
  <author>
    <name>Martin Schwarz 2017-08-17 08:53:22</name>
  </author>
  <author>
    <name>Christian Decker 2017-08-17 10:39:54</name>
  </author>
  <author>
    <name>Rusty Russell 2017-08-21 02:20:45</name>
  </author>
  <author>
    <name>Martin Schwarz 2017-08-17 08:24:02</name>
  </author>
  <link href="lightning-dev/Aug_2017/000745_Lightning-in-the-setting-of-blockchain-hardforks.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2017/000746_Lightning-in-the-setting-of-blockchain-hardforks.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2017/000748_Lightning-in-the-setting-of-blockchain-hardforks.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2017/000747_Lightning-in-the-setting-of-blockchain-hardforks.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning in the setting of blockchain hardforks</title>
    <updated>2023-06-02T01:12:07.675865+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-August/000745.html" rel="alternate"/>
    <summary>The email exchange between Christian and Martin discusses the challenges of using Lightning on or across permanent forks of a parent blockchain that share the same genesis block. They suggest changing the definition of chain_id to the hash of the first block of the new branch and requiring replay and wipe-out protection to handle these challenges. However, they also consider the possible issues with slow block times and sudden loss of hashpower in almost frozen blockchains. The discussion then shifts to channels that are open during the fork and how to settle them. Rusty suggests a standalone "salvage" utility to retrieve lost funds.Christian and Rusty also discuss using the first forked block as the genesis block for a forkchain, while keeping the non-forked blockchain on the original genesis hash to avoid disruption. They mention the difficulty that arises if one chain does not declare itself as the forked chain. The writer seeks input and guidance on using Lightning in the setting of hardforks, particularly with regards to the chain_id. The writer wonders if requirements for replay and wipe-out protection can be relaxed given slow block times and potential loss of hashpower. Additionally, the writer asks if there has been any prior discussion or study of Lightning in this context.</summary>
    <published>2017-08-17T08:53:22+00:00</published>
  </entry>
</feed>
