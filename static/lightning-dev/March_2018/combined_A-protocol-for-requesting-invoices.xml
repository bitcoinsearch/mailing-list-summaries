<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A protocol for requesting invoices</title>
  <updated>2023-06-03T18:30:28.316565+00:00</updated>
  <author>
    <name>Corné Plooy 2018-03-08 15:19:56</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-09 04:28:34</name>
  </author>
  <author>
    <name>Corné Plooy 2018-03-15 15:48:32</name>
  </author>
  <author>
    <name>Melvin Carvalho 2018-03-20 13:11:16</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-21 04:02:39</name>
  </author>
  <author>
    <name>Andy Schroder 2018-03-10 05:16:14</name>
  </author>
  <author>
    <name>Corné Plooy 2018-03-15 14:29:30</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-16 00:31:28</name>
  </author>
  <author>
    <name>Andy Schroder 2018-03-16 04:11:31</name>
  </author>
  <author>
    <name>Corné Plooy 2018-03-19 13:59:11</name>
  </author>
  <author>
    <name>Andy Schroder 2018-03-21 05:50:43</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-16 10:56:36</name>
  </author>
  <author>
    <name>Corné Plooy 2018-03-19 12:06:03</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-19 14:27:00</name>
  </author>
  <author>
    <name>Corné Plooy 2018-03-20 12:59:28</name>
  </author>
  <author>
    <name>Andy Schroder 2018-03-21 05:45:44</name>
  </author>
  <link href="lightning-dev/March_2018/001077_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001078_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001088_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001112_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001113_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001079_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001087_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001089_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001091_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001104_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001115_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001092_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001102_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001105_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001111_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001114_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A protocol for requesting invoices</title>
    <updated>2023-06-03T18:30:28.316565+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001077.html" rel="alternate"/>
    <summary>On the Lightning-dev mailing list, Corné Plooy proposed an idea for using Lightning for various types of payments. The proposal suggests having a direct line of communication between payer and payee instead of BOLT11-style interaction. This would make Lightning more convenient for use cases such as salary payments or direct pay-out of cryptocurrency bought on an exchange. While the idea is still in its early stages, Plooy has registered it under BOLT #12 and provided a detailed outline of his proposal in a GitHub repository.Several questions were raised by Andy Schroder in response to Plooy's proposal. In addition, ZmnSCPxj suggested that the Web Payments Working Group of W3C can provide better perspective on various payment use cases as well as their subtleties, which can help inform considerations in the proposed BOLT12. The group wants to achieve a generalized "payment instruction" that would be capable of expressing other messages like subscriptions, preauthorizations, refunds, and other sorts of payment-related instructions.The discussion between Corne and ZmnSCPxj involves various aspects of the Lightning Network. They discuss the partial onion routing in comparison to TOR's introduction points, and conclude that they are almost equivalent. The issue of unknown capacity arises, which is worse than when the payer can choose a route freely. They also consider using the same "introduction point" for all routes to ensure privacy.Regarding refunds, ZmnSCPxj suggests simplifying BOLT 12 by removing the possibility of refunds, which can be added later as an optional feature. In terms of URLs, they explain that a payee can request payment for a single transaction by handing over a URL that includes an invoice ID to a single payer. A payee can also hand over a URL without invoice ID, which can be used and reused by one or more payers. However, it is unclear how the payer derives the payment hash or whether they have to contact the payee again for a fresh payment hash.The use of a payee-determined route section protects the payee from being located by the payer. The proposal offers payee anonymity, but the issue of unknown capacity needs to be addressed. Despite many details not yet worked out, interested parties can read about it on GitHub where the author has registered bolt #12. The author invites feedback on the proposal.The conversation revolves around the security of payee location in Lightning Network transactions. The effectiveness of payee-determined routes is questioned, and using a TOR hidden service as the address for the LN node is suggested. Onion routing on LN protects both the payer and payee from being known easily by intermediate hop nodes. To ensure privacy, it is better to have lots of privacy, even when running only a single node. Different TOR addresses can be used for separating various activities.Refunds are used as solutions for when transactions get messy, and BOLT12 transactions that allow refunds and other updates are similar to microtransaction channels. The format of the description field is unspecified, and it is best to keep it that way. If capacity is the greatest concern as payee, a zero-hop partial onion can be supplied. A URL with an optional invoice ID can be provided to a single payer to request payment for a specific transaction or handed over without invoice ID to be used and re-used by one or more payers. Finally, the payer must contact the payee again to get a fresh payment hash specifically for the payer.</summary>
    <published>2018-03-08T15:19:56+00:00</published>
  </entry>
</feed>
