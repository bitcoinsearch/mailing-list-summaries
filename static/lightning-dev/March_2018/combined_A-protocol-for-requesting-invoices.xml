<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A protocol for requesting invoices</title>
  <updated>2023-06-02T02:26:06.718335+00:00</updated>
  <author>
    <name>Andy Schroder 2018-03-10 05:16:14</name>
  </author>
  <author>
    <name>Corné Plooy 2018-03-15 14:29:30</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-16 00:31:28</name>
  </author>
  <author>
    <name>Andy Schroder 2018-03-16 04:11:31</name>
  </author>
  <author>
    <name>Corné Plooy 2018-03-19 13:59:11</name>
  </author>
  <author>
    <name>Andy Schroder 2018-03-21 05:50:43</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-16 10:56:36</name>
  </author>
  <author>
    <name>Corné Plooy 2018-03-19 12:06:03</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-19 14:27:00</name>
  </author>
  <author>
    <name>Corné Plooy 2018-03-20 12:59:28</name>
  </author>
  <author>
    <name>Andy Schroder 2018-03-21 05:45:44</name>
  </author>
  <author>
    <name>Corné Plooy 2018-03-08 15:19:56</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-09 04:28:34</name>
  </author>
  <author>
    <name>Corné Plooy 2018-03-15 15:48:32</name>
  </author>
  <author>
    <name>Melvin Carvalho 2018-03-20 13:11:16</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-21 04:02:39</name>
  </author>
  <link href="lightning-dev/March_2018/001079_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001087_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001089_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001091_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001104_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001115_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001092_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001102_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001105_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001111_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001114_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001077_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001078_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001088_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001112_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001113_A-protocol-for-requesting-invoices.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A protocol for requesting invoices</title>
    <updated>2023-06-02T02:26:06.718335+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001079.html" rel="alternate"/>
    <summary>The Lightning-dev mailing list recently discussed the idea of using Lightning for various types of payments, including salary payments or direct pay-out of cryptocurrency bought on an exchange. The proposal involves having a direct line of communication between payer and payee instead of BOLT11-style interaction, which has been registered under BOLT #12. This idea was suggested by Corné Plooy, who believes that Lightning is currently fine for customer/shop type interactions but inconvenient for other use cases. The proposal also offers payee anonymity. However, many details of the proposal are still not worked out.In a related discussion about the security of Lightning Network transactions, Andy Schroder raised some questions about the process. Corné Plooy responded to the queries and explained that TOR onion routing is not the same as Lightning onion routing, which is used for anonymous payments. Plooy also proposed using the same "introduction point" for all routes to maintain privacy. The conversation explored different approaches to protect the payee's location from the payer, including using TOR hidden services and partially payee-determined routes. The article suggests that using different TOR addresses for separating various activities can help keep payer/payee communication unlinked from their node ID. Depending on the transport layer used, different types of URLs may be generated. The conversation also explored enforcing a maximum payment amount that can be refunded and the format of the description field in BOLT 12 transactions that allow refunds and other updates. Refunds have similarities to microtransaction channels, and the state of the transaction needs to be signed by whoever may possibly have a legitimate interest against the update.Finally, the discussion explored the potential of NFC or radio communication for payer/payee communication to limit what the payee can use the connection for. The context concludes with discussions on using partial onions as a generic solution to capacity issues. Overall, the Lightning-dev mailing list explored different approaches to make Bitcoin payments more convenient and secure for various use cases.</summary>
    <published>2018-03-10T05:16:14+00:00</published>
  </entry>
</feed>
