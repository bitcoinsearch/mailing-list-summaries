<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Impact of eltoo loss of state</title>
  <updated>2023-06-03T05:12:10.951910+00:00</updated>
  <author>
    <name>Anthony Towns 2021-07-12 08:17:49</name>
  </author>
  <author>
    <name>Martin Habov≈°tiak 2021-07-15 10:28:17</name>
  </author>
  <author>
    <name>Anthony Towns 2021-07-21 06:39:13</name>
  </author>
  <author>
    <name>Jeremy 2021-07-27 18:21:48</name>
  </author>
  <author>
    <name>Jeremy 2021-07-12 22:20:41</name>
  </author>
  <author>
    <name>Christian Decker 2021-07-14 14:44:24</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-07-27 11:44:21</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-07-27 16:53:14</name>
  </author>
  <author>
    <name>Jeremy 2021-07-12 22:16:43</name>
  </author>
  <author>
    <name>Christian Decker 2021-07-20 10:57:17</name>
  </author>
  <link href="lightning-dev/July_2021/003127_Impact-of-eltoo-loss-of-state.xml" rel="alternate"/>
  <link href="lightning-dev/July_2021/003134_Impact-of-eltoo-loss-of-state.xml" rel="alternate"/>
  <link href="lightning-dev/July_2021/003137_Impact-of-eltoo-loss-of-state.xml" rel="alternate"/>
  <link href="lightning-dev/July_2021/003141_Impact-of-eltoo-loss-of-state.xml" rel="alternate"/>
  <link href="lightning-dev/July_2021/003131_Impact-of-eltoo-loss-of-state.xml" rel="alternate"/>
  <link href="lightning-dev/July_2021/003133_Impact-of-eltoo-loss-of-state.xml" rel="alternate"/>
  <link href="lightning-dev/July_2021/003139_Impact-of-eltoo-loss-of-state.xml" rel="alternate"/>
  <link href="lightning-dev/July_2021/003140_Impact-of-eltoo-loss-of-state.xml" rel="alternate"/>
  <link href="lightning-dev/July_2021/003130_Impact-of-eltoo-loss-of-state.xml" rel="alternate"/>
  <link href="lightning-dev/July_2021/003136_Impact-of-eltoo-loss-of-state.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Impact of eltoo loss of state</title>
    <updated>2023-06-03T05:12:10.951910+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-July/003127.html" rel="alternate"/>
    <summary>The scenario described involves payments being made in eltoo channels from Alice to Bob to Carol. When Bob's lightning node crashes and he recovers from an old backup, Alice and Carol drop newer channel states onto the blockchain, but the timeout for the payments is a few hours away. Carol will reveal the point preimages on-chain via adaptor signatures, but Bob won't be able to decode those adaptor signatures because those signatures will need to change for each state.For any payments that timeout, Carol doesn't have any particular incentive to make it easy for Bob to claim the refund, and Bob won't have the adaptor signatures for the latest state to do so. However, Alice will be able to claim refunds easily. To fix this issue, Carol can steal funds meant to have been refunded provided she gives Bob the option of claiming them first, which incentivizes everyone to negotiate cooperative closes instead of going on-chain.To avoid using the eltoo protocol on-chain, nodes should share state on reconnection, and if a node does not do this, close the channel and put the node on your enemies list. If there is disagreement on what the current state is, share the most recent state, and if the other guy's state is more recent, update the state to match theirs if all the signatures verify. Always negotiate a mutual/cooperative close if possible.To continue the channel after restoring an old state from backup, set the channel state index based on real-time. If connectivity is lost to a channel partner, one will have to pay any PTLCs that were going to them and won't be able to claim the PTLCs that were funding them. There is a suggestion to limit the total value of inbound PTLCs for forwarding that one is willing to accept at any one time.Lastly, the context notes that layered commitments seem to make channel factories complicated. Christian Decker and AJ discussed the safety of restoring an eltoo channel from a backup that is out of date. While in LN-penalty loss-of-state equates to loss-of-funds, in eltoo this is reduced to impact only funds that are in a PTLC at the time of the loss-of-state. AJ suggested two ideas to ensure the safe restoration of an eltoo channel from a backup: one is to use peer-storage, where they deposit an encrypted bundle with peers, and which they expect the peers to return, and the other is to hide the fact that they forgot some state until the data has been exchanged to ensure that peers always return the latest snapshot of whatever they gave them. However, these ideas only reduce the chance that they will not have the latest state but do not eliminate it.</summary>
    <published>2021-07-12T08:17:49+00:00</published>
  </entry>
</feed>
