<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - LN Summit 2023 Notes</title>
  <updated>2023-07-27T02:08:49.731459+00:00</updated>
  <author>
    <name>Antoine Riard 2023-07-26 00:57:39+00:00</name>
  </author>
  <author>
    <name>Carla KirkCohen  + 2023-07-19 13:56:11+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj  + 2023-07-24 08:13:49+00:00</name>
  </author>
  <author>
    <name>Antoine Riard  + 2023-07-20 09:33:35+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2023-07-26 08:05:23+00:00</name>
  </author>
  <author>
    <name>Carla KirkCohen  + 2023-07-19 13:56:11+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj  + 2023-07-24 08:13:49+00:00</name>
  </author>
  <author>
    <name>Antoine Riard  + 2023-07-20 09:33:35+00:00</name>
  </author>
  <link href="lightning-dev/July_2023/004018_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <link href="lightning-dev/July_2023/004014_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <link href="lightning-dev/July_2023/004016_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <link href="lightning-dev/July_2023/004015_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <link href="lightning-dev/July_2023/004020_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <link href="lightning-dev/July_2023/004014_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <link href="lightning-dev/July_2023/004016_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <link href="lightning-dev/July_2023/004015_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - LN Summit 2023 Notes</title>
    <updated>2023-07-27T02:08:49.731537+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-July/004018.html" rel="alternate"/>
    <summary>The discussions at the summit covered various topics related to the Lightning Network protocol. One proposal suggested not using MuSig2 signing for commitment transactions, but instead adding a tapscript branch for unilateral closes. MuSig2 signing would only be used for mutual closes after negotiating closing fees. This approach aims to reduce the need for nonce storage, as only mutual closes require it. The hope is that mutual closes will dominate over unilateral closes.Unconditional fees were discussed as the simplest monetary solution for pricing scarce resources. These fees only need to be small compared to success case fee budgets, and even with high failure rates, success is still possible with enough retries. However, some argue that unconditional fees should be dynamic rather than static, as rational economic actors price their liquidity based on demand.Setting a failure threshold to prevent attacks was deemed difficult, as attackers can aim to fall just below that threshold and attack individual channels through multiple channels. Reputation-based solutions also have limitations, as they can be gamed. If reputation accumulation matches the regular operation of nodes on the network, reputation will naturally build up over time. However, if it deviates, attackers can gain more reputation than regular nodes by performing certain actions.Jamming, in the context of node appreciation of local resources, refers to a subjective valuation. It depends on the characteristics of a forwarding node and how it deviates from a stereotypical one.The ideal solution discussed would be to pay for the amount of time an HTLC is held in flight. However, proving time when things go wrong is challenging without a universal clock, which Bitcoin's chain height advances do not provide due to their coarsely grained nature.A NACK (negative acknowledgment) indicates that all updates have been ignored, and the channel is progressing to the next commitment. However, using a NACK to halt channel progress without reputation downgrade may be considered a layer violation issue.The conversations also covered other topics related to the Lightning Network protocol. V3 transactions were discussed, with a suggestion to limit their use to unilateral closes for now. Taproot specifications are still in draft, with notable changes such as more complex anchors and the use of NUMS points. Different versions of the Gossip protocol were compared, with Gossip 1.5 being favored due to its inclusion of amount binding.Approaches for achieving multi-sig channel parties were explored, including using scripts, FROSTy, and recursive musig. Two implementation methods for PTLCs (Payment-Point Timelocked Contracts) were discussed: regular musig and adaptor signatures.Channel jamming mitigation was addressed, with monetary, reputation-based, and scarce resource-based solutions identified. A hybrid approach combining unconditional fees and reputation systems was considered the most promising.The discussions also touched on versioning, async payments/trampoline, and communication within the Lightning Network community. Overall, the conversations provided insights into ongoing development and improvements in the Lightning Network protocol.</summary>
    <published>2023-07-26T00:57:39+00:00</published>
  </entry>
</feed>
