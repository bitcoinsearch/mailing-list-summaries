<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - LN Summit 2023 Notes</title>
  <updated>2023-07-29T19:18:53.440531+00:00</updated>
  <author>
    <name>Carla KirkCohen 2023-07-19 13:56:11+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-07-20 09:33:35+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-07-24 08:13:49+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-07-26 00:57:39+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2023-07-26 08:05:23+00:00</name>
  </author>
  <link href="lightning-dev/July_2023/004014_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <link href="lightning-dev/July_2023/004015_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <link href="lightning-dev/July_2023/004016_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <link href="lightning-dev/July_2023/004018_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <link href="lightning-dev/July_2023/004020_LN-Summit-2023-Notes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - LN Summit 2023 Notes</title>
    <updated>2023-07-29T19:18:53.440531+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-July/004014.html" rel="alternate"/>
    <summary>In late June, the annual Lightning Network specification meeting was held in New York City. Attendees experimented with taking transcript-style notes to capture the discussions that occurred during the summit. The notes, which can be found at this link, aimed to provide a comprehensive account of the conversations rather than a concise summary. Topics covered included V3 transactions, Taproot upgrade, Gossip protocol versions, multi-sig channel parties, PTLCs, and channel jamming mitigation.Regarding V3 transactions, it was suggested to limit their use to unilateral closes for the time being. Taproot specifications are still in draft, with changes such as more complex anchors and the use of NUMS points. Different versions of the Gossip protocol were compared, favoring Gossip 1.5 due to its inclusion of amount binding. Approaches for achieving multi-sig channel parties were explored, including scripts, FROSTy, and recursive musig. Two implementation methods for PTLCs were discussed: regular musig and adaptor signatures. Channel jamming mitigation was addressed, with potential solutions involving monetary, reputation-based, and scarce resource-based approaches. A hybrid approach combining unconditional fees and reputation systems was considered promising.A proposal was made to not use MuSig2 signing for commitment transactions, but instead add a tapscript branch for unilateral closes. MuSig2 signing would only be used for mutual closes after negotiating closing fees. This approach reduces the need for nonce storage, as nonces can be kept in volatile RAM and removed on disconnection. The hope is that mutual closes will dominate over unilateral closes. Unconditional fees were seen as a simple monetary solution for pricing scarce resources, with the suggestion that they should be dynamic rather than static. However, there was a debate about the effectiveness of setting a failure threshold to prevent attacks, as attackers could aim to fall just below the threshold. Reputation-based solutions also have limitations, as attackers can gain more reputation than regular nodes by performing certain actions.The concept of jamming, which refers to node appreciation of local resources, was discussed. The subjective valuation depends on the characteristics of a forwarding node and how it deviates from a stereotypical one. Paying for the time an HTLC is held in flight was considered an ideal solution, but proving time without a universal clock is challenging. NACKs (negative acknowledgments) were mentioned as a means to indicate that all updates have been ignored, but using them to halt channel progress without reputation downgrade may be considered a layer violation issue.Another discussion revolved around commitment transactions in the Signal group. A proposal was made to use tapscript branches for unilateral closes instead of MuSig2 signing. It was suggested that nonces could be kept in volatile RAM, eliminating the need for persistent storage. The issue of static fees in the Lightning Network was debated, with arguments for dynamic fees based on demand. Reputation accumulation in the network was also discussed, with the goal of aligning it with normal node operation to prevent attackers from gaining advantages. The concept of jamming, subjective resource valuation, and challenges in implementing an ideal payment system were explored.In an email thread, participants discussed various aspects of Bitcoin network policies and proposed solutions to address specific issues. The "top of mempool" assumption, lightning unilateral closes, zero-fee transactions with ephemeral outputs, trimmed HTLCs, and channel jamming mitigation were among the topics examined. The possibility of miners not caring about policy restrictions in the future was discussed, with arguments that such restrictions are not necessary from a mining perspective. Concerns were raised about determining small fees and potential market influence, with suggestions that market dynamics can help regulate fee levels. The challenge of proving time and reliance on cooperation were also highlighted.Overall, the discussions provided valuable insights into ongoing development and improvements in the Lightning Network protocol, as well as proposals and considerations for commitment transactions, fees, reputation, and channel progress.</summary>
    <published>2023-07-19T13:56:11+00:00</published>
  </entry>
</feed>
