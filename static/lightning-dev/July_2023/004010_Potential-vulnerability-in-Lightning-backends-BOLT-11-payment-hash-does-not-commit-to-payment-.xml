<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Potential vulnerability in Lightning backends: BOLT-11 "payment hash" does not commit to payment!</title>
  <updated>2023-08-11T15:49:54.325909+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2023-07-16 11:32:08+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Potential vulnerability in Lightning backends: BOLT-11 "payment hash" does not commit to payment!</title>
    <updated>2023-08-11T15:49:54.325909+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-July/004010.html" rel="alternate"/>
    <summary>To pay invoices generated by lnd, you can use the API mentioned here: https://lightning.engineering/api-docs/api/lnd/router/send-payment-v2. This API allows you to set the `allow_self_payment` field. Although it creates a circular route through the network, it is commonly used for circular rebalancing. Alternatively, you can set up another node and fund bi-lateral "trusted channels" to enable invoice payments without involving the actual network route. These channels will never confirm on the blockchain. This method does not require any external software and provides the usual payment and invoice records. Another option is to use the `"allow-circular-route` flag, which enables double-backing on the same channel for the route.</summary>
    <published>2023-07-16T11:32:08+00:00</published>
  </entry>
</feed>
