<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Scaling Lightning With Simple Covenants</title>
  <updated>2023-10-11T01:53:39.212520+00:00</updated>
  <author>
    <name>jlspc 2023-10-06 16:26:33+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Scaling Lightning With Simple Covenants</title>
    <updated>2023-10-11T01:53:39.212559+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004121.html" rel="alternate"/>
    <summary>In the email, John discusses various aspects of Lightning network and channel resizing. He mentions that hierarchical channels can use HTLCs to send Lightning channel capacity over the Lightning network. This allows for off-chain channel resizing between channels that are not in the same pool.John also introduces a new version of the paper that includes a description of how to address the fragmentation costs imposed by a casual user going on-chain in a timeout-tree. The idea is to require casual users to reveal secrets (hash preimages) that only they know in order to put timeout-tree transactions on-chain. A fee-penalty output is then added to each leaf transaction to compensate the funder for the fragmentation costs.The new version of the paper also highlights the advantage of passive rollovers in eliminating the risk of HTLC-withholding attacks. Passive rollovers do not require the use of the Lightning network, thus reducing the on-chain footprint.Regarding the problem of reducing on-chain footprint in mass exit cases, John refers to "short-cut" transactions defined in Section 5.4 of the revised paper. These transactions propose a solution for addressing the logarithmic blow-up of putting a control transaction defined by a covenant tree on-chain.John clarifies that there is no case where multiple commitment transactions can spend an output from the same state transaction. Each user's state transaction can only be spent by their own commitment transaction. Furthermore, each commitment transaction at the hierarchical channel level requires signatures from all three users, ensuring that only the correct commitment transaction can spend the funding transaction output.In conclusion, the email covers various topics related to Lightning network, hierarchical channels, channel resizing, fragmentation costs, passive rollovers, HTLC-withholding attacks, and reducing on-chain footprint in mass exit cases. John provides insights and references to specific sections and figures in the revised version of the paper.</summary>
    <published>2023-10-06T16:26:33+00:00</published>
  </entry>
</feed>
