<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposed BIP for OP_CAT</title>
  <updated>2023-10-30T14:44:04.339190+00:00</updated>
  <author>
    <name>James O'Beirne 2023-10-26 16:04:52+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposed BIP for OP_CAT</title>
    <updated>2023-10-30T14:44:04.339190+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/022092.html" rel="alternate"/>
    <summary>The email discusses the confusion surrounding the enthusiasm for a "just CAT" softfork and questions its effectiveness. The author mentions that there is no compelling example that has both working code and relies solely on CAT. They express their confusion regarding the popularity of a CAT-only fork and suggest that more advanced features like "introspection" opcodes and/or CHECKSIGFROMSTACK would be needed to achieve actually interesting covenants. The author believes that a CAT-based approach would be more circuitous than alternative solutions that have been discussed for years.

They mention that Andrew's posts, while well written and foundational, do not provide a design for vaults that would actually be used. They argue that CAT alone, without many auxiliary introspection opcodes, does not facilitate vaults that address the usability hurdles described in a paper they reference (https://jameso.be/vaults.pdf). They give examples such as batched withdrawals and partial unvaultings that don't seem possible with just CAT. Even with introspection opcodes, they mention that a prototype by Burak (https://brqgoo.medium.com/emulating-op-vault-with-elements-opcodes-bdc7d8b0fe71) was not able to handle revaulting, which they consider an important feature for usability.

The author concludes by asking to what extent Taproot obviates the use of CAT for these purposes.</summary>
    <published>2023-10-26T16:04:52+00:00</published>
  </entry>
</feed>
