<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your	mempool are belong to us"</title>
  <updated>2023-10-18T01:57:50.985724+00:00</updated>
  <author>
    <name>ziggie1984 2023-10-17 07:21:35+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your	mempool are belong to us"</title>
    <updated>2023-10-18T01:57:50.985907+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004124.html" rel="alternate"/>
    <summary>In this email, the sender is thanking Antoine for a detailed explanation about pinning attacks. They mention that these types of attacks seem plausible, especially if the attacker targets channels with high capacity and loose channel policies. The sender requests more details about the attack observed on the mainnet and asks if there are any tools available to monitor this suspicious behavior in parallel to their lightning software.The sender also highlights that it's not necessary to control two neighboring nodes to target a victim. They explain that by cycling the attack on the tail side and delaying the confirmation of the htlc-timeout covenant, the peer at the front of the victim will force-close the channel and claim their timeout-path in the same way, effectively canceling the initial htlc amount back to the attacker's initial node.Additionally, the sender suggests introducing a feebumping race between the victim and the attacker on the tail side of the attack to make it even more costly. They propose that when lightning nodes see the preimage in the mempool, they should aggressively fee-bump (race) the htlc-output in addition to grabbing the preimage and claiming it on the incoming. This would be feasible only with anchor channels where fees can be added to the htlc-covenant. By using fees up to 50% of the htlc value, the attacker would incur heavy losses when attempting to steal the htlc after cycling it 144 times.To further mitigate these attacks, the sender suggests restricting the amount and number of HTLCs for big channels to unknown peers. They explain that this restriction would quickly result in a loss for the attacker when trying to steal small HTLCs.Overall, the email discusses the plausibility of pinning attacks, requests more information about an observed attack, proposes additional mitigation strategies, and suggests monitoring tools for suspicious behavior in parallel to lightning software.</summary>
    <published>2023-10-17T07:21:35+00:00</published>
  </entry>
</feed>
