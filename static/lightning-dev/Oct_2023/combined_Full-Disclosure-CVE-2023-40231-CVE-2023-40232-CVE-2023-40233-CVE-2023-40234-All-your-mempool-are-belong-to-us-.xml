<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your	mempool are belong to us"</title>
  <updated>2023-10-18T01:58:03.169392+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-10-17 10:34:04+00:00</name>
  </author>
  <author>
    <name>ziggie1984 2023-10-17 07:21:35+00:00</name>
  </author>
  <link href="lightning-dev/Oct_2023/004125_Full-Disclosure-CVE-2023-40231-CVE-2023-40232-CVE-2023-40233-CVE-2023-40234-All-your-mempool-are-belong-to-us-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/004124_Full-Disclosure-CVE-2023-40231-CVE-2023-40232-CVE-2023-40233-CVE-2023-40234-All-your-mempool-are-belong-to-us-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your	mempool are belong to us"</title>
    <updated>2023-10-18T01:58:03.169440+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004125.html" rel="alternate"/>
    <summary>In this email thread, the sender provides a rephrased explanation of a pinning attack on the Lightning Network (LN). The attack involves three nodes, A, B, and C, connected by channels. The sender explains that the attack exploits a specific scenario where node B has a `cltv_expiry_delta` value of 44 or lower.The attack begins with node A routing an HTLC (Hash Time Lock Contract) from A to B, which is then forwarded from B to C. If C suddenly goes offline, all the signed transactions, including the commitment transaction and HTLC-timeout transactions, become "stuck" at the feerate at the time.At block height 100, node B notices that the HTLC timelock has expired without C claiming it. As a result, node B forces the B-C channel onto the blockchain. However, due to increased onchain feerates, the commitment transaction and HTLC-timeout transaction do not confirm.Meanwhile, node A remains online with B and updates the onchain fees of the A-B channel's pre-signed transactions to the latest fees. At block height 144, node B still cannot claim the A-B HTLC, so node A drops the A-B channel onto the blockchain. Because the fees are up-to-date, this confirmation happens immediately, and node A is able to recover the HTLC funds.However, the pre-signed transactions for the B-C channel still have the old, uncompetitive feerates. At this point, node C broadcasts an HTLC-success transaction with high feerates that Child-Pays-For-Parent (CPFPs) the commitment transaction. This action replaces the HTLC-timeout transaction, which has a low feerate. As a result, C can obtain the value of the HTLC, but B can no longer use the knowledge of the preimage because its own incoming HTLC has already been confirmed as claimed by A.The sender then asks if their restatement of the attack is accurate. They also explain why the HTLC-timeout transaction is pre-signed and why node B cannot feebump it. The Poon-Dryja mechanism infects the HTLCs with a penalty case, which modifies the structure of the HTLCs on the commitment transaction held by B. This modification includes adding a revocation branch and including C in the branch claimable by B in the "plain" HTLC.To prevent B from cheating using an old revoked transaction, the HTLC-timeout transaction spends the B-C-OP_CLTV branch and outputs to a new branch with a relative timelock. Unfortunately, this means that the HTLC-timeout transaction is pre-signed and has a specific feerate. Changing the feerate requires both B and C to agree and re-sign the transaction.The sender highlights that node C has an advantage in fee negotiation because it can Replace-By-Fee (RBF) the HTLC-timeout transaction with fewer bytes compared to B. They suggest that in this scenario, if a lightning node sees the preimage in the mempool and can also claim the output via the HTLC-timeout path, it should aggressively fee-bump its HTLC-output to make the attack more costly for the attacker.Additionally, the sender proposes adding another mitigation for node runners to restrict the amount and number of HTLCs for big channels to unknown peers, as this would limit the potential losses when trying to steal small HTLCs.In conclusion, the email discusses the details of a pinning attack on the Lightning Network, explains the structure of the HTLCs, suggests possible mitigations, and raises questions about monitoring tools and additional attack variations.</summary>
    <published>2023-10-17T10:34:04+00:00</published>
  </entry>
</feed>
