<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Batch exchange withdrawal to lightning requires covenants</title>
  <updated>2023-10-25T01:58:31.529060+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-10-24 08:09:45+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Batch exchange withdrawal to lightning requires covenants</title>
    <updated>2023-10-25T01:58:31.529086+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004179.html" rel="alternate"/>
    <summary>In the email, Bastien is responding to Dave's suggestion and discussing a solution for minimizing on-chain transaction bytes. Bastien's goal is to design something with the smallest on-chain footprint possible. He proposes an alternative approach that avoids settlement transactions and produces only one transaction.

With Dave's example participants, Bastien's proposal would result in a single splice transaction with 4 inputs and 3 outputs. The inputs include E's funding input, {A,D}'s current channel input, {B,E}'s current channel input, and {C,F}'s current channel input. The outputs consist of {A,D}'s new channel output, {B,E}'s new channel output, and {C,F}'s new channel output.

The number of inputs and outputs remains the same, but the advantage of Bastien's approach is that common transaction fields are only paid for once instead of N times, where N represents the size of the batch. This could potentially be significant in larger batches and in a high-fee future.

In summary, Bastien suggests a solution that eliminates settlement transactions and reduces the on-chain footprint by consolidating the transaction into a single splice transaction. This approach offers potential advantages, particularly in scenarios involving larger batches and high fees.</summary>
    <published>2023-10-24T08:09:45+00:00</published>
  </entry>
</feed>
