<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Solving CoinPool high-interactivity issue with cut-through update of Taproot leaves</title>
  <updated>2023-11-01T20:59:46.835577+00:00</updated>
  <author>
    <name>Johan Tor√•s Halseth 2023-10-12 09:31:26+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Solving CoinPool high-interactivity issue with cut-through update of Taproot leaves</title>
    <updated>2023-11-01T20:59:46.835577+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/021994.html" rel="alternate"/>
    <summary>Johan provides an update to Antoine on a demo script he created for the unilateral exit of participants in a Coinpool using OP_CCV. The script demonstrates how pubkeys and balances can be committed, data traversal and modification, and signature validation for exiting users. The size of the script is 142 bytes, which can potentially be optimized by 20-30%. The witness, including the script, is 647 bytes, with most of the size coming from merkle inclusion proofs. It is expected that the size will grow by O(m logn) for m users exiting a pool of n participants.

In cooperative settings, N participants can jointly create a coinpool using the exit scripts mentioned above, along with a cooperative keyspend path. If a user goes offline, the remaining online users can use the unilateral exit clause to exit into a new coinpool and continue operations once the transaction confirms. Johan expresses interest in exploring the possibility of performing this exit off-chain, allowing the offline user to revert back to the original coinpool output when they come back online. This would involve updating the balances according to any changes that occurred while the user was offline. Johan believes this could work assuming APO (Assuming Partial Offline) conditions are met, as long as the committed balances and keys remain compatible. The only change required would be updating the merkle inclusion proofs in the jointly signed transactions, since the offline user now spends from an output where they have exited. All signatures would remain valid.

Johan asks Antoine if this functionality aligns with what he was looking for.</summary>
    <published>2023-10-12T09:31:26+00:00</published>
  </entry>
</feed>
