<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Removing channel reserve for mobile wallet users</title>
  <updated>2023-10-21T01:56:44.721870+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-10-19 07:49:50+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Removing channel reserve for mobile wallet users</title>
    <updated>2023-10-21T01:56:44.721897+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004146.html" rel="alternate"/>
    <summary>The email discusses the assumption that non-custodial wallets are unable to react to revoked commitments. The sender emphasizes that if this assumption is made, there are already trust model issues present. The important parameter to consider is the "to_self_delay" which is typically set to two weeks. It is mentioned that the phone only needs to be online once every two weeks to detect and react to the revoked commit. Mobile wallets should run frequent background jobs to perform these checks and notify the user if they have been unable to run the checks due to limited CPU time. This is what Phoenix does.The sender also mentions that removing the reserve requirement eliminates the need for a distinction between different outputs. There will always be at least one output since the channel total capacity remains greater than dust. This distinction is not new and does not complicate the protocol. The sender states that negotiating 0-reserve is as simple as setting a feature bit or adding a TLV (Type-Length-Value) to existing messages.In conclusion, the email addresses the assumption regarding non-custodial wallets' ability to react to revoked commitments. It highlights the importance of the "to_self_delay" parameter and suggests that mobile wallets should run background jobs to perform checks and notify users. Furthermore, it discusses the removal of the reserve requirement and the simplicity of negotiating 0-reserve.</summary>
    <published>2023-10-19T07:49:50+00:00</published>
  </entry>
</feed>
