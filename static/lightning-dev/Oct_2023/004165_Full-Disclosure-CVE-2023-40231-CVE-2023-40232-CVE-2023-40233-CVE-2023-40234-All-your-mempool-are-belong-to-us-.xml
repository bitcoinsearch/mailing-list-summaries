<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-25T17:53:13.077977+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2023-10-21 00:18:58+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-25T17:53:13.077977+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004165.html" rel="alternate"/>
    <summary>The email discusses the scenario in which there are three participants: Carol, Bob, and Alice. Mallory, a potential attacker, can only replace an HTLC-timeout transaction if she is directly connected to the peer she wants to target through a direct channel. It is not possible for a third party to unilaterally sweep an HTLC using only the preimage. 

HTLC transactions are two-party contracts with the public keys of both participants hardcoded into the contract. Once the timelock of an HTLC expires and the receiver has access to the preimage, a bidding war ensues. If the receiver confirms their success transaction in time, they receive the funds, and the sender can propagate the preimage backwards in the route, ensuring all parties are compensated. On the other hand, if the sender wins, it is as if nothing happened except for the fees paid at the last mile, and all other hops can safely cancel their HTLCs on-chain.

Most implementations today monitor the mempool for preimages so that they can resolve incoming HTLCs off-chain as quickly as possible. The described attack relies heavily on the attacker's ability to precisely replace transactions across the entire mempool. If any honest party sees the preimage in the mempool, they can settle back off-chain, potentially gaining funds if their timeout can confirm first. 

Executing such an attack requires precision over hours or even days. Within the Lightning Network, nodes set a security parameter known as the CLTV delta, which determines the time they have before outgoing and incoming HTLCs expire. Increasing this value makes the attack more challenging as the attacker must balance low enough fees to avoid being mined, but high enough to replace the defender's transaction. If the transaction is mined, the attack fails.

One approach the attacker can take is to locate the defender's node and launch the replacement attack directly in their mempool. However, this would expose the preimage to the defender, allowing them to settle everything back and thwart the attack. Additionally, the attacker must execute the replacement attack iteratively across a real network, accounting for network jitter, propagation delay, and geographic heterogeneity. Even slight timing discrepancies can result in confirmation or the revelation of the preimage in the mempool.

For anchor channels, the defender can attach arbitrary inputs to the second-level HTLCs for fee bumping purposes. This allows them to increase their fee iteratively using Replace-by-Fee (RBF) as the expiry deadline approaches, further increasing the cost for the attacker. 

It is important to note that this attack cannot be launched indiscriminately across the network. It requires per-node setup by the attacker, as they need to consume UTXOs to create a chain of transactions for the replacement attack. These transactions also need to be maintained in a state of non-confirming superposition. Overall, the attack is considered fragile due to the per-node setup, precise timing and execution requirements, non-confirming superposition of all transactions, and the need for instant propagation across the entire network while being obscured from the defender's point of view.

In summary, the email provides insights into the intricacies of launching the described attack on the Lightning Network. It emphasizes the need for precise execution, per-node setup, and non-confirming superposition of transactions. The bidding war between the receiver and sender, as well as the ability to increase fees through RBF, are discussed as mitigation strategies employed by defenders. However, the attack's success heavily relies on replacing transactions across the mempool without detection by honest parties.</summary>
    <published>2023-10-21T00:18:58+00:00</published>
  </entry>
</feed>
