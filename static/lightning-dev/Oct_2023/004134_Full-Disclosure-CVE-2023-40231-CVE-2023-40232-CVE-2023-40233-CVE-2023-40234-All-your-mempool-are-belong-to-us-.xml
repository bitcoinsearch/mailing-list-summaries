<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-19T01:53:53.161794+00:00</updated>
  <author>
    <name>Matt Corallo 2023-10-18 00:17:44+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-19T01:53:53.161831+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004134.html" rel="alternate"/>
    <summary>There is confusion surrounding the issue at hand and the proposed mitigations. It is important to note that the deployed mitigations are not expected to fully resolve the issue, and some argue that they serve more as a PR statement. Two mitigations have been discussed: mempool scanning and transaction re-signing/re-broadcasting.Mempool scanning involves regularly checking the mempool of a local node to detect if the replacement cycle is happening. However, this method only works if the first transaction is seen before it is replaced by the second transaction. Currently, most lightning nodes run on machines with a Bitcoin node on the same IP address, making it easy for an attacker to connect to the local node and quickly perform the replacement without the victim noticing. This discoverability is also true for mining pools, which means an attacker can target a miner's node directly, limiting the reach of the intermediate transaction to only miners and preventing the victim from discovering it.The second mitigation, re-signing and re-broadcasting the victim's transaction, may work if the attacker is lazy and has not completed their attack system. However, if the attacker has control over a large majority of the hashrate, they can aggressively cycle through replacements, significantly reducing the likelihood of the victim's transaction being confirmed.It is worth mentioning that the above scenarios assume an ideal network environment. The P2P network has its share of slow nodes and unpredictable behavior, so there is a small possibility that these mitigations could accidentally prevent an attack due to timing or other factors. However, this is far from being a comprehensive solution.Ultimately, the only effective fix for this issue would be if miners keep a history of transactions they have seen and attempt to include them in the mempool after a potential attack like this has occurred. This approach would require miners to re-evaluate transactions that were initially excluded due to the attack. Please note that the farewell part of the email has been excluded from this summary.</summary>
    <published>2023-10-18T00:17:44+00:00</published>
  </entry>
</feed>
