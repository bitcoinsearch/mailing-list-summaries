<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-11-01T21:06:47.291414+00:00</updated>
  <author>
    <name>Antoine Riard 2023-10-17 18:34:52+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-11-01T21:06:47.291414+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/022012.html" rel="alternate"/>
    <summary>The email discusses a scenario involving channels in the Bitcoin network, specifically the `A`, `B`, and `C` channels. The main focus is on the replacement mechanism of HTLC (Hash Time-Locked Contract) transactions and the exploitation that can occur within this mechanism.

In the scenario, `A` attempts to recover the funds from the `A====B` channel through the HTLC mechanism. However, the exploit lies in the replacement mechanism itself, rather than the fee rates or mempool congestion. This means that the fee rates and mempool congestion are not relevant considerations in this case.

`C` broadcasts an HTLC-success transaction at block height 144 and does so at every block between blocks 100 and 144. This high feerate transaction is used to replace `B`'s HTLC-timeout transaction. It is worth noting that `B` can feebump the HTLC-timeout for anchor output channels thanks to sighash_single | anyonecanpay on `C`'s signature.

To understand the details and technical aspects of this scenario, you can refer to the test provided at the following link: [GitHub Test Link](https://github.com/ariard/bitcoin/commit/19d61fa8cf22a5050b51c4005603f43d72f1efcf).</summary>
    <published>2023-10-17T18:34:52+00:00</published>
  </entry>
</feed>
