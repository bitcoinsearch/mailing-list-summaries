<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - OP_Expire and Coinbase-Like Behavior: Making HTLCs Safer by Letting Transactions Expire Safely</title>
  <updated>2023-11-14T02:10:32.703320+00:00</updated>
  <author>
    <name>Antoine Riard 2023-11-13 02:18:16+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-11-08 02:06:23+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-11-08 00:51:31+00:00</name>
  </author>
  <author>
    <name>Jorge Tim√≥n 2023-11-07 19:12:19+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-11-07 15:44:21+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-11-07 11:11:59+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-11-06 18:45:21+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-11-04 07:26:24+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-11-03 05:27:54+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-11-03 05:25:24+00:00</name>
  </author>
  <author>
    <name>Matt Morehouse 2023-11-02 17:07:39+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-11-02 06:26:38+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-11-02 05:24:36+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-10-23 15:45:44+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-10-23 15:45:44+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-10-23 11:10:56+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-10-23 11:10:56+00:00</name>
  </author>
  <author>
    <name>vjudeu at gazeta.pl 2023-10-22 08:30:01+00:00</name>
  </author>
  <author>
    <name>vjudeu at gazeta.pl 2023-10-22 08:30:01+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-10-21 10:31:05+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-10-21 10:31:05+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2023-10-21 08:58:32+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2023-10-21 08:58:32+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-10-21 00:09:16+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-10-21 00:09:16+00:00</name>
  </author>
  <link href="lightning-dev/Nov_2023/004199_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004196_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004195_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004194_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004193_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004192_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004191_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004189_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004188_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004187_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004186_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004185_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004184_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/022073_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/004174_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/022068_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/004173_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/004160_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/022061_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/022051_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/004170_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/022050_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/004159_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/022042_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/004163_OP-Expire-and-Coinbase-Like-Behavior-Making-HTLCs-Safer-by-Letting-Transactions-Expire-Safely.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - OP_Expire and Coinbase-Like Behavior: Making HTLCs Safer by Letting Transactions Expire Safely</title>
    <updated>2023-11-14T02:10:32.703574+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-November/004199.html" rel="alternate"/>
    <summary>Recent exchanges among blockchain programmers have shed light on technical challenges within the Bitcoin transaction space, with particular focus on the Lightning Network (LN). Key discussions revolve around mitigating risks posed by outdated states in multi-party off-chain constructions, such as fees griefing games, and the exploitation of commitment transactions by bad actors using strategies like replacement cycling or pinning. The recommendation for parties to maintain individual fee-bumping reserves aims to enhance channel usage capital efficiency while adding complexity.

The LN requires states to pre-commit to fee values, which necessitates substantial fee-bumping reserves unless a post-commitment fee adjustment method is developed, potentially through covenant mechanisms. Double-spending attacks, specifically using the Child Pays for Parent (CPFP) strategy, present an additional risk for disrupting fee adjustments.

A significant update to package relay version 3 introduces a rule for zero-value anchor outputs to be spent together, aiming to prevent UTXO set bloat and impacting defense strategies against double-spending attacks. Critique of the v3 package relay suggests that pre-signing Replace-by-Fee (RBF) replacements could offer a more robust solution than anchors, as RBF does not require block space for anchors or their spending transactions. Discussions also touch on the possibility of a soft fork incorporating SIGHASH_NOINPUT and OP_Expire to better serve the LN's needs.

Commitment transactions with single-input are flagged as easily exploitable, with specific examples illustrating potential vulnerabilities. The timing of HTLCs is underscored as essential for contract security, where only the recipient can execute a transaction before a certain block number, after which the `OP_EXPIRE` operation activates, barring recipient access to funds.

While the OP_Expire proposal simplifies HTLC handling and improves transaction security and efficiency, it may not completely counter sophisticated adversarial strategies. An example cited shows how an uncooperative forwarding node could unjustly claim payments, highlighting the need for comprehensive countermeasures. The proposal also ensures visibility of the preimage on the blockchain if used, eliminating the need for nodes to monitor mempools. Additional insights into these topics are available on Peter Todd's personal website.

Overall, these dialogues emphasize ongoing efforts to refine Bitcoin transactions, focusing on the LN and fee management strategies. Programmers are actively exploring solutions to vulnerabilities in LN's commitment transactions and discussing advanced proposals to enhance Bitcoin's protocol. Concerns include attackers manipulating fee structures to evict honest transactions during network congestion and the susceptibility of legacy channels to replacement cycling due to lower attached fees.

To combat such issues, Antoine Riard suggests a reverse time-lock to invalidate spending paths and commits to fee-bumping reserves, though this requires considerable reserves for each channel. A redefined opcode like "OP_Expire" and adoption of "nExpiryHeight" over time-based expiration are proposed for a more secure alternative to time-based expirations. Also, an explicit "nExpiryTime" field in the taproot annex could organize mempool transactions and introduce "OP_CHECKEXPIRYTIMEVERIFY."

Peter Todd and Antoine Riard propose the OP_Expire and the Coinbase Bit soft fork upgrade to ensure urgency in spending the HTLC preimage before timeout, with coinbase-like treatment of certain transaction outputs post-upgrade. These initiatives reflect the programming community's collaborative nature in improving cryptocurrency protocols and digital transaction networks' security and efficiency.

The emails dissect various propositions centered on smart contracts and transaction security within the LN, aiming to mitigate risks from attack vectors such as replacement cycling. The OP_Expire opcode and the Coinbase Bit soft-fork upgrade are proposed to enforce timely execution of HTLC terms. This would redefine the nVersion field to make certain transactions spendable only after an additional 100 blocks and prevent a txout from being spent after a set time.

An alternate implementation encodes the expiration height relative to a block-height nLockTime, avoiding the need for a Coinbase Bit and mimicking OP_CheckLockTimeVerify's functionality. This aims to enforce spending deadlines within the HTLC framework securely and compatibly, ensuring the preimage path cannot be spent once the timeout passes.</summary>
    <published>2023-11-13T02:18:16+00:00</published>
  </entry>
</feed>
