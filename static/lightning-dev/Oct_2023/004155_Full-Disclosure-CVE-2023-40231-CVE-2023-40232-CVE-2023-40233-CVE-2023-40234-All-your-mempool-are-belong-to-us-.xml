<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-21T01:55:22.417133+00:00</updated>
  <author>
    <name>Peter Todd 2023-10-20 10:31:03+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-21T01:55:22.417161+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004155.html" rel="alternate"/>
    <summary>The email discusses the issue of failing to use RBF (Replace By Fee) in pre-signed transactions. The sender suggests that the correct approach is to pre-sign enough different transactions to cover all reasonable needs for bumping fees. They propose increasing the fee by 2x each time, resulting in 10 different replacement transactions that cover a fee range of 1024x. This can be further improved by increasing the multiplier towards the end of the range.The sender emphasizes that increasing per-transaction storage and bandwidth costs by ~10x or even ~100x is not a significant concern in the context of a highly scalable protocol like Lightning. They argue that there is no reason for the B-&gt;C transactions to be getting stuck, and this is a major flaw in the Lightning protocol that needs to be addressed.The sender also suggests that this fix should be applied to other aspects of the Lightning protocol, such as channel opens, to ensure a more efficient and reliable system.In conclusion, the email highlights the problem of not using RBF effectively in pre-signed transactions and proposes a solution to pre-sign multiple transactions with increasing fees. The sender advocates for fixing this issue in the Lightning protocol and extending the fix to other areas of the protocol.</summary>
    <published>2023-10-20T10:31:03+00:00</published>
  </entry>
</feed>
