<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-25T17:53:52.981543+00:00</updated>
  <author>
    <name>Peter Todd 2023-10-20 10:31:03+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-25T17:53:52.981543+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004155.html" rel="alternate"/>
    <summary>The email discusses a problem related to the use of RBF (Replace-By-Fee) in pre-signed transactions. The sender suggests that the correct approach is to pre-sign multiple different transactions to cover various fee needs, even increasing the fee by 2x each time. By pre-signing 10 different replacement transactions, it would cover a fee range of 1024x, which can be further improved by increasing the multiplier towards the end of the range.

The sender emphasizes that increasing temporary storage and bandwidth costs by around 10x or even 100x is not significant in the context of a highly scalable protocol like Lightning. They argue that there should be no reason for the B-&gt;C transactions to get stuck, and consider this as a major flaw in the Lightning protocol that needs to be addressed.

Additionally, the sender suggests applying this fix to other aspects of the Lightning protocol, such as channel opens. They provide a link to Peter Todd's website (https://petertodd.org) and mention his email address (peter@petertodd.org).</summary>
    <published>2023-10-20T10:31:03+00:00</published>
  </entry>
</feed>
