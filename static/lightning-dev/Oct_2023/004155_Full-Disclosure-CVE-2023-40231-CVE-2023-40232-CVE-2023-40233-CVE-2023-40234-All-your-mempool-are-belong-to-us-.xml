<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-26T09:30:40.716746+00:00</updated>
  <author>
    <name>Peter Todd 2023-10-20 10:31:03+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-26T09:30:40.716746+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004155.html" rel="alternate"/>
    <summary>The email discusses the problem of not using RBF (Replace-by-Fee) in the context of pre-signed transactions. The sender suggests that the correct approach is to pre-sign multiple different transactions to cover various fee ranges. By increasing the fee by 2x each time and pre-signing 10 replacement transactions, a fee range of 1024x can be covered. It is mentioned that this approach can be further improved by increasing the multiplier towards the end of the range.

The sender emphasizes that increasing temporary storage and bandwidth costs by ~10x or even ~100x is not a significant concern in a highly scalable protocol like Lightning. They point out that there is no valid reason for B-&gt;C transactions to get stuck, and this issue reflects a major failing of the Lightning protocol that needs to be addressed.

Furthermore, the sender suggests that this fix should also be applied to other aspects of the Lightning protocol, such as channel opens. The email concludes with a link to Peter Todd's website (https://petertodd.org) and the sender's email address (peter@petertodd.org).</summary>
    <published>2023-10-20T10:31:03+00:00</published>
  </entry>
</feed>
