<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-25T17:55:55.449128+00:00</updated>
  <author>
    <name>Antoine Riard 2023-10-17 18:34:52+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-25T17:55:55.449128+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004131.html" rel="alternate"/>
    <summary>The email discusses a scenario involving three parties: A, B, and C. It explains that without C claiming it, B forces the B====C channel on-chain. The HTLC-timeout transaction does not confirm, but it is replaced in cycles by C's HTLC-preimage, which remains valid even after the B-&gt;C HTLC timelock has expired. The HTLC-preimage itself is subsequently replaced.

A link to a test is provided for reference: [https://github.com/ariard/bitcoin/commit/19d61fa8cf22a5050b51c4005603f43d72f1efcf](https://github.com/ariard/bitcoin/commit/19d61fa8cf22a5050b51c4005603f43d72f1efcf).

The email goes on to mention that A drops the A====B channel on-chain in an attempt to recover the HTLC funds. It clarifies that considering the fee rates or mempool congestion is unnecessary, as the exploit lies in the replacement mechanism itself.

There is also a mention of using the knowledge of the preimage, as C's incoming HTLC has already been confirmed as claimed by A. Additionally, C broadcasts an HTLC-success transaction at block height 144, but it does so at every block between blocks 100 and 144 to replace B's HTLC-timeout transaction. The email points out that B cannot feebump the HTLC-timeout because it is presigned in this case. However, B can feebump it for anchor output channels thanks to the sighash_single | anyonecanpay on C's signature.</summary>
    <published>2023-10-17T18:34:52+00:00</published>
  </entry>
</feed>
