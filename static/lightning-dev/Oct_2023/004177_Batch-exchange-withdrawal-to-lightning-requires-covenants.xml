<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Batch exchange withdrawal to lightning requires covenants</title>
  <updated>2023-10-25T01:58:43.364028+00:00</updated>
  <author>
    <name>David A. Harding 2023-10-24 04:41:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Batch exchange withdrawal to lightning requires covenants</title>
    <updated>2023-10-25T01:58:43.364065+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/004177.html" rel="alternate"/>
    <summary>In an email sent by Bastien TEINTURIER via bitcoin dev, the discussion revolves around the use of swap-in-potentiam (SiP) as an option. The scenario presented is that Exchange E wants to pay users A, B, and C, who each have different counterparties. To facilitate this, E would obtain a public key from each user's counterparty (e.g., D, E, F). E would then confirm a transaction that pays three SiP outputs, one for each pair {A,D}, {B,E}, {C,F}. 

The parties involved would subsequently offchain spend the SiP outputs into a standard LN-penalty channel construction and start using it. Ideally, before the SiP expires, each party would be able to drain the channel into their other channels and mutually settle it with just an onchain spend of the SiP output. However, in non-ideal situations, the previously offchain spend of the SiP output that established the LN-penalty channel would be put onchain.

The best-case scenario described involves four transactions: E's one-input, four-output batch withdrawal (including E's change), and three separate one-input, one-output transactions to settle the SiP outputs. It is noted that this is approximately the same number and size of transactions as the SIGHASH_ANYPREVOUT|SIGHASH_SINGLE solution outlined in the email thread. However, the SiP solution has an expiry, while the mentioned solution allows the channels to remain open indefinitely.

The author also acknowledges that Eclair already utilizes SiP, but includes the reference for other readers.</summary>
    <published>2023-10-24T04:41:34+00:00</published>
  </entry>
</feed>
