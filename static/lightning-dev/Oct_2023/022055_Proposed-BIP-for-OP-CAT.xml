<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposed BIP for OP_CAT</title>
  <updated>2023-11-01T21:15:48.870020+00:00</updated>
  <author>
    <name>Andrew Poelstra 2023-10-21 15:03:07+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposed BIP for OP_CAT</title>
    <updated>2023-11-01T21:15:48.870020+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/022055.html" rel="alternate"/>
    <summary>Ethan is thanked for his contribution in writing up the BIP text. The sender believes that the proposed CAT (Check After Threshold) functionality would not only fulfill the listed use cases but also enable extensive Bitcoin script research and testing of nontrivial concepts before proposing dedicated opcodes. The sender mentions that when brainstorming ideas for innovative Bitcoin Script applications, the majority of ideas end with the thought of using CAT. The remaining 10% of ideas usually do not require much more than what CAT offers. Despite its simplicity, CAT provides significant value. The sender acknowledges the temptation to include other opcodes along with CAT, such as rolling SHA256 opcodes for hashing more than 520 bytes of data. However, they argue against it for several reasons: the endless list of desired opcodes leading to prolonged debates, no single opcode matching the power of CAT (except super general-purpose opcodes like OP_ZKP_VERIFY), and the contentious nature of most proposals. The sender suggests sticking with "just CAT." The email concludes with Andrew Poelstra's contact information and a light-hearted quote about the sun always shining in space.</summary>
    <published>2023-10-21T15:03:07+00:00</published>
  </entry>
</feed>
