<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Examining ScriptPubkeys in Bitcoin Script</title>
  <updated>2023-11-01T21:12:46.292811+00:00</updated>
  <author>
    <name>Brandon Black 2023-10-20 14:19:06+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Examining ScriptPubkeys in Bitcoin Script</title>
    <updated>2023-11-01T21:12:46.292811+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/022037.html" rel="alternate"/>
    <summary>The email discusses a proposed alternative direction to the OP_UNVAULT method, which replaces a specific leaf in the taptree in a specific way. The benefits of using OP_UNVAULT are highlighted, including the ability to unvault multiple inputs sharing the same scriptPubkey to the same output. The need for this alternative approach is acknowledged, and it was sparked by discussions about the advantages of using OP_CAT or OP_2SHA256 for BitVM.

The sender suggests using OP_TAGGEDCATHASH instead, which involves popping a tag (where an empty tag can be treated as a special case for plain sha256) and a number of elements to hash. This method would then tagged-hash the following 'n' elements from the stack.

Overall, the email implies that the sender agrees with the proposed alternative direction and believes it addresses the desired functionality. They sign off with their name, Brandon.</summary>
    <published>2023-10-20T14:19:06+00:00</published>
  </entry>
</feed>
