<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposed BIP for OP_CAT</title>
  <updated>2023-11-01T21:15:35.876233+00:00</updated>
  <author>
    <name>Ethan Heilman 2023-10-21 20:24:29+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposed BIP for OP_CAT</title>
    <updated>2023-11-01T21:15:35.876233+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-October/022057.html" rel="alternate"/>
    <summary>The email exchange between Greg and Ethan discusses the limit on element size in tapscript. Ethan clarifies that the limit is not unique to tapescript but rather a feature of the OP_CAT opcode. Tapscript enforces a 520 byte element size, which eliminates the concern of creating very large stack elements with OP_CAT. Greg acknowledges Ethan's clarification and mentions that he wasn't aware that this limit was added in the same commit that removed OP_CAT. He also notes that the commit reduced the size limit on inputs to arithmetic operations from 2064-bits to 32-bits. Ethan expresses his surprise at this change and mentions that he had always assumed the limit was 32-bits from the beginning. He finds it intriguing to think about having math opcodes that support 2064-bit inputs and outputs.

Overall, the email exchange highlights the understanding and clarification of the limit on element size in tapscript and the related changes made in the commit. It provides insights into the development and implementation of tapscript and its impact on stack elements and arithmetic operations.</summary>
    <published>2023-10-21T20:24:29+00:00</published>
  </entry>
</feed>
