<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning Pool: A Non-Custodial Channel Lease Marketplace</title>
  <updated>2023-06-03T02:57:24.860599+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2020-11-02 16:56:09</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-11-05 05:14:20</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2020-11-06 02:53:09</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-11-17 05:23:55</name>
  </author>
  <link href="lightning-dev/Nov_2020/002874_Lightning-Pool-A-Non-Custodial-Channel-Lease-Marketplace.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2020/002876_Lightning-Pool-A-Non-Custodial-Channel-Lease-Marketplace.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2020/002877_Lightning-Pool-A-Non-Custodial-Channel-Lease-Marketplace.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2020/002878_Lightning-Pool-A-Non-Custodial-Channel-Lease-Marketplace.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning Pool: A Non-Custodial Channel Lease Marketplace</title>
    <updated>2023-06-03T02:57:24.860599+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2020-November/002874.html" rel="alternate"/>
    <summary>Lightning Labs has launched a new system called Lightning Pool, which allows users to buy and sell "channel leases" that package up inbound liquidity for a fixed duration. The system builds on earlier ideas about creating a market for dual-funding channels and includes live testnet+mainnet markets. The first alpha release features limits and simplifications, but future iterations will implement streaming interest payments and side-car channels, among other things. The writer responds to questions about Loop and Pool client/server protocol, channel leasing, and orchestrator functionality. The current client/server protocol can be found in a set of protobufs listed at the provided link, although the writer cautions that it is not yet considered stable. Channel leasing should provide purchasers with a fee rate guarantee and channel lifetime enforcement. The writer plans to extend the security analysis section to cover effective utilization of leased capital and other considerations. Regarding orchestrator functionality, the existence of the orchestrator serves to reduce the availability requirements of participants. An offline participant would still be able to "fully validate" all operations that happened while they were away with the addition of a merkle-tree/MMR/SMT over all chain state committed to in each block. This structure could also be used to authenticate lease rate data in the context of CLM/Pool. The writer suggests strengthening incentives to make "safe zero conf channel lease usage" work by creating an on-chain bond threaded through with each execution auction batch.</summary>
    <published>2020-11-02T16:56:09+00:00</published>
  </entry>
</feed>
