<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Liquidity Ads: Updated Spec Posted, please review</title>
  <updated>2023-11-22T02:12:07.284988+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-11-21 10:33:13+00:00</name>
  </author>
  <author>
    <name>niftynei 2023-11-20 17:48:56+00:00</name>
  </author>
  <link href="lightning-dev/Nov_2023/004219_Liquidity-Ads-Updated-Spec-Posted-please-review.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004217_Liquidity-Ads-Updated-Spec-Posted-please-review.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Liquidity Ads: Updated Spec Posted, please review</title>
    <updated>2023-11-22T02:12:07.285039+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-November/004219.html" rel="alternate"/>
    <summary>The shift from using CheckSequenceVerify (CSV) to CheckLockTimeVerify (CLTV) for locking leasor funds in the Liquidity Ads specification marks a significant refinement in its design, driven by community feedback and the need to address dependencies and complexities associated with anchor outputs. The transition to CLTV is aimed at preventing premature access to funds by the leasor, particularly in cases involving HTLCs within the leasee's commitment transactions, thus enhancing security. This update was largely influenced by @morehouse's identification of vulnerabilities and proposal of an effective solution.

A new concept introduced in the specification is "lease locked" transactions, which are akin to HTLC transactions but are exclusive to scenarios where the leasor is remote. These transactions guarantee that leasors cannot prematurely claim their funds before the lease period concludes. However, there are concerns about the current message flow not allowing for the necessary signatures required for these transactions, suggesting either a revision to the protocol flow or finding a way to impose additional CLTV constraints directly in the output without needing a second-stage transaction.

Another notable change is the introduction of variable lease terms, providing nodes with the option to negotiate leases of varying lengths. This adaptability allows sellers to adjust lease rates based on the duration of the lease, potentially increasing prices for longer terms. To complement this flexibility, channel fee caps have been adjusted to accommodate a spectrum of block durations for each commitment, with fee cap increments refined to 100 parts per million (ppm), offering finer granularity in line with basis points.

Community discussions continue regarding whether to maintain a fixed base milli-satoshi (msat) cap at 500 sats or to adopt a variable approach as proposed by @t-bast. Also under consideration is the implementation of a fraud proof mechanism within channel fee commitments to ensure compliance with agreed-upon fee caps. The proposal contemplates a bond or similar punitive action for violators; however, creating cryptographic commitments for ranges of values remains technically challenging, with community input sought on how to effectively employ signed commitments for bond release.

The integration of these updates is anticipated to significantly enhance the robustness and adaptability of the Liquidity Ads system. Contributions from the community, especially during the CLN hack week and subsequent periods, including insights into node fee behavior and prompt review and suggestions, have been critical to advancing the proposal. For those interested in delving deeper into these modifications, detailed information can be found through the links to the draft and commits provided in the original correspondence.</summary>
    <published>2023-11-21T10:33:13+00:00</published>
  </entry>
</feed>
