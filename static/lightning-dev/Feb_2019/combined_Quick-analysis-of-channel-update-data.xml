<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Quick analysis of channel_update data</title>
  <updated>2023-06-02T16:57:48.917793+00:00</updated>
  <author>
    <name>Fabrice Drouin 2019-01-04 08:58:17</name>
  </author>
  <author>
    <name>Fabrice Drouin 2019-02-18 15:34:47</name>
  </author>
  <author>
    <name>Fabrice Drouin 2019-01-02 15:47:06</name>
  </author>
  <author>
    <name>Rusty Russell 2019-02-18 12:09:43</name>
  </author>
  <author>
    <name>Fabrice Drouin 2019-01-02 19:46:42</name>
  </author>
  <author>
    <name>Fabrice Drouin 2019-01-03 22:52:15</name>
  </author>
  <author>
    <name>Rusty Russell 2019-01-08 05:23:10</name>
  </author>
  <author>
    <name>Christian Decker 2019-01-08 15:15:04</name>
  </author>
  <author>
    <name>Christian Decker 2019-01-08 21:28:43</name>
  </author>
  <author>
    <name>Matt Corallo 2019-01-08 22:07:02</name>
  </author>
  <author>
    <name>Rusty Russell 2019-01-08 23:38:12</name>
  </author>
  <author>
    <name>Fabrice Drouin 2019-01-20 19:53:56</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-01-04 03:43:14</name>
  </author>
  <author>
    <name>Fabrice Drouin 2019-01-08 17:22:23</name>
  </author>
  <author>
    <name>Rusty Russell 2019-01-08 23:44:06</name>
  </author>
  <author>
    <name>Christian Decker 2019-01-02 17:26:07</name>
  </author>
  <link href="lightning-dev/Jan_2019/001790_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2019/001874_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001773_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2019/001873_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001775_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001787_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001803_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001810_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001812_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001813_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001816_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001829_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001789_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001811_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001815_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2019/001774_Quick-analysis-of-channel-update-data.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Quick analysis of channel_update data</title>
    <updated>2023-06-02T16:57:48.918757+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-January/001790.html" rel="alternate"/>
    <summary>The Lightning Network's channel update traffic has been a topic of discussion among members of the community. Rusty Russell and Fabrice Drouin examined the issue and found that updating channels with unchanged parameters is a major cause of the traffic. They also observed that "flapping" channels, likely due to unreliable hosts, could be another cause of the updates.To address these issues, they suggested implementing a basic checksum to improve routing table sync and ratelimiting enables to avoid penalizing flapping channels. Additionally, they proposed different approaches to the eager-disable and lazy-enable concept, with Christian Decker suggesting local policies at senders of the update to reduce flapping updates.Further investigations by Fabrice revealed that 85% of the time, information was queried that had already been received, leading to inefficiencies in collecting and querying information on routing tables and channel updates. To address this, he suggested discarding newer duplicates unless they are more than one week old and remembering the latest timestamp of duplicates for future advanced reconstruction schemes. Adding a basic checksum to channel range queries is also proposed as a solution. However, Rusty questioned whether all these measures were necessary and suggested locally updating timestamps and signatures for identical updates and not broadcasting them if they were the only changes.The Lightning-dev mailing list recently discussed the issue of flapping updates in a network and its impact on routing tables. If a sender node sends out two identical updates with different timestamps and signatures, both updates get dropped if the intermediate node's flush interval is triggered before it receives them. To reduce flapping updates, local policies at the update senders should be used, rather than building in-network deduplications. Heuristics can also be used to close channels to unreliable nodes instead of filtering/delaying publishing updates for them.Participants suggested "eager-disable" and "lazy-enable" policies to improve traffic and efficiency. There were concerns that nodes may not detect when a channel has been re-enabled if updates are discarded, and that nodes may discard channels as stale if they don't receive new updates when they reconnect. It was suggested to ratelimit own enables to one per 120 seconds to solve the issue.The email exchange also discussed set reconciliation schemes and how reconciling [channel_id | checksum] can reduce communication rounds to determine if channel parameters have changed. In a separate email, Fabrice Drouin shared his findings about frequent channel updates, even when fee parameters don't change. There were many disable/enable/disable updates sent several times a day for the same channel ID, as well as updates that don't change anything except the timestamp and signatures. Christian Decker suggested locally updating the timestamp and signature for old channel_updates instead of forwarding the update, and delaying channel_updates depending on the past stability of that peer.Overall, the email exchange acknowledged that achieving consistency in views of the routing table may not be possible, and the protocol should be considered a best effort gossip protocol. Improving the efficiency of the Lightning Network's gossip protocol is an ongoing effort that involves multiple solutions such as heuristics, local policies, and adding a basic checksum to channel range queries. The findings from the investigations suggest that these measures could significantly reduce channel update traffic and improve network structure.</summary>
    <published>2019-01-04T08:58:17+00:00</published>
  </entry>
</feed>
