<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Blinded channel observation</title>
  <updated>2023-06-02T00:52:01.675067+00:00</updated>
  <author>
    <name>Rusty Russell 2016-08-18 06:47:49</name>
  </author>
  <author>
    <name>Tadge Dryja 2016-08-08 16:17:04</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-09 05:43:57</name>
  </author>
  <author>
    <name>Joseph Poon 2016-08-09 19:28:14</name>
  </author>
  <author>
    <name>Tadge Dryja 2016-08-10 01:34:43</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-10 02:03:46</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-10 10:39:50</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-11 01:55:36</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-12 03:47:52</name>
  </author>
  <author>
    <name>Tadge Dryja 2016-08-11 03:12:59</name>
  </author>
  <author>
    <name>Joseph Poon 2016-08-11 07:49:26</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-12 03:24:52</name>
  </author>
  <author>
    <name>Joseph Poon 2016-08-12 21:28:53</name>
  </author>
  <author>
    <name>Tadge Dryja 2016-08-15 15:18:24</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-09 21:06:11</name>
  </author>
  <author>
    <name>Joseph Poon 2016-08-09 22:29:38</name>
  </author>
  <author>
    <name>Tadge Dryja 2016-08-10 14:52:13</name>
  </author>
  <author>
    <name>Joseph Poon 2016-08-11 04:16:26</name>
  </author>
  <author>
    <name>Joseph Poon 2016-08-12 21:20:34</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-13 10:30:33</name>
  </author>
  <link href="lightning-dev/Aug_2016/000593_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000565_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000566_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000567_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000570_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000571_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000572_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000574_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000579_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000575_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000577_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000578_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000583_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000588_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000568_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000569_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000573_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000576_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000582_Blinded-channel-observation.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000584_Blinded-channel-observation.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Blinded channel observation</title>
    <updated>2023-06-02T00:52:01.675067+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-August/000593.html" rel="alternate"/>
    <summary>The Lightning Network is a protocol designed to improve Bitcoin's scalability and speed by transmitting transactions without revealing their contents. However, the network faces issues with Hashed TimeLock Contracts (HTLCs), which involve multiple nodes, making it easy for an observer to access information about them. Despite these challenges, the network has methods to defend against attacks, including outsourcing vigilance to multiple parties and obscuring keys in each state without revealing the revocation pubkey until the hashes are revealed.Another challenge faced by the Lightning Network is channel utilization and states with in-flight HTLCs. To address this issue, different methods of outsourcing work and reducing computational cost when watching multiple channels have been proposed. These include pre-computing HMAC by the outsourcer and putting all watched txids into the same tree. The Lightning Network also faces challenges with reducing space and communication requirements per new commitment transaction. Different schemes have been proposed, but no good solutions have been presented yet.In an email conversation between Rusty Russell, Tadge Dryja, Joseph Poon, and the author of an article on Lightning Network, several discussions were held regarding the use of revocation keys, hash trees in Bitcoin transactions, and security concerns on Lightning Network. Tadge Dryja's method uses a revocation key that is compatible with shachain/elkrem, while Joseph Poon claims to have come up with the general construction for this method a long time ago.During the discussion, Rusty raised concerns about the security of LN and suggested using an HMAC of the non-witness transaction as the final step in shachain/elkrem to establish a single leaf. He also suggested using a hash function to prevent attackers from stealing funds from the payment channels. Rusty also suggests using SHA256(txid) as a method for broadcasting penalty transactions. Joseph agrees and outlines a strawman spec that involves changes to the protocol, such as using shachain/elkrem with an additional SHA256() to make commit N-1 unguessable even if you know commit N.The spec includes information on the revocation preimage, htlc #1 H-hash ripemd160 and expiry, htlc #2 H-hash ripemd160 and expiry, and arbitrary zero padding. To avoid revealing too much using size, implementations should pad this out to cover expected HTLCs. Rusty then asks Joseph if he has missed anything during the discussion.</summary>
    <published>2016-08-18T06:47:49+00:00</published>
  </entry>
</feed>
