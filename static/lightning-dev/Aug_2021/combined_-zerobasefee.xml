<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - #zerobasefee</title>
  <updated>2023-06-03T05:34:13.541669+00:00</updated>
  <author>
    <name>Stefan Richter 2021-08-16 10:01:28</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-08-21 02:36:45</name>
  </author>
  <author>
    <name>Matt Corallo 2021-08-25 03:50:42</name>
  </author>
  <author>
    <name>Anthony Towns 2021-08-25 12:50:43</name>
  </author>
  <author>
    <name>Anthony Towns 2021-08-15 01:00:37</name>
  </author>
  <author>
    <name>Matt Corallo 2021-08-16 02:21:52</name>
  </author>
  <author>
    <name>Matt Corallo 2021-08-16 04:48:36</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2021-08-16 19:55:48</name>
  </author>
  <author>
    <name>Matt Corallo 2021-08-25 20:06:09</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-08-15 16:03:59</name>
  </author>
  <author>
    <name>Stefan Richter 2021-08-15 22:10:06</name>
  </author>
  <author>
    <name>Matt Corallo 2021-08-16 00:04:52</name>
  </author>
  <author>
    <name>Anthony Towns 2021-08-16 04:00:48</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-08-16 10:27:29</name>
  </author>
  <author>
    <name>Stefan Richter 2021-08-17 10:07:05</name>
  </author>
  <author>
    <name>Anthony Towns 2021-08-21 04:46:38</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-08-15 10:58:35</name>
  </author>
  <author>
    <name>lisa neigut 2021-08-15 12:19:01</name>
  </author>
  <author>
    <name>Anthony Towns 2021-08-16 02:02:24</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-08-16 05:15:46</name>
  </author>
  <link href="lightning-dev/Aug_2021/003185_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003190_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003200_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003201_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003174_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003181_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003183_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003187_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003202_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003177_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003178_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003179_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003182_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003186_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003188_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003194_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003175_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003176_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003180_-zerobasefee.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003184_-zerobasefee.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - #zerobasefee</title>
    <updated>2023-06-03T05:34:13.541669+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-August/003185.html" rel="alternate"/>
    <summary>The Lightning community has been discussing the role of base fees in routing algorithms and their importance in capturing node operators' costs. Some experts argue that having them makes the algorithm slow, while others believe they are necessary to prevent DoS attacks and capture costs. One proposed solution is to set the BOLT#7 fee_base_msat value to zero, which would simplify the routing algorithm and make it easier to optimize for fees. However, this could potentially lead to node operators being uncompensated for their costs.To address the issue of charging for HTLC slot usage in case of DoS attacks while ensuring that routing algorithms can handle the new costing, developers have suggested alternative approaches such as using proportional fees and minimum payment values or adjusting min_htlc_amount instead of base fees. There are also debates about whether nodes that don't set their fees to a particular structure should be ignored in routing decisions.During discussions, opinions differed on how base fees should be managed going forward, with some predicting that eventually everyone will hardcode them to zero, while others argue that they are necessary to capture node operators' costs. The email thread discusses the cost to nodes, which is the opportunity cost of not being able to accept other transactions that would pay higher fees. Some argue that setting a proportional fee captures this cost equally well, while others believe that amortizing it into the proportional fee might help.There have been discussions advocating for setting the BOLT#7 fee_base_msat value to zero, which has benefits including easier optimization and making routing easier since you will never have to worry about paying more fees just as a result of splitting a payment. However, this would eliminate the fixed minimum fee, leading to potential issues with payments of small amounts. Instead, it is suggested that a proportional fee be implemented with a minimum payment size of 5000 sats, allowing nodes to set their fees based on their desired profit margins and transaction volumes, using a combination of proportional fees and minimum payment values.The conversation shifts to limiting the number of HTLC slots once the network switches to eltoo. While eltoo can help reduce fixed costs, there are still other limits that need consideration if worried about having too many pending HTLCs. The email thread also discusses the issue of HTLC slot usage after switching to eltoo, with Matt arguing that the HTLC slot limit is to keep transactions broadcastable and it won't change even after switching to eltoo.Matt Corallo believes that modifying the protocol before conducting comparative analysis and independent implementation of the algorithm integrated into an existing LN implementation is premature. He suggests mapping the base fee to more flow-based-routing-compatible numbers to solve the issue. Additionally, he highlights the need for analyzing where the proposed algorithm may be most optimal in the HTLC-value channel liquidity ratio ranges to use it for large-value payments.Overall, the Lightning community needs to explore these issues further and conduct more research before making any drastic changes to the system. It is important to match fees to the costs involved and not throw away the existing fee structure without thorough analysis. The email thread concludes with the notion that more exploration is needed before such a change is made, as it is unclear how well the current fee structures can handle the proposed changes.</summary>
    <published>2021-08-16T10:01:28+00:00</published>
  </entry>
</feed>
