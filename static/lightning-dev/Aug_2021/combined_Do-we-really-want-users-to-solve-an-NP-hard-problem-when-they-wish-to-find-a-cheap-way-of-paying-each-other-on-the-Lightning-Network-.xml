<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Do we really want users to solve an NP-hard problem when they wish to find a cheap way of paying each other on the Lightning Network?</title>
  <updated>2023-07-31T23:45:25.892169+00:00</updated>
  <author>
    <name>Stefan Richter 2021-08-31 19:10:40+00:00</name>
  </author>
  <author>
    <name>Orfeas Stefanos Thyfronitis Litos 2021-08-31 09:59:11+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2021-08-31 04:01:34+00:00</name>
  </author>
  <author>
    <name>René Pickhardt 2021-08-26 14:33:23+00:00</name>
  </author>
  <link href="lightning-dev/Aug_2021/003214_Do-we-really-want-users-to-solve-an-NP-hard-problem-when-they-wish-to-find-a-cheap-way-of-paying-each-other-on-the-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003212_Do-we-really-want-users-to-solve-an-NP-hard-problem-when-they-wish-to-find-a-cheap-way-of-paying-each-other-on-the-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003210_Do-we-really-want-users-to-solve-an-NP-hard-problem-when-they-wish-to-find-a-cheap-way-of-paying-each-other-on-the-Lightning-Network-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2021/003203_Do-we-really-want-users-to-solve-an-NP-hard-problem-when-they-wish-to-find-a-cheap-way-of-paying-each-other-on-the-Lightning-Network-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Do we really want users to solve an NP-hard problem when they wish to find a cheap way of paying each other on the Lightning Network?</title>
    <updated>2023-07-31T23:45:25.892169+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-August/003214.html" rel="alternate"/>
    <summary>In a recent email conversation between ZmnSCPxj and Stefan, they proposed the idea of creating a variant of Pickhardt-Richter payments that can adapt to the current network reality where `base_fee &gt; 0` is common but biased against. They suggest using a modified cost function that includes amount*prop_fee + amount*base_fee/min_flow_size, with min_flow_size being a quantization constant that can be dynamically chosen. This solution resolves the issue of splitting flows into HTLCs and is convex, making it easier to find min-cost flows. The authors acknowledge that as the min_flow_size decreases and the base_fee increases, the accuracy of the solution decreases, but they believe economics will drive most people to choose a zero or low base_fee. In conclusion, this proposal offers a practical solution to the ongoing debate about base fees in the Lightning Network.Another discussion on the Lightning Network revolves around the complexity of finding a cheap way for users to pay each other. Anthony Towns suggests that relying on users to solve an NP-hard problem could lead to disagreements among developers and suboptimal performance. Orfeas argues that this approach is more suitable for centralized systems like Debian, whereas the Lightning Network should focus on decentralization. The debate highlights the need for finding an efficient and decentralized solution to the payment optimization problem.René Pickhardt raises the question of whether users should be required to solve an NP-hard problem when trying to find a cheaper way to make payments on the Lightning Network. Andrew Poelstra responds by comparing it to solving similar problems in the Debian ecosystem and suggests setting iteration limits and adding heuristics to cope with complexity. Poelstra proposes a similar approach for Lightning, where routing could be done on multiple networks with different fee structures. Although this approach may sometimes result in slightly higher fees, it would still be an improvement compared to the current state of high fees. This suggestion offers a potential solution to the challenge of finding optimal payment routes on the Lightning Network.The optimization of payment flows on the Lightning Network has been a topic of discussion among developers. The author of an email emphasizes the need to address misunderstandings and find agreement on how to improve the network's reliability and affordability. It is acknowledged that finding the cheapest payment flow is an NP-hard problem due to the non-linearity and non-convexity of the fee function. The paper suggests dropping the base fee or optimizing for reliability instead of fees. Linear approximations can also be used to tackle this problem. The author questions whether users should be burdened with solving such complex problems when seeking affordable payments on the Lightning Network.Rusty Russell and Rene Pickhardt have contrasting opinions regarding the need to change a parameter related to pathfinding algorithms for node operators. Pickhardt argues that there is a strong need for change and suggests that operators open channels with nodes already supporting zero base fees. He believes that as more wallets adopt optimal payment flows, routing will likely occur in the #zerobasefee part of the network, which is already substantial. Pickhardt expresses his reluctance to engage in further discussions on zero base fees unless new information arises. He highlights the benefits of their method, which utilizes probabilistic pathfinding as a cost function and has been proven to work effectively.Overall, these conversations shed light on the ongoing efforts to optimize payment flows and address the challenges posed by base fees in the Lightning Network. Developers are exploring various approaches, including modifying cost functions, implementing heuristics, and considering alternate fee structures, to improve the network's efficiency, reliability, and affordability.</summary>
    <published>2021-08-31T19:10:40+00:00</published>
  </entry>
</feed>
