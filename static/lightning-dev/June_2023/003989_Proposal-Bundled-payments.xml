<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-21T01:22:41.920686+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-06-20 16:44:17+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-21T01:22:41.920715+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003989.html" rel="alternate"/>
    <summary>In an email conversation between Thomas Voegtlin and Bastien Teinturier, they discussed a proposal to level the field of competition between Lightning service providers. Bastien proposed a prepayment solution based on BOLT-12 in order to improve the existing solution. Thomas suggested using keysend payment with metadata to indicate which payment hash to associate with the prepayment. However, Bastien stated that this would require adding a TLV field to Bolt 12 invoices or onion messages. He believes that building this on top of Bolt 12 is worth trying since invoices are delivered on-the-fly and short-lived. They also discussed whether bundled payments already work with the current specification or require changes to BOLT-12. Bastien stated that it would require adding a TLV field to Bolt 12 invoices, but he believes they can come up with a more satisfying protocol. Thomas asked about whether pre-payment of the mining fee could be combined with 0-conf, and Bastien believes that even with BOLT-12, 0-conf wouldn't go away. Lastly, they discussed the adoption timeline for BOLT-12, with Bastien thinking it will take years after it is merged before it becomes the dominant payment method on Lightning.</summary>
    <published>2023-06-20T16:44:17+00:00</published>
  </entry>
</feed>
