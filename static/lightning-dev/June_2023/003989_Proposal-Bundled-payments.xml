<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-09T02:57:44.398466+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-06-20 16:44:17+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-09T02:57:44.398498+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003989.html" rel="alternate"/>
    <summary>In the email exchange between Thomas and Bastien, they discuss the possibility of combining pre-payment of mining fees with 0-conf on the Lightning Network. Bastien states that even with BOLT-12, he doesn't see 0-conf going away. Thomas clarifies that he did not mean to imply that pre-payment and 0-conf are opposed to each other. If 0-conf were to no longer be used, the solution described would no longer work and prepayment would be necessary.Bastien asks if bundled payments already work with the current specification or if they would require changes to BOLT-12. Thomas explains that adding a TLV (Type-Length-Value) field to Bolt 12 invoices or onion messages would be necessary for bundled payments. He also mentions that the design space for a prepayment solution based on Bolt 12 is larger than with Bolt 11, which could lead to a more satisfying protocol.Thomas expresses his belief that it will take years after BOLT-12 is merged before it becomes the dominant payment method on Lightning. However, if the proposed feature was adopted in BOLT-11, he thinks it could be deployed much faster. Bastien questions why Thomas believes it would be faster using Bolt 11, as it still requires software updates and implementation focus is currently on Bolt 12.The goal of Bastien's proposal is to level the playing field of competition between Lightning service providers. Although Thomas agrees that having a more satisfying solution would be great, he suggests taking the time to build it on top of Bolt 12, where they can likely create a cleaner solution since invoices are delivered on-the-fly and short-lived.In another email, Thomas responds to David's suggestion regarding bundled payments. David suggests using a keysend payment with metadata instead of a payment hash for the prepayment. Thomas explains that the BOLT11 invoice would still need a feature bit to indicate if the prepayment is optional or required. He also provides an example of how the payment amounts would be adjusted in the invoice.Overall, the email exchange discusses the possibility of combining pre-payment with 0-conf on the Lightning Network, the potential implementation of bundled payments using Bolt 12, the time it may take for BOLT-12 to become dominant, and the goal of leveling the competition between Lightning service providers. There is also a discussion about using keysend payments with metadata for prepayments instead of payment hashes.</summary>
    <published>2023-06-20T16:44:17+00:00</published>
  </entry>
</feed>
