<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-28T03:26:37.797464+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-06-20 16:44:17+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-28T03:26:37.797496+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003989.html" rel="alternate"/>
    <summary>In a conversation between Thomas and Bastien, they discuss the combination of pre-payment of mining fees with 0-conf in Lightning Network. Thomas expresses confusion as to why Bastien sees them as opposed, stating that even with BOLT-12, he doesn't see 0-conf going away. Bastien clarifies that he didn't mean to suggest stopping the use of 0-conf but rather that if it were to be stopped for some reason, the solution he described wouldn't work anymore and a prepayment would be necessary. Thomas then asks whether bundled payments would work with the current specification or require changes to BOLT-12. Bastien explains that adding a TLV field to Bolt 12 invoices or onion messages would be necessary for bundled payments. He believes that the design space for a prepayment solution based on Bolt 12 is larger than with Bolt 11, which could result in a more satisfying protocol.Bastien also mentions that he thinks it will take years after BOLT-12 is merged for it to become the dominant payment method on Lightning. However, if the feature was adopted in BOLT-11, he believes it could be deployed much faster. Thomas questions why Bastien believes using Bolt 11 would be faster, as it still requires software updates and implementers are currently focused on Bolt 12. Bastien agrees that it would be great to have a more satisfying solution, but rushing it is not the answer. He suggests building on top of Bolt 12, where they can potentially create something cleaner.In another part of the conversation, Thomas discusses an interesting idea shared by Dave. Dave suggests that instead of a payment hash for the prepayment in a BOLT11 invoice, a keysend payment with an onion message payload could be used to indicate the payment hash associated with the prepayment. Thomas considers it acceptable and explains the semantics of bundled payments, which involve two preimages and two amounts in the BOLT11 invoice. He also mentions that the receiver should wait for all HTLCs of both payments to arrive before fulfilling the HTLCs of the prepayment.The conversation ends with Thomas providing his contact information and signature.</summary>
    <published>2023-06-20T16:44:17+00:00</published>
  </entry>
</feed>
