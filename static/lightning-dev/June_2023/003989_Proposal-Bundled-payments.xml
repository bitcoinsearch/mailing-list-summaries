<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-12T02:47:48.114830+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-06-20 16:44:17+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-12T02:47:48.114868+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003989.html" rel="alternate"/>
    <summary>In the email conversation between Thomas and Bastien, they discuss the relationship between pre-payment of mining fees and 0-conf transactions in the context of Lightning Network. Bastien points out that he doesn't see 0-conf going away even with the introduction of BOLT-12. Thomas asks whether bundled payments would work with the current specification or require changes to BOLT-12, to which Bastien suggests adding a TLV field to Bolt 12 invoices or onion messages. Thomas expresses his belief that it will take years for BOLT-12 to become the dominant payment method on Lightning after it is merged, but if this feature was adopted in BOLT-11, it could be deployed much faster. Bastien agrees that leveling the field of competition between Lightning service providers is important, but argues that building the solution on top of Bolt 12 would allow for a cleaner implementation since invoices are delivered on-the-fly and short-lived.In another email thread, Thomas discusses bundled payments with David Harding. He explains the semantics of bundled payments, which involve a BOLT-11 invoice containing two preimages and two amounts: prepayment and main payment. The receiver should wait until all the HTLCs of both payments have arrived before fulfilling the HTLCs of the pre-payment. If the main payment does not arrive, the pre-payment should be failed with a MPP timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction.David suggests using keysend payment with the onion message payload to indicate what payment hash to associate with the prepayment. This would eliminate the need for the prepayment to be included in the BOLT11 invoice and instead use an extra_fee_via_keysend field. This would be smaller and could potentially be implemented immediately until an updated version of BOLT11 becomes widely deployed.Overall, the conversation revolves around the implementation and potential benefits of bundled payments in the Lightning Network, as well as the relationship between pre-payment and 0-conf transactions. The use of BOLT-11 and BOLT-12 is discussed, along with possible changes to the specifications to accommodate bundled payments.</summary>
    <published>2023-06-20T16:44:17+00:00</published>
  </entry>
</feed>
