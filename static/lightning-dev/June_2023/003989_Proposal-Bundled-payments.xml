<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-04T03:00:40.956995+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-06-20 16:44:17+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-04T03:00:40.957018+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003989.html" rel="alternate"/>
    <summary>In a conversation between Bastien and Thomas, they discuss the use of prepayment in combination with 0-conf (zero-confirmation) transactions on the Lightning Network. Bastien suggests that even with the introduction of BOLT-12, which is a protocol for generating Lightning Network invoices, 0-conf transactions can still be used. Thomas asks whether bundled payments would work with the current BOLT-12 specification or if changes would be required. Bastien explains that adding a TLV (Type-Length-Value) field to BOLT-12 invoices or onion messages would be necessary for bundled payments. He also believes that it will take years for BOLT-12 to become the dominant payment method on Lightning and suggests that if the feature was adopted in BOLT-11, it could be deployed faster.Thomas raises the idea of using prepayment hashes in BOLT-11 invoices and mentions that a feature bit would be needed to make the prepayment optional or required. He explains that if the feature is optional, the prepayment amount would need to be subtracted from the main payment amount. Thomas also discusses the semantics of bundled payments, which involve including two preimages and two amounts in the BOLT-11 invoice. The receiver would wait for both the prepayment and main payment HTLCs to arrive before fulfilling the prepayment HTLC. If the main payment does not arrive, the prepayment would fail with a MPP (multi-path payments) timeout. Once both payments' HTLCs have arrived, the receiver fulfills the prepayment HTLC and broadcasts the on-chain transaction.David A. Harding joins the conversation and suggests using keysend payments with metadata indicating the payment hash associated with the prepayment instead of including it in the BOLT11 invoice. He proposes extending BOLT11 invoices with an extra_fee_via_keysend field, which would be smaller and could be encoded in existing BOLT11 fields like description or metadata. This would allow for immediate implementation until an updated version of BOLT11 or an alternative using offers becomes widely deployed.Bastien agrees that a more satisfying solution is needed but argues against rushing it. He believes that building the solution on top of BOLT-12 would be cleaner since invoices are delivered on-the-fly and short-lived. The conversation ends with Thomas's signature and contact information.Overall, the discussion revolves around the use of prepayment in Lightning Network transactions and the potential implementation of bundled payments using either BOLT-11 or BOLT-12. Different proposals and considerations are presented to optimize the payment process and improve the competition among Lightning service providers.</summary>
    <published>2023-06-20T16:44:17+00:00</published>
  </entry>
</feed>
