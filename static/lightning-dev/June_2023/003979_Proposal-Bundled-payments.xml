<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-29T02:55:06.435188+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-14 08:09:45+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-29T02:55:06.435210+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003979.html" rel="alternate"/>
    <summary>Boltz, a lightning service provider, has implemented a submarine swap client that is separate from the lightning wallet of the user. This separation allows for competition and potentially increases the user base for services like Lightning Loop. However, Boltz is vulnerable to denial-of-service (DoS) attacks where an attacker forces them to pay on-chain fees due to the inability to show two invoices simultaneously. To address this issue, Thomas Voegtlin proposes an extension to BOLT-11, the Lightning Network protocol, where an invoice can contain two bundled payments with distinct preimages and amounts. This would allow services that require prepayment of mining fees, such as submarine swaps and JIT channels, to protect themselves against mining fee attacks. The proposal suggests bundling the prepayment and main payment in the same invoice, ensuring that both payments arrive before fulfilling the pre-payment. If the main payment fails to arrive, the pre-payment is failed with a MPP timeout.Implementing this change in BOLT-11 would level the playing field for lightning service providers by allowing them to offer non-custodian services without exposing themselves to mining fee attacks. ACINQ, the company behind Phoenix, could benefit from this change by making their pay-to-open service fully non-custodian. Thomas Voegtlin believes that this change should be implemented in BOLT-11 rather than introducing new messages through BOLT-12 or onion messages, as it can be done in a non-interactive way.There is an ongoing standardization effort for LSP (Lightning Service Provider) protocols, which may include integration of submarine swaps. Boltz is currently working to add submarine swaps to the LSP protocols.</summary>
    <published>2023-06-14T08:09:45+00:00</published>
  </entry>
</feed>
