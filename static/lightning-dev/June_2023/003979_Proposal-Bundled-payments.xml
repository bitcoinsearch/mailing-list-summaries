<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-12T02:47:10.494339+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-14 08:09:45+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-12T02:47:10.494380+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003979.html" rel="alternate"/>
    <summary>The context discusses the possibility of distributing a submarine swap client separate from the lightning wallet of the user, which would enable competition in the market. Currently, Boltz is distributing a Progressive Web App that serves javascript to perform the necessary checks and sweeps the funds. However, it is unclear whether their app is doing this correctly. Lightning Loop could also benefit from this separation by distributing an app that does not require a local LND instance, thereby expanding their potential user base. The missing ingredient for this separation is the bundling of fee prepayment and main payment in the same invoice.The discussion also mentions an ongoing standardization effort for LSP protocols, with Boltz working to add submarine swaps to it. Another point raised is the need for dedicated logic in order to fully verify the swap parameters and perform an on-chain sweep or timeout, which is essential for trust-minimized swaps. Trusting the service to send funds or pay an invoice is not sufficient for a trust-minimized swap.The proposal put forward is to extend BOLT-11, where an invoice can contain two bundled payments with distinct preimages and amounts. This is particularly relevant for services like submarine swaps and JIT channels that require prepayment of mining fees. Currently, services like Boltz can ask for a prepayment because their software can handle it, but competitors who do not require a dedicated wallet find it impractical to show two invoices simultaneously. This vulnerability exposes Boltz to DoS attacks where attackers force them to pay on-chain fees.JIT channel providers who want to protect against mining fee attacks need to ask for the preimage of the main payment before opening the channel, but this makes their service custodian. To address these issues, the proposed change is to bundle the prepayment and main payment in the same BOLT-11 invoice. The semantics of bundled payments involve waiting for all HTLCs of both payments to arrive before fulfilling the HTLCs of the prepayment. If the main payment does not arrive, the prepayment is failed with a MPP timeout.The proposal is seen as a way to level the playing field in terms of competition between lightning service providers. It would allow competitors without an established user base running a dedicated client to be less exposed to mining fee attacks. ACINQ would also benefit from this change, making their pay-to-open service fully non-custodial. The suggestion is to implement this change in BOLT-11 rather than using BOLT-12 or onion messages, as it does not require the exchange of new messages and can be done in a non-interactive way.</summary>
    <published>2023-06-14T08:09:45+00:00</published>
  </entry>
</feed>
