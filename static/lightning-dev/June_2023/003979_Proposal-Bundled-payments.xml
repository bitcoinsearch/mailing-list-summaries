<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-08T02:46:12.299729+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-14 08:09:45+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-08T02:46:12.299752+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003979.html" rel="alternate"/>
    <summary>A recent discussion on the Lightning-dev mailing list proposes an extension to BOLT-11, the Lightning Network protocol. The proposal suggests adding the ability for invoices to contain two bundled payments with distinct preimages and amounts. This feature would address the use case of services that require prepayment of a mining fee for non-custodian exchanges like submarine swaps and JIT channels.In the case of submarine swaps, where dedicated client software can handle prepayments, competitors without such software face challenges. Boltz, for example, shows an invoice to users whose wallet is agnostic about the swap. It would be impractical for them to display two invoices simultaneously. This vulnerability exposes Boltz to potential denial-of-service (DoS) attacks, forcing them to pay on-chain fees.For providers of JIT channels, protecting against mining fee attacks requires obtaining the preimage of the main payment before opening the channel. However, this makes the service custodian, as they must hold custody of funds until the channel is opened. This raises legal concerns, particularly in Europe where it falls under the European MICA regulation. Competitors who refuse to offer custodian services are excluded from this game.The proposed solution is to bundle the prepayment and main payment in the same BOLT-11 invoice. The semantics of bundled payments involve waiting for all HTLCs of both payments to arrive before fulfilling the HTLCs of the prepayment. If the main payment fails to arrive, the prepayment is failed with a MPP timeout. Once both payments' HTLCs have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts the on-chain transaction. Note that the main payment can still fail if the sender does not reveal the preimage.The proposal aims to level the competition field between lightning service providers by allowing them to distribute separate submarine swap clients. This separation of the wallet and submarine swap providers enables more competition. Lightning Loop, for example, could distribute an app that does not require a local LND instance, vastly increasing its potential user base. The missing ingredient is the bundling of fee prepayment and main payment in the same invoice.It's worth noting that there is an ongoing standardization effort for LSP protocols, and Boltz is currently working to add submarine swaps to it. The proposal suggests implementing the change in BOLT-11 rather than introducing new messages through BOLT-12 or onion messages. This approach avoids unnecessary complications and allows for non-interactive implementation.Overall, the proposed extension to BOLT-11 addresses the challenges faced by lightning service providers in terms of prepayment and mining fee attacks. It aims to improve competition and make services more non-custodial while adhering to regulatory requirements.</summary>
    <published>2023-06-14T08:09:45+00:00</published>
  </entry>
</feed>
