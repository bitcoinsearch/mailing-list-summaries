<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-13T02:57:22.414492+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-14 08:09:45+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-13T02:57:22.414521+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003979.html" rel="alternate"/>
    <summary>In a recent email exchange on the Lightning-dev mailing list, Thomas Voegtlin proposed an extension to BOLT-11, the Lightning Network invoice protocol. He suggested adding the ability for an invoice to contain two bundled payments with distinct preimages and amounts. This proposal is aimed at addressing the need for services that require a prepayment of a mining fee for non-custodial exchanges like submarine swaps and JIT (Just-In-Time) channels.Voegtlin explained that in both cases, service providers receive a Hashed Time-Locked Contract (HTLC) without the preimage and have to send funds on-chain while waiting for the client to reveal the preimage and claim the payment. To mitigate the risk of non-payment, these providers ask for a prepayment of mining fees. However, some competitors, like the Boltz exchange, face practical challenges in showing two invoices simultaneously to the user, as their website serves an invoice to the user whose wallet is agnostic about the swap.The proposal suggests bundling the prepayment and main payment in the same BOLT-11 invoice to address this issue. The semantics of bundled payments would involve the receiver waiting for all HTLCs of both payments to arrive before fulfilling the HTLCs of the prepayment. If the main payment does not arrive, the prepayment would be failed with a MPP (Multi-Path Payment) timeout. Once both payments have arrived, the receiver would fulfill the HTLCs of the prepayment and broadcast the on-chain transaction.Voegtlin acknowledged that this proposal does not prevent the service provider from stealing the prepayment but noted that this risk already exists today. He believes that implementing this change in BOLT-11 would level the playing field for competition among lightning service providers. Currently, Loop by Lightning Labs requires the use of a dedicated client, leaving competitors without an established user base vulnerable to the mining fee attack. ACINQ, the company behind Phoenix, could also benefit from this change by making its pay-to-open service fully non-custodial.Voegtlin emphasized that this change should be implemented in BOLT-11 rather than using BOLT-12 or onion messages. He argued that the proposal does not require the exchange of new messages and can be done in a non-interactive way, simplifying the implementation process.It is worth noting that Boltz is already distributing a Progressive Web App for submarine swaps, separate from the user's lightning wallet. Additionally, there is an ongoing standardization effort for LSP (Lightning Service Provider) protocols, and Boltz is working to add submarine swaps to it. Voegtlin's proposal aims to enable competition and expand the potential user base for Lightning Loop, a service that could benefit from distributing an app that does not require a local LND (Lightning Network Daemon) instance. The missing ingredient for this distribution method is the bundling of fee prepayment and the main payment in the same invoice.Overall, Voegtlin's proposal suggests a solution to address the challenges faced by service providers in requiring prepayments for non-custodial exchanges. By bundling the prepayment and main payment in the same invoice, the proposal aims to enhance competition among lightning service providers and provide a more secure and efficient user experience.</summary>
    <published>2023-06-14T08:09:45+00:00</published>
  </entry>
</feed>
