<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-11T02:38:16.868108+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-14 08:09:45+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-11T02:38:16.868136+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003979.html" rel="alternate"/>
    <summary>The context provided discusses the possibility of distributing a submarine swap client that is separate from the lightning wallet of the user, which would enable competition in the market. The example given is Boltz, a service that distributes a Progressive Web App and serves javascript to perform the necessary checks and sweeps for submarine swaps. However, it is unclear whether Boltz's app is doing this correctly. The separation between wallet and submarine swap providers could benefit Lightning Loop by distributing an app that does not require a local LND instance, thereby increasing its potential user base. The missing ingredient for this is the bundling of fee prepayment and main payment in the same invoice. It is mentioned that there is an ongoing standardization effort for LSP protocols, with Boltz working to add submarine swaps to it. In a proposal by Thomas Voegtlin, an extension to BOLT-11 is suggested where an invoice can contain two bundled payments with distinct preimages and amounts. This proposal aims to address the issue of services requiring prepayment of mining fees for non-custodian exchanges such as submarine swaps and JIT channels. Currently, services like Boltz, which use dedicated client software, can ask for prepayment because their software can handle it. However, competitors who require a dedicated wallet, like the Boltz exchange, cannot do so practically. This leaves them vulnerable to DoS attacks, where attackers can force them to pay on-chain fees. For JIT channels, providers who want to protect themselves against mining fee attacks need to ask for the preimage of the main payment before opening the channel. However, this makes the service custodial, which has legal implications under European MICA regulation. Competitors like Electrum, who refuse to offer custodian services, are excluded from this game. To solve these issues, the proposal suggests bundling the prepayment and main payment in the same BOLT-11 invoice. The receiver would wait for all the HTLCs of both payments to arrive before fulfilling the pre-payment. If the main payment does not arrive, they should fail the pre-payment with a MPP timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction. It is acknowledged that this proposal does not prevent service providers from stealing the prepayment, but this is already a risk in the current system. The proposal aims to level the field in terms of competition between lightning service providers and potentially benefit ACINQ by making their pay-to-open service fully non-custodian. It is suggested that this change should be implemented in BOLT-11 rather than using new messages or protocols like BOLT-12 or onion messages, as it can be done in a non-interactive way without adding unnecessary complexity.</summary>
    <published>2023-06-14T08:09:45+00:00</published>
  </entry>
</feed>
