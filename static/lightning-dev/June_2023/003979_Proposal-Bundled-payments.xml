<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-03T03:07:09.483908+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-14 08:09:45+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-03T03:07:09.483934+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003979.html" rel="alternate"/>
    <summary>There is a discussion about the possibility of distributing a submarine swap client that is separate from the lightning wallet of the user, which would enable competition in the market. This separation would allow Lightning Loop to distribute an app that does not require a local LND instance, increasing their potential user base. However, the only missing ingredient is the bundling of fee prepayment and main payment in the same invoice. There is an ongoing standardization effort for LSP protocols, and Boltz is working to add submarine swaps to it.The context also discusses the need for dedicated logic in order to fully verify the swap parameters and perform an on-chain sweep/timeout, which is a requirement for a trust minimized swap. It is mentioned that one always requires dedicated logic to validate the swap parameters and perform the necessary actions. A user can trust the service to send funds or pay an invoice, but that does not make it a trust minimized swap.The proposal by Thomas Voegtlin suggests an extension to BOLT-11, where an invoice can contain two bundled payments with distinct preimages and amounts. This is aimed at services that require prepayment of a mining fee for non-custodian exchanges, such as submarine swaps and JIT channels. Currently, services like Boltz that use dedicated client software can ask for a prepayment, but competitors who do not require a dedicated wallet cannot do the same. This creates a vulnerability to DoS attacks. Similarly, providers of JIT channels need to ask for the preimage of the main payment before opening the channel to protect against mining fee attacks. However, this makes them custodians and subject to regulations. The proposal aims to solve these issues by bundling the prepayment and main payment in the same BOLT-11 invoice.The semantics of bundled payments are explained, highlighting that the receiver should wait until all the HTLCs of both payments have arrived before fulfilling the HTLCs of the prepayment. If the main payment does not arrive, they should fail the pre-payment with a MPP timeout. Once both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction.The proposal is seen as a way to level the field in terms of competition between lightning service providers and would benefit ACINQ by making their pay-to-open service fully non-custodian. It is suggested that the change should be implemented in BOLT-11 rather than using new messages or protocols.Overall, the context provides insight into the possibility of distributing separate submarine swap clients, the need for dedicated logic in verifying swap parameters, and the proposal to bundle prepayment and main payment in the same invoice to protect against DoS attacks and comply with regulations.</summary>
    <published>2023-06-14T08:09:45+00:00</published>
  </entry>
</feed>
