<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-12T02:46:55.925731+00:00</updated>
  <author>
    <name>SomberNight 2023-06-20 16:49:05+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-12T02:46:55.925814+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003990.html" rel="alternate"/>
    <summary>In a recent discussion on the Lightning-dev mailing list, ThomasV proposed a solution to address vulnerability to Denial of Service (DoS) attacks faced by Boltz, a lightning service provider. Currently, Boltz is susceptible to DoS attacks where attackers force them to pay on-chain fees. To protect against this attack, ThomasV suggests implementing Just-In-Time (JIT) channels. These channels would require providers to ask for the preimage of the main payment before opening the channel. While this offers protection, it also makes the service provider a custodian, subject to European MICA regulation. Competitors who refuse to offer custodian services are excluded from the game.To solve this problem, ThomasV proposes bundling the prepayment and main payment in the same BOLT-11 invoice. This means that the invoice would contain two preimages and two amounts: the prepayment and the main payment. The receiver would wait until all the HTLCs (Hashed Time-Locked Contracts) of both payments have arrived before fulfilling the HTLCs of the pre-payment. If the main payment fails to arrive, the pre-payment would be failed with a MPP (Multi-Path Payments) timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction. However, there is still a risk of the service provider stealing the pre-payment, which is already a concern today.ThomasV believes that implementing this change would level the playing field in terms of competition between lightning service providers. Currently, using Loop requires a dedicated client, putting competitors without an established user base running such a client at risk of the mining fee attack. Additionally, ACINQ, the creator of Phoenix, could benefit from this proposal by making their pay-to-open service fully non-custodian. As it stands, their current pay-to-open service falls under the scope of European MICA regulation, which they should take seriously.In terms of implementation, ThomasV suggests that this change be made in BOLT-11 rather than using BOLT-12 or onion messages. He argues that adding new messages would unnecessarily complicate the process and that non-interactive methods should be favored.Overall, ThomasV's proposal aims to address vulnerabilities and create a more competitive environment for lightning service providers while considering regulatory compliance and simplicity of implementation.</summary>
    <published>2023-06-20T16:49:05+00:00</published>
  </entry>
</feed>
