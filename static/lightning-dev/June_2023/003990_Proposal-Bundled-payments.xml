<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-24T01:41:13.209986+00:00</updated>
  <author>
    <name>SomberNight 2023-06-20 16:49:05+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-24T01:41:13.210014+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003990.html" rel="alternate"/>
    <summary>The proposal is to add a new feature to BOLT-11 that would allow an invoice to contain two bundled payments with distinct preimages and amounts. This feature would be useful for services such as submarine swaps and JIT channels that require the prepayment of a mining fee for a non-custodian exchange to take place. In the submarine swap scenario, Bob could pay Alice on Lightning while Alice receives payment on-chain. The security checks and swap logic are only implemented on Alice's side, while Bob is a simple lightning wallet that can parse and pay this new type of LN invoice containing two hashes.JIT channels have three strategies to provide liquidity, and pre-paying fees would make sense if not using 0-conf anymore. However, if trust and regulation are all that matters, the second solution works fine as long as the mempool isn't empty. The decision to make this feature required or optional remains with the service provider. Submarine swaps make it possible to add receiving capacity to a channel, but the proposal requires senders to be aware that the payment will lead to a channel creation (or a splice) on the receiver end. It also requires all existing software used by senders to be updated, and if the sender does not support the new feature, it ignores the new fields.Boltz, a Lightning service provider, is vulnerable to DoS attacks where the attacker forces them to pay on-chain fees. To protect against this mining fee attack, providers need to ask for the preimage of the main payment before opening the channel. However, asking for the preimage first makes their service custodian, which falls within the European MICA regulation. Bundling the prepayment and the main payment in the same BOLT-11 invoice would be beneficial to solve this issue. The proposal suggests that the invoice should contain two preimages and two amounts, and the receiver should wait until all the HTLCs of both payments have arrived before fulfilling the HTLCs of the pre-payment. Once both payments' HTLCs have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction. Such a change should be implemented in BOLT-11, as it does not require the exchange of new messages. This proposal would level the playing field in terms of competition between Lightning service providers, making it possible for them to make their pay-to-open service fully non-custodian. In addition, adding a bip21 URI instead of the special bolt11 invoice would still allow Alice to receive on-chain, but Bob has the choice of either paying on-chain or via lightning. Overall, this proposal aims to introduce a new feature to BOLT-11 that would benefit Lightning service providers and users alike by providing greater flexibility and security in payment transactions.</summary>
    <published>2023-06-20T16:49:05+00:00</published>
  </entry>
</feed>
