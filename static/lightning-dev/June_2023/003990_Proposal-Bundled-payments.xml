<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-21T01:21:46.171800+00:00</updated>
  <author>
    <name>SomberNight 2023-06-20 16:49:05+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-21T01:21:46.171829+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003990.html" rel="alternate"/>
    <summary>The Lightning Network is a second-layer protocol that enables faster and cheaper Bitcoin transactions. It allows users to create payment channels between each other, reducing the number of on-chain transactions needed and increasing the network's scalability. However, there are still some challenges to overcome to make the Lightning Network even more efficient.One issue is related to payments that require a prepayment of a mining fee. Two examples of this type of payment are submarine swaps and JIT (Just-In-Time) channels. In these cases, the service provider receives a Hash Time-Locked Contract (HTLC) for which they do not have the preimage. They need to send funds on-chain and wait for the client to reveal the preimage when they claim the payment. To address this challenge, a proposal has been made to extend BOLT-11, the Lightning invoice format.The proposal suggests including two bundled payments with distinct preimages and amounts in an invoice. The new sender code required for this proposal can be made optional during a transition period. This change would make it possible for the service provider to offer non-custodian services, as the receiver would only need to trust the server with the prepayment amount. There are three entities involved in these payments: the user ("customer"), the server ("swap service provider"), and the swap service itself. The swap service provides a lightning invoice containing two payment hashes and amounts, one pair being used as a "prepayment."Another proposal related to the Lightning Network comes from ThomasV, a developer on the network. He suggested a solution to prevent denial-of-service (DoS) attacks on Boltz, a Lightning service provider. The attack occurs when an attacker forces Boltz to pay on-chain fees by showing two invoices simultaneously. To prevent this, ThomasV proposed using JIT channels and bundling prepayment and main payment in the same BOLT-11 invoice. This proposal would require the receiver to wait for all HTLCs of both payments to arrive before fulfilling the pre-payment. This would prevent DoS attacks and make it possible for providers to offer non-custodian services. ThomasV believes implementing this change in BOLT-11 is more practical than creating new messages in BOLT-12 or onion messages. All implementations of the Lightning Network are actively working on this proposal, which could be included in BOLT-12. In summary, both proposals aim to improve the Lightning Network's efficiency in handling payments that require a prepayment of a mining fee and prevent DoS attacks on service providers. These changes could make it easier for Lightning users to transact with each other and further increase the network's scalability.</summary>
    <published>2023-06-20T16:49:05+00:00</published>
  </entry>
</feed>
