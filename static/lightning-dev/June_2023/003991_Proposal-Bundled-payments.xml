<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-27T04:20:21.139365+00:00</updated>
  <author>
    <name>Matt Corallo 2023-06-20 17:00:45+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-27T04:20:21.139391+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003991.html" rel="alternate"/>
    <summary>Thomas Voegtlin, the founder of Electrum, discusses the implementation of BOLT-12 support in Electrum. He asks whether bundled payments would work with the current specification or require changes to BOLT-12. The response is that they will not work as-specified, but because BOLT12 offers are reusable, you will be able to scan a single offer and send two payments as long as the sender implements this. Thomas mentions that it will take years for BOLT-12 to become the dominant payment method on Lightning after it is merged. He also adds that if this feature was adopted in BOLT-11, it could be deployed much faster. However, a new BOLT-11 extension has zero implementations today and convincing people to care enough to implement it may be difficult. The goal of Thomas's proposal is to level the field of competition between Lightning service providers by allowing reverse submarine swap payments to come from any wallet. However, a dedicated client will still be needed to verify the redeem script and the invoice and to sweep the funds. It only makes sense if the user has an on-chain wallet they want to use, which is distinct from their lightning wallet. This seems like quite a narrow set of requirements.</summary>
    <published>2023-06-20T17:00:45+00:00</published>
  </entry>
</feed>
