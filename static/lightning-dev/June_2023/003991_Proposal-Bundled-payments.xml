<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-06T03:00:56.756581+00:00</updated>
  <author>
    <name>Matt Corallo 2023-06-20 17:00:45+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-06T03:00:56.756620+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003991.html" rel="alternate"/>
    <summary>In an email conversation, Thomas Voegtlin, the developer of Electrum, discusses the implementation of BOLT-12 in Electrum. He asks whether bundled payments would work with the current specification or if changes to BOLT-12 are required. It is mentioned that as-specified, bundled payments will not work with BOLT-12. However, due to the reusability of BOLT12 offers, it will be possible to scan a single offer and send two payments as long as the sender implements this feature.Thomas also mentions that they plan to implement BOLT-12 support in Electrum in the coming months and offers his help in the process. The idea of BOLT-12 becoming the dominant payment method on Lightning is acknowledged, but it is believed that it will take years after its merge for this to happen. On the other hand, if the proposed feature was adopted in BOLT-11, it could be deployed much faster. However, it is pointed out that BOLT-12 already has some momentum, while a new BOLT-11 extension would have to start from scratch with zero implementations.The goal of Thomas's proposal is to level the field of competition between Lightning service providers by allowing reverse submarine swap payments to come from any wallet. However, it is noted that a dedicated client will still be needed to verify the redeem script and invoice, as well as sweep the funds. The value of this proposal is questioned, as it seems to have a narrow set of requirements, where the user needs to have a "swap-aware" client for the swap setup and enforcement, but can use any lightning wallet to make the payment. This scenario would only make sense if the user has an on-chain wallet separate from their lightning wallet and if their lightning wallet does not support splice-out.</summary>
    <published>2023-06-20T17:00:45+00:00</published>
  </entry>
</feed>
