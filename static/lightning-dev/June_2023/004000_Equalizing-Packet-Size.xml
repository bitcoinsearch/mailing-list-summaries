<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Equalizing Packet Size</title>
  <updated>2023-07-06T03:08:01.033106+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-06-29 18:13:10+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Equalizing Packet Size</title>
    <updated>2023-07-06T03:08:01.033144+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/004000.html" rel="alternate"/>
    <summary>Recently, it has been discovered that even with Noise encryption, a third-party eavesdropper can potentially deduce the content of messages sent between LN (Lightning Network) nodes by analyzing the sizes of IP packets transmitted between them. This raises concerns about the privacy and security of payment routing across the network.To address this issue, one proposed solution is to ensure that all packet sizes are the same. The BOLT8 specification, which builds on top of TCP (Transmission Control Protocol), treats the receiver's perspective as a stream of bytes, despite the underlying IP packetization.Most implementations of BOLT8 tunnels have an object or software construction that handles message encryption. To enhance privacy, this object can be modified to function as a "buffer" in addition to its tunnel encrypter role.The interface of this object would include "send BOLT8 message" and "flush" entry points. It would maintain an internal buffer of fixed size, into which ciphertext from the "send BOLT8 message" interface is placed. When the buffer reaches its capacity, the object uses the POSIX `send` API to transmit it as a packet, ensuring fixed-size packets.The "flush" entry point monitors the buffer's fill level and adds a `pong` message to pad it until the buffer is completely full. However, special consideration must be given to cases where the buffer is almost full and the mandatory 2-byte message length and 2-byte message ID could potentially overflow the buffer. The object should handle this situation correctly.By implementing this approach, it becomes possible to encapsulate a sequence of `update_add_htlc` messages followed by a `commitment_signed` message within a single fixed-size packet or a series of fixed-size packets. It is crucial for the implementation to call the "flush" entry point so that the counterparty can receive the complete end portion of the `commitment_signed` message.To enhance robustness against internal bugs and ensure defensive programming, the object could incorporate an individual randomized timer that periodically triggers a "flush" operation. This helps compensate for situations where the implementation fails to "flush" when waiting for a response from the counterparty. In essence, this approach transforms potential interoperability issues into performance-related concerns.For optimal latency, it is recommended that the buffer size match the packet size of `update_add_htlc`, as this message type is expected to fit within a single IP packet.In conclusion, by introducing a buffer mechanism within BOLT8 tunnels, the problem of third-party eavesdroppers inferring message content based on packet sizes can be mitigated. This approach ensures that all packets have uniform sizes, enhancing privacy and security within the Lightning Network.</summary>
    <published>2023-06-29T18:13:10+00:00</published>
  </entry>
</feed>
