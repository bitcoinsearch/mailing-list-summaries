<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-02T03:13:35.242110+00:00</updated>
  <author>
    <name>David A. Harding 2023-06-19 20:29:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-02T03:13:35.242138+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003985.html" rel="alternate"/>
    <summary>In an email exchange between Thomas Voegtlin and Dave, the semantics of bundled payments in BOLT-11 invoices are discussed. According to Thomas, a BOLT-11 invoice contains two preimages and two amounts: a prepayment and a main payment. The receiver is expected to wait until all the HTLCs (Hash Time-Locked Contracts) of both payments have arrived before fulfilling the HTLCs of the pre-payment. If the main payment does not arrive, the prepayment should be failed with a Multi-Path Payments (MPP) timeout.Dave proposes an alternative approach where the prepayment could be made through a keysend payment using the onion message payload to indicate which payment hash should be associated with the prepayment. He suggests extending BOLT11 invoices with an extra_fee_via_keysend field. This would allow for smaller invoices and the ability to encode the extra_fee_via_keysend field in existing BOLT11 fields like the description or metadata field.Dave believes that this approach could be implemented immediately until an updated version of BOLT11 or an alternative using offers becomes widely deployed.Overall, the discussion revolves around the semantics of bundled payments in BOLT-11 invoices and the possibility of using keysend payments as an alternative approach.</summary>
    <published>2023-06-19T20:29:34+00:00</published>
  </entry>
</feed>
