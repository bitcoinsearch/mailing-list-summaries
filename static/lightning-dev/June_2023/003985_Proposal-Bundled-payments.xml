<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-21T01:22:22.123397+00:00</updated>
  <author>
    <name>David A. Harding 2023-06-19 20:29:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-21T01:22:22.123425+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003985.html" rel="alternate"/>
    <summary>In a communication between Thomas Voegtlin and Dave, they discussed the semantics of bundled payments. According to Thomas, the BOLT-11 invoice should contain two preimages and two amounts: prepayment and main payment. The receiver should wait until all the HTLCs of both payments have arrived before fulfilling the HTLCs of the pre-payment. If the main payment does not arrive, then the pre-payment should be failed with an MPP timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment, and they broadcast their on-chain transaction. Dave inquired whether it is necessary for a BOLT11 invoice to contain a payment hash for the prepayment or if it would be acceptable for the prepayment to use a keysend payment with the onion message payload indicating what payment hash to associate with the prepayment. He suggested that an extra_fee_via_keysend field would be significantly smaller and could be encoded in an existing BOLT11 field like (d) description or the relatively new (m) metadata field. This could allow for immediate implementation until an updated version of BOLT11 becomes widely deployed.</summary>
    <published>2023-06-19T20:29:34+00:00</published>
  </entry>
</feed>
