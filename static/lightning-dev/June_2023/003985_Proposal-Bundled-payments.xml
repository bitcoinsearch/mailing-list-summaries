<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-08T02:46:38.920571+00:00</updated>
  <author>
    <name>David A. Harding 2023-06-19 20:29:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-08T02:46:38.920592+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003985.html" rel="alternate"/>
    <summary>In an email exchange between Thomas Voegtlin and Dave, they discuss the semantics of bundled payments in the context of BOLT-11 invoices. The BOLT-11 invoice is said to contain two preimages and two amounts: a prepayment and a main payment. According to Thomas, the receiver should wait until all the HTLCs (Hashed Time Lock Contracts) of both payments have arrived before fulfilling the HTLCs of the prepayment. If the main payment does not arrive, the prepayment should be failed with a Multi-Path Payment (MPP) timeout. Once the HTLCs of both payments have arrived, the receiver can fulfill the HTLCs of the prepayment and broadcast their on-chain transaction. Thomas notes that the main payment can still fail if the sender never reveals the preimage of the main payment.Dave suggests an alternative approach where the BOLT11 invoice does not necessarily need to contain a payment hash for the prepayment. Instead, it could use a keysend payment with an onion message payload indicating which payment hash to associate with the prepayment. For example, if Alice wants to receive 1 BTC to a specific hash and has a prepayment of 10k sats, the 10k sats can be sent via keysend with metadata indicating that the receiver shouldn't claim it until they receive the 1 BTC HTLC to the specified hash.To implement this alternative approach, Dave proposes extending the BOLT11 invoices with an extra_fee_via_keysend field. This would make the invoice significantly smaller and allow encoding the extra_fee_via_keysend field in existing BOLT11 fields like the description or metadata field. This immediate implementation could be used until an updated version of BOLT11 or an alternative using offers becomes widely deployed.Overall, the email exchange discusses the semantics of bundled payments in BOLT-11 invoices and explores an alternative approach using keysend payments with associated payment hashes. The proposed approach suggests extending the BOLT11 invoices with an extra_fee_via_keysend field for efficient implementation.</summary>
    <published>2023-06-19T20:29:34+00:00</published>
  </entry>
</feed>
