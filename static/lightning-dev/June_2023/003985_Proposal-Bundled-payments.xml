<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-22T01:29:19.403215+00:00</updated>
  <author>
    <name>David A. Harding 2023-06-19 20:29:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-22T01:29:19.403238+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003985.html" rel="alternate"/>
    <summary>In an email discussion, Thomas Voegtlin explained the semantics of bundled payments. A BOLT-11 invoice contains two preimages and two amounts: prepayment and main payment. The receiver should wait for all the HTLCs of both payments to arrive before fulfilling the HTLCs of the pre-payment. If the main payment does not arrive, the pre-payment must be failed with a MPP timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment, and they broadcast their on-chain transaction. It is important to note that the main payment can still fail if the sender never reveals the preimage of the main payment.Dave asked whether it would be acceptable for the prepayment to use a keysend payment with the onion message payload for the receiver indicating what payment hash to associate with the prepayment. In this case, BOLT11 invoices would only need to be extended with an extra_fee_via_keysend field, which would be significantly smaller and would allow encoding the extra_fee_via_keysend field in an existing BOLT11 field like (d) description or the relatively new (m) metadata field. This may allow immediate implementation until an updated version of BOLT11 (or an alternative using offers) becomes widely deployed.</summary>
    <published>2023-06-19T20:29:34+00:00</published>
  </entry>
</feed>
