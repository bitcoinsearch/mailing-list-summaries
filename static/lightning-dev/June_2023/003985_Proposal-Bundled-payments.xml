<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-27T04:18:38.314256+00:00</updated>
  <author>
    <name>David A. Harding 2023-06-19 20:29:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-27T04:18:38.314281+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003985.html" rel="alternate"/>
    <summary>In an email dated June 12, 2023, Thomas Voegtlin explained the semantics of bundled payments. According to him, a BOLT-11 invoice should contain two preimages and two amounts - prepayment and main payment. The receiver should wait until all the HTLCs of both payments have arrived before fulfilling the HTLCs of the pre-payment. If the main payment does not arrive, they should fail the pre-payment with an MPP timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment, and they broadcast their on-chain transaction. However, the main payment can still fail if the sender never reveals the preimage of the main payment. Dave, in response, asked whether it was necessary for a BOLT11 invoice to contain a payment hash for the prepayment or whether using a keysend payment with the onion message payload would be acceptable. He proposed that an extra_fee_via_keysend field could be added to BOLT11 invoices to make them smaller, and this field could be encoded in an existing BOLT11 field such as (d) description or (m) metadata field. This would allow for immediate implementation until an updated version of BOLT11 or an alternative using offers becomes widely deployed.</summary>
    <published>2023-06-19T20:29:34+00:00</published>
  </entry>
</feed>
