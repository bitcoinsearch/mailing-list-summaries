<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-23T01:43:24.685180+00:00</updated>
  <author>
    <name>David A. Harding 2023-06-19 20:29:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-23T01:43:24.685226+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003985.html" rel="alternate"/>
    <summary>In a message from Thomas Voegtlin on June 12, 2023, the semantics of bundled payments are described. The BOLT-11 invoice in this scenario contains two preimages and two amounts: prepayment and main payment. The receiver is instructed to wait until all HTLCs (Hashed Time-Lock Contracts) for both payments have arrived before fulfilling the HTLCs of the pre-payment. If the main payment does not arrive, the pre-payment should be failed with a MPP (Multi-Path Payment) timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction. It is noted that the main payment can still fail if the sender never reveals the preimage of the main payment.Dave then poses a question regarding whether a BOLT11 invoice is necessary for containing a payment hash for the prepayment or if it would be acceptable for the prepayment to use a keysend payment. He suggests an extra_fee_via_keysend field to be added to the BOLT11 invoice, which would be smaller and allow encoding in existing fields like (d) description or (m) metadata until an updated version of BOLT11 becomes widely deployed.</summary>
    <published>2023-06-19T20:29:34+00:00</published>
  </entry>
</feed>
