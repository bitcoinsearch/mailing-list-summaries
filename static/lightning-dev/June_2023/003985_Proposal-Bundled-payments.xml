<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-24T01:41:41.852064+00:00</updated>
  <author>
    <name>David A. Harding 2023-06-19 20:29:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-24T01:41:41.852091+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003985.html" rel="alternate"/>
    <summary>The semantics of bundled payments were discussed by Thomas Voegtlin in an email thread. According to him, the BOLT-11 invoice contains two preimages and two amounts: prepayment and main payment. The receiver should wait until all the HTLCs of both payments have arrived before fulfilling the HTLCs of the pre-payment. If the main payment fails to arrive, they should fail the pre-payment with a MPP timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment, and they broadcast their on-chain transaction. However, the main payment can still fail if the sender never reveals the preimage of the main payment. Dave inquired whether a BOLT11 invoice is necessary to contain a payment hash for the prepayment or whether it is acceptable to use a keysend payment with the onion message payload for the receiver indicating what payment hash to associate with the prepayment. He suggested that an extra_fee_via_keysend field be added to the BOLT11 invoices to make them significantly smaller and allow encoding the extra_fee_via_keysend field in an existing BOLT11 field like (d) description or the relatively new (m) metadata field, which may allow immediate implementation until an updated version of BOLT11 becomes widely deployed.</summary>
    <published>2023-06-19T20:29:34+00:00</published>
  </entry>
</feed>
