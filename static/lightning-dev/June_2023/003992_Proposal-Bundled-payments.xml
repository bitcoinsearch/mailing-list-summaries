<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-08T02:48:03.005457+00:00</updated>
  <author>
    <name>Steve Lee 2023-06-20 17:16:52+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-08T02:48:03.005480+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003992.html" rel="alternate"/>
    <summary>In an email conversation, Thomas Voegtlin expressed his interest in implementing BOLT-12 support in Electrum and asked for clarification on whether bundled payments would work with the current specification or if changes to BOLT-12 would be necessary. He also mentioned that he believes it will take years for BOLT-12 to become the dominant payment method on Lightning and suggested that if the feature was adopted in BOLT-11 instead, it could be deployed faster.Bastien TEINTURIER responded to Thomas's email and highlighted the importance of the proposal requiring senders to be aware of channel creation or splice on the receiver end. Bastien proposed three strategies for providing JIT liquidity and explained that the currently deployed strategies do not require senders to be aware of JIT liquidity, which is why they were chosen. He also mentioned that if trust and regulation are the main concerns, solution 2 (opening a channel and forwarding the HTLC amount minus a fee) works fine, especially when coupled with 0-conf. However, if 0-conf is no longer used, pre-paying fees would make more sense. Bastien suggested including this new feature in BOLT-12 rather than BOLT-11 since all implementations are actively working on BOLT-12.Thomas Voegtlin responded to Bastien's email and expressed his belief that it is not too late to add a new feature to BOLT-11. He mentioned that technical decisions should be dictated by technical needs and proposed a new invoice feature that describes the prepayment of a fee using a different preimage. Thomas provided a possible way to make this feature optional during a transition period and mentioned two major implementations that could potentially support this proposal. He also suggested that LDK and Electrum could support this feature. Thomas emphasized that the proposal is a tiny change and only requires a new invoice feature.Matt Corallo joined the conversation and expressed his skepticism about getting any new interoperable change into BOLT-11. He mentioned the difficulty of getting amount-less BOLT-11 invoices broadly supported and the unlikelihood of the entire ecosystem supporting another new incompatible version of BOLT-11. Matt also questioned the need for the proposed feature and suggested exploring the use of splice-out and OMs for doing swaps.In a previous email, Thomas Voegtlin had proposed an extension to BOLT-11 where an invoice can contain two bundled payments with distinct preimages and amounts. He explained that this extension is beneficial for services that require the prepayment of a mining fee for a non-custodian exchange to take place, such as submarine swaps and JIT channels. Thomas outlined the semantics of bundled payments and mentioned that while his proposal doesn't prevent service providers from stealing the pre-payment, it levels the playing field in terms of competition between lightning service providers. He also believes that ACINQ would benefit from this proposal by making their pay-to-open service fully non-custodian and compliant with European MICA regulation.Overall, the conversation discusses the potential implementation of BOLT-12 support in Electrum, the advantages and disadvantages of bundled payments, and the implications for different lightning service providers.In a recent post on the Lightning-dev mailing list, ThomasV proposed a solution for a use case involving BOLT-11 without the need for BOLT-12 or onion messages. He argued that adding new messages would unnecessarily complicate the process and instead suggested a non-interactive approach. The proposal received initial feedback suggesting the use of BOLT-12 or OM, but ThomasV maintained that his proposed solution was sufficient.ThomasV is the Geschäftsführer of Electrum Technologies GmbH, a company based in Berlin, Germany. The company's details, including its address and registration information, were provided at the end of the email.The Lightning-dev mailing list is hosted by the Linux Foundation and serves as a platform for discussing development related to the Lightning Network. The email concluded with the standard mailing list information, including the link to subscribe/unsubscribe from the Lightning-dev mailing list.Overall, ThomasV's proposal aims to simplify the process by avoiding the exchange of new messages and using a non-interactive method for the use case in question. The discussion on the Lightning-dev mailing list will likely continue to explore the feasibility and merits of this approach.</summary>
    <published>2023-06-20T17:16:52+00:00</published>
  </entry>
</feed>
