<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-28T03:29:15.368145+00:00</updated>
  <author>
    <name>Steve Lee 2023-06-20 17:16:52+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-28T03:29:15.368180+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003992.html" rel="alternate"/>
    <summary>In an email exchange on June 20, 2023, Thomas Voegtlin mentioned that Electrum has not yet implemented BOLT-12. He expressed his willingness to help and asked whether bundled payments would work with the current specification or require changes to BOLT-12. Voegtlin also stated his belief that BOLT-12 may take years to become the dominant payment method on Lightning, but if the feature was adopted in BOLT-11, it could be deployed faster.In response to Voegtlin's email, Bastien TEINTURIER highlighted the need for senders to be aware of channel creation or splice on the receiver's end in Voegtlin's proposal. TEINTURIER suggested that extending BOLT-12 would make more sense than updating BOLT-11 since it requires new sender code anyway. TEINTURIER outlined three strategies for providing JIT liquidity: asking the receiver for the preimage and a fee, opening a channel and forwarding the HTLC amount minus the fee, or pre-paying the fee and opening a channel to forward the whole HTLC amount. TEINTURIER explained that strategies 1 and 2 are currently deployed, as they do not require senders to be aware of JIT liquidity. TEINTURIER also discussed the use of 0-conf and pre-paying fees based on trust and regulation considerations.Responding to TEINTURIER, Voegtlin mentioned that he believes two major implementations, Lightning Labs' Loop service and ACINQ, have incentives to support his proposal. He suggested that implementing the proposed change to BOLT-11 would be a small and optional addition. Voegtlin outlined how the new feature could be made optional during a transition period by defining a new feature bit, introducing two extra fields, and specifying different behavior for senders supporting the new feature. He emphasized that the decision to make the feature required or optional would rest with the service provider. Voegtlin also mentioned that submarine swaps add receiving capacity to a channel.In another email, Matt Corallo expressed doubt about getting any new interoperable change into BOLT-11 and suggested that specifying swaps on OMs would provide more privacy. In response, Voegtlin explained his proposal for extending BOLT-11 to include bundled payments with distinct preimages and amounts. He discussed the use cases of submarine swaps and JIT channels that require a prepayment of mining fees. Voegtlin highlighted the vulnerability of services like Boltz to DoS attacks and the legal implications of asking for preimage prior to opening a channel. He proposed bundling the prepayment and main payment in the same BOLT-11 invoice and outlined the semantics of bundled payments. Voegtlin believed that this change would level the playing field among Lightning service providers and benefit ACINQ by making their pay-to-open service fully non-custodian.Overall, the email exchange discussed the implementation of BOLT-12 in Electrum, the advantages and disadvantages of different strategies for providing JIT liquidity, the need for awareness of channel creation or splice on the receiver's end, and the proposal to extend BOLT-11 to include bundled payments. The conversation also touched on the incentives for supporting the proposed change, concerns about getting new changes into BOLT-11, and the vulnerability of certain services to DoS attacks and regulatory requirements.In a recent discussion on the Lightning-dev mailing list, ThomasV proposed a non-interactive approach for certain use cases in the Lightning Network. He suggested that these use cases can be addressed without the need for new messages, specifically mentioning BOLT-12 or onion messages. ThomasV's proposal received initial feedback suggesting the use of BOLT-12 or OM, but he argued against adding new messages when a non-interactive solution can suffice.ThomasV's proposal has sparked a conversation within the Lightning-dev community about the best approach for addressing these use cases. Some members agree with his stance, believing that simplicity should be prioritized and unnecessary complexity avoided. Others may have differing opinions on the matter.The Lightning-dev mailing list serves as a platform for developers and enthusiasts to discuss technical aspects of the Lightning Network. It is hosted by the Linux Foundation and allows participants to exchange ideas, share insights, and collaborate on the development of Lightning-related projects.ThomasV's proposal was made under the banner of Electrum Technologies GmbH, a company based in Berlin, Germany. The company's registered details are as follows: Electrum Technologies GmbH, Paul-Lincke-Ufer 8d, 10999 Berlin, Germany. It is listed in the Registergericht (Registry Court) of Berlin, Amtsgericht Charlottenburg, under HRB 164636. The Geschäftsführer (Managing Director) of Electrum Technologies GmbH is Thomas Voegtlin. These details were provided in the email signature of ThomasV's message.Overall, the discussion surrounding ThomasV's proposal on the Lightning-dev mailing list highlights the ongoing efforts within the Lightning Network</summary>
    <published>2023-06-20T17:16:52+00:00</published>
  </entry>
</feed>
