<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-22T01:30:47.952603+00:00</updated>
  <author>
    <name>Steve Lee 2023-06-20 17:16:52+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-22T01:30:47.952626+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003992.html" rel="alternate"/>
    <summary>Bitcoin Lightning Network developer Thomas Voegtlin has proposed an extension to BOLT-11 that would allow invoices to contain two bundled payments, with distinct preimages and amounts. The use case is for services that require the prepayment of a mining fee in order for a non-custodian exchange to take place. Thomas believes this proposal would level the field in terms of competition between lightning service providers. He also thinks it would be beneficial to bundle the prepayment and the main payment in the same BOLT-11 invoice. Currently, Boltz is vulnerable to DoS attacks, where the attacker forces them to pay on-chain fees. In addition, ACINQ would benefit from this, because it would make it possible for them to make their pay-to-open service fully non-custodian.However, Matt Corallo thinks the ship has sailed on getting any kind of new interoperable change in to BOLT-11. He believes that we already can't get amount-less BOLT-11 invoices broadly supported, rolling out yet another new incompatible version of BOLT-11 and expecting the entire ecosystem to support it doesn't seem all that likely. Bastien TEINTURIER thinks extending Bolt 12 (which requires new sender code anyway) makes more sense than updating Bolt 11. He sees only three strategies to provide JIT liquidity: ask receiver for the preimage and a fee, then open a channel and push the HTLC amount minus the fee; open a channel, then forward the HTLC amount minus a fee; and pre-pay fee, then open a channel and forward the whole HTLC amount on that channel. Both 1) and 2) have the advantages that the sender doesn't need to be aware that JIT liquidity is happening, and doesn't need to do anything special for that payment. But he agrees that this only works when coupled with 0-conf. If we're not using 0-conf anymore, pre-paying fees would make more sense.Thomas Voegtlin believes that it will take years after it is merged, until BOLT-12 actually becomes the dominant payment method on Lightning. OTOH, if this feature was adopted in BOLT-11, he thinks it could be deployed much faster. He also thinks that two major implementations have an incentive to support this proposal (although he cannot speak for them): Lightning Labs could potentially offer their Loop service to non-LND users; ACINQ would be able to open channels to Phoenix users without requesting the preimage first. This would put them on the safe side of the upcoming MICA regulation.In addition to his proposal for BOLT-11, ThomasV has also proposed a method for non-interactive payment channel closure using BOLT-11. The proposal was met with initial feedback suggesting the use of BOLT-12 or onion messages, but ThomasV argued that adding new messages would unnecessarily complicate the process. The email containing the proposal was sent to the Lightning-dev mailing list by Electrum Technologies GmbH, where ThomasV serves as Geschäftsführer.</summary>
    <published>2023-06-20T17:16:52+00:00</published>
  </entry>
</feed>
