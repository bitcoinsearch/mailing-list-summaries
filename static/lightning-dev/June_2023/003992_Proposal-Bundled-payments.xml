<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-06T03:01:47.777926+00:00</updated>
  <author>
    <name>Steve Lee 2023-06-20 17:16:52+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-06T03:01:47.777965+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003992.html" rel="alternate"/>
    <summary>In an email exchange, Thomas Voegtlin, the creator of Electrum, expressed his interest in implementing BOLT-12 support in Electrum. He asked for clarification on whether bundled payments would work with the current BOLT-12 specification or if changes would be required. He also mentioned his belief that it would take years for BOLT-12 to become the dominant payment method on Lightning, but if the feature was adopted in BOLT-11, it could be deployed much faster.Bastien TEINTURIER responded to Thomas and highlighted the importance of the proposal requiring senders to be aware of channel creation or splices on the receiver's end. Bastien proposed three strategies for providing Just-in-Time (JIT) liquidity, including asking the receiver for a preimage and fee, opening a channel and forwarding the HTLC amount, or pre-paying the fee and opening a channel. Bastien explained that strategies 1 and 2 are currently deployed on the network, while Thomas' proposal suggests strategy 3. Both strategies 1 and 2 have advantages as they don't require senders to be aware of JIT liquidity. Bastien also mentioned that solution 2 works fine as long as zero-conf is used, but if zero-conf is not utilized, pre-paying fees would make more sense. Bastien suggested including this new feature in BOLT-12 rather than BOLT-11 since all implementations are actively working on BOLT-12.Thomas responded to Bastien and expressed his belief that it is not too late to add a new feature to BOLT-11. He emphasized that technical decisions should be dictated by technical needs and proposed a new invoice feature that describes the prepayment of a fee using a different preimage. Thomas suggested making this feature optional during a transition period and outlined how it could be implemented. He also mentioned that two major implementations, Lightning Labs and ACINQ, would have an incentive to support this proposal. Furthermore, Thomas suggested that LDK and Electrum could also support the feature.Matt Corallo expressed his opinion that it might be challenging to get any new interoperable change into BOLT-11 at this point. He mentioned the difficulty in getting amount-less BOLT-11 invoices broadly supported and stated that rolling out another new incompatible version of BOLT-11 would be unlikely. Matt also questioned the need for the proposed change in relation to splice-out and suggested building on Onion Messages (OMs) for more privacy.In a separate email, Thomas Voegtlin proposed an extension to BOLT-11 where an invoice can contain two bundled payments with distinct preimages and amounts. He explained that this extension is useful for services that require a prepayment of a mining fee for non-custodian exchanges such as submarine swaps and JIT channels. Thomas highlighted the vulnerability of services like Boltz exchange to DoS attacks and the legal implications for services that ask for preimages first. He suggested bundling the prepayment and main payment in the same BOLT-11 invoice and provided the semantics of bundled payments. Thomas acknowledged that this proposal does not prevent service providers from stealing the prepayment but believes it would level the playing field among lightning service providers.Overall, the discussions revolve around the implementation of BOLT-12 support, the advantages and considerations of different strategies for JIT liquidity, the possibility of adding a new feature to BOLT-11, and the proposal for bundled payments in BOLT-11 invoices.In a recent discussion on the Lightning-dev mailing list, ThomasV proposed a non-interactive solution for a use case that does not require the exchange of new messages. This proposal sparked some initial feedback suggesting the use of BOLT-12 or onion messages, but ThomasV believes that adding new messages would unnecessarily complicate the process. Instead, he argues for a non-interactive approach.ThomasV's proposal generated interest and discussion among the participants on the mailing list. The proposal was shared by Electrum Technologies GmbH, a company based in Berlin, Germany. The company's details, including its address and legal registration information, were provided in the email signature.The Lightning-dev mailing list, hosted by the Linux Foundation, serves as a platform for developers and enthusiasts to discuss topics related to the Lightning Network. Participants can join the mailing list and engage in conversations by visiting the provided link.Overall, the discussion revolved around ThomasV's proposal for a non-interactive solution and the potential use of BOLT-12 or onion messages. The community is actively engaged in exploring different approaches and finding the most efficient and effective solution for the given use case.</summary>
    <published>2023-06-20T17:16:52+00:00</published>
  </entry>
</feed>
