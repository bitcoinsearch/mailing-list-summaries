<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-24T01:42:54.578671+00:00</updated>
  <author>
    <name>Steve Lee 2023-06-20 17:16:52+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-24T01:42:54.578698+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003992.html" rel="alternate"/>
    <summary>Thomas Voegtlin, CEO of Electrum Technologies GmbH, proposed a new feature for Lightning Network payments that would not require the exchange of new messages. In his message to the Lightning-dev mailing list, he suggested using BOLT-11 instead of BOLT-12 or onion messages, which he believed would unnecessarily complicate things.The proposal involves an extension to BOLT-11 where an invoice can contain two bundled payments with distinct preimages and amounts. This could be beneficial for services that require the prepayment of a mining fee in order for a non-custodian exchange to take place. The proposal would level the field in terms of competition between lightning service providers, and it could make it possible for ACINQ to make their pay-to-open service fully non-custodian.However, some members of the community are skeptical about the proposal. Matt Corallo believes that the ship has already sailed on getting any kind of new interoperable change into BOLT-11. Thomas, on the other hand, thinks it is not too late to add a new feature to BOLT-11, and the decision to make this feature required or optional remains with the service provider.Bastien TEINTURIER suggested extending Bolt 12 instead of updating Bolt 11, since all implementations are actively working on this. He also highlighted that Thomas' proposal requires senders to be aware that the payment will lead to a channel creation (or a splice) on the receiver end and requires all existing software used by senders to be updated.Bastien identified three strategies to provide JIT liquidity: ask the receiver for the preimage and a fee, then open a channel and push the HTLC amount minus the fee; open a channel, then forward the HTLC amount minus a fee; or pre-pay the fee, then open a channel and forward the whole HTLC amount on that channel. Currently, what is deployed on the network is the first two strategies, while Thomas is proposing the third one. Both the first and second strategies have the advantages that the sender doesn't need to be aware that JIT liquidity is happening, and doesn't need to do anything special for that payment, which is the main reason those strategies were chosen. If all you're concerned about is trust and regulation, solution two works fine as long as the mempool isn't empty.In summary, Thomas Voegtlin proposed a new feature for Lightning Network payments that involves an extension to BOLT-11. While some members of the community are skeptical about the proposal, others believe it could benefit non-custodian exchanges and level the field for lightning service providers. Bastien TEINTURIER suggested extending Bolt 12 instead of updating Bolt 11, and identified three strategies to provide JIT liquidity. Currently, what is deployed on the network is the first two strategies, while Thomas is proposing the third one.</summary>
    <published>2023-06-20T17:16:52+00:00</published>
  </entry>
</feed>
