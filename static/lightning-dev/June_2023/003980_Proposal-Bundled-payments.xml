<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-21T01:20:32.573139+00:00</updated>
  <author>
    <name>Matt Corallo 2023-06-14 17:28:04+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-21T01:20:32.573166+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003980.html" rel="alternate"/>
    <summary>There is a proposal to extend BOLT-11 to include two bundled payments with distinct preimages and amounts for services that require the prepayment of mining fees, such as Submarine swaps and JIT channels. The proposal aims to level the field in terms of competition between lightning service providers, making it possible for them to make their pay-to-open service fully non-custodian. Currently, competitors who do not have an established user base running a dedicated client are exposed to the mining fee attack. In the case of submarine swaps, services that use dedicated client software can ask for a prepayment; however, competitors who do not require a dedicated wallet cannot do that. Their website shows an invoice to the user, whose wallet that is agnostic about the swap, and it would be unpractical for them to show two invoices to be paid simultaneously. This creates a situation where such services are vulnerable to DoS attacks, where the attacker forces them to pay on-chain fees.According to Thomas Voegtlin, the proposal would benefit ACINQ, as it would make it possible for them to make their pay-to-open service fully non-custodian. However, some initial feedback suggests that this is a use case for BOLT-12 or onion messages, but Thomas believes that this is making things unnecessarily complicated. He thinks we should not add new messages when things can be done in a non-interactive way. As of now, getting a new interoperable change into BOLT-11 doesn't seem all that likely, considering that we already can't get amount-less BOLT-11 invoices broadly supported. If we're working towards specifying some "standard" way of doing swaps, (a) Thomas would be curious to understand why the need isn't obviated by splice-out, and (b) why it shouldn't be built on OMs so you can do it more privately.</summary>
    <published>2023-06-14T17:28:04+00:00</published>
  </entry>
</feed>
