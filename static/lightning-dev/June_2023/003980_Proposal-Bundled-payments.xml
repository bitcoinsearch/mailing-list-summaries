<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-29T02:52:45.846997+00:00</updated>
  <author>
    <name>Matt Corallo 2023-06-14 17:28:04+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-29T02:52:45.847019+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003980.html" rel="alternate"/>
    <summary>In a recent discussion on the Lightning-dev mailing list, Thomas Voegtlin proposed an extension to BOLT-11, which would allow invoices to contain two bundled payments with distinct preimages and amounts. The motivation behind this proposal is to address the need for prepayment of mining fees in services like submarine swaps and JIT channels.Currently, some service providers ask for prepayment of mining fees as a precautionary measure, as there is no guarantee that the client will claim the payment. However, this approach creates vulnerabilities and limitations for certain Lightning service providers. For example, competitors who do not require dedicated wallets, such as the Boltz exchange, are unable to ask for prepayment, making them susceptible to DoS attacks where attackers force them to pay on-chain fees.Similarly, providers who want to protect themselves against mining fee attacks in JIT channels need to ask for the preimage of the main payment before opening the channel. However, this makes them custodians, which can have legal implications under regulations like European MICA. Competitors who refuse to offer custodian services are excluded from participating in this game.To address these challenges, Thomas proposes bundling the prepayment and the main payment in the same BOLT-11 invoice. The semantics of bundled payments would require the receiver to wait until all the HTLCs (Hash Time-Locked Contracts) of both payments have arrived before fulfilling the HTLCs of the prepayment. If the main payment does not arrive, the prepayment should be failed with a MPP (Multi-Path Payments) timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction.Thomas acknowledges that this proposal does not prevent service providers from stealing the prepayment, but argues that this risk already exists in the current system. He believes that implementing this change in BOLT-11, rather than using BOLT-12 or onion messages, would simplify the process without requiring the exchange of new messages.Overall, Thomas believes that his proposal would level the field for competition between Lightning service providers and benefit companies like ACINQ by allowing them to offer fully non-custodian pay-to-open services. He encourages further discussion on the topic within the Lightning-dev community.Reference: [Lightning-dev mailing list](https://lists.linuxfoundation.org/mailman/listinfo/lightning-dev)</summary>
    <published>2023-06-14T17:28:04+00:00</published>
  </entry>
</feed>
