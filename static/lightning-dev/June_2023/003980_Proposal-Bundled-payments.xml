<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-23T01:41:51.101896+00:00</updated>
  <author>
    <name>Matt Corallo 2023-06-14 17:28:04+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-23T01:41:51.101991+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003980.html" rel="alternate"/>
    <summary>In an email to the Lightning-dev mailing list, Thomas Voegtlin proposed an extension to BOLT-11 that would allow for two bundled payments with distinct preimages and amounts. The use case for this proposal is for services that require the prepayment of a mining fee in order for a non-custodian exchange to take place, such as Submarine swaps and JIT channels. Providers who want to protect themselves against mining fee attacks need to ask the preimage of the main payment before they open the channel, which makes their service custodian. In order to solve this issue, it would be beneficial to bundle the prepayment and the main payment in the same BOLT-11 invoice.The semantics of bundled payments are that the BOLT-11 invoice contains two preimages and two amounts: prepayment and main payment. The receiver should wait until all the HTLCs of both payments have arrived before they fulfill the HTLCs of the pre-payment. If the main payment does not arrive, they should fail the pre-payment with an MPP timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment, and they broadcast their on-chain transaction.Voegtlin believes that this proposal would level the field in terms of competition between lightning service providers and make it possible for providers to make their pay-to-open service fully non-custodian. He also thinks that such a change should be implemented in BOLT-11 and not using BOLT-12 or onion messages because the proposal does not require the exchange of new messages.</summary>
    <published>2023-06-14T17:28:04+00:00</published>
  </entry>
</feed>
