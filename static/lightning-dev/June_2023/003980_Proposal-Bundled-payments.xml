<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-12T02:45:29.015869+00:00</updated>
  <author>
    <name>Matt Corallo 2023-06-14 17:28:04+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-12T02:45:29.015908+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003980.html" rel="alternate"/>
    <summary>In a recent email exchange on the Lightning-dev mailing list, Thomas Voegtlin proposed an extension to BOLT-11, the Lightning Network protocol, that would allow invoices to contain two bundled payments with distinct preimages and amounts. This proposal is aimed at addressing the use case of services that require prepayment of mining fees for non-custodian exchanges such as submarine swaps and JIT channels.Voegtlin explained that in both cases, service providers receive HTLCs (hashed time-locked contracts) for which they do not have the preimage. They then need to send funds on-chain and wait for the client to reveal the preimage when claiming the payment. However, due to the uncertainty of whether the client will actually claim the payment, service providers often request prepayment of mining fees.The issue arises for services like the Boltz exchange, which do not require a dedicated wallet and cannot ask for prepayment like Loop by Lightning Labs. These services face vulnerability to denial-of-service (DoS) attacks where attackers force them to pay on-chain fees. Similarly, providers of JIT channels who want to protect themselves against mining fee attacks need to ask for the preimage of the main payment before opening the channel, effectively becoming custodians.To solve these issues, Voegtlin suggests bundling the prepayment and the main payment in the same BOLT-11 invoice. The proposal outlines the semantics of bundled payments, including waiting for all HTLCs of both payments to arrive before fulfilling the pre-payment HTLCs. If the main payment does not arrive, the pre-payment should be failed with a MPP timeout. Once both payments have arrived, the receiver fulfills the prepayment HTLCs and broadcasts the on-chain transaction. It's important to note that this proposal does not prevent the service provider from stealing the pre-payment, but Voegtlin argues that this is already a risk in the current system.Voegtlin believes that this proposal would level the playing field for competition between lightning service providers, as it would remove the requirement for a dedicated client to use services like Loop and protect non-custodian providers from mining fee attacks. He also suggests that ACINQ, a Lightning Network technology company, would benefit from this change by enabling them to make their pay-to-open service fully non-custodial.In terms of implementation, Voegtlin emphasizes that this change should be implemented in BOLT-11 rather than using new protocols like BOLT-12 or onion messages. He argues that the proposal can be achieved without the need for additional messages, making it a non-interactive solution.Overall, Voegtlin's proposal aims to address the challenges faced by services that require prepayment of mining fees in non-custodian exchanges. By bundling payments in BOLT-11 invoices, he believes it would enhance competition among lightning service providers and improve the overall functionality of the Lightning Network.</summary>
    <published>2023-06-14T17:28:04+00:00</published>
  </entry>
</feed>
