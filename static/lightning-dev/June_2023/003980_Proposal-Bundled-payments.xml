<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-27T04:02:37.202470+00:00</updated>
  <author>
    <name>Matt Corallo 2023-06-14 17:28:04+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-27T04:02:37.202497+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003980.html" rel="alternate"/>
    <summary>In an email to the Lightning-dev mailing list, Thomas Voegtlin proposed an extension to BOLT-11 that would allow invoices to contain two bundled payments with distinct preimages and amounts. The use case for this proposal is for services that require the prepayment of a mining fee in order for a non-custodial exchange to take place, such as submarine swaps and JIT channels. The issue is that service providers receive an HTLC for which they do not have the preimage, so they have to send funds on-chain and wait for the client to reveal the preimage when they claim the payment. Because there is no guarantee that the client will actually claim the payment, the service providers need to ask for prepayment of mining fees.Currently, services that use dedicated client software, like Loop by Lightning Labs, can ask for a prepayment because their software can handle it, but competitors who do not require a dedicated wallet, like the Boltz exchange, cannot. Additionally, providers who want to protect themselves against mining fee attacks need to ask for the preimage of the main payment before they open the channel, making their service custodian from a legal perspective. This is where the proposal comes in, bundling the prepayment and the main payment in the same BOLT-11 invoice.The semantics of bundled payments are that the BOLT-11 invoice contains two preimages and two amounts: prepayment and main payment. The receiver should wait until all the HTLCs of both payments have arrived before fulfilling the HTLCs of the pre-payment. If the main payment does not arrive, they should fail the pre-payment with an MPP timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction. Voegtlin believes that this proposal would level the field in terms of competition between lightning service providers. Currently, you need to use a dedicated client in order to use Loop, and competitors who do not have an established user base running a dedicated client are exposed to the mining fee attack. Additionally, he believes that ACINQ would benefit from this, as it would make it possible for them to make their pay-to-open service fully non-custodial. Finally, Voegtlin believes such a change should be implemented in BOLT-11, not using BOLT-12 or onion messages, as the proposal does not require the exchange of new messages.</summary>
    <published>2023-06-14T17:28:04+00:00</published>
  </entry>
</feed>
