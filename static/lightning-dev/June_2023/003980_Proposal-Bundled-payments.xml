<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-10T02:53:43.531837+00:00</updated>
  <author>
    <name>Matt Corallo 2023-06-14 17:28:04+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-10T02:53:43.531877+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003980.html" rel="alternate"/>
    <summary>It is suggested that implementing any new interoperable changes in BOLT-11 may not be feasible at this point. The support for amount-less BOLT-11 invoices is already limited, and introducing another incompatible version of BOLT-11 and expecting widespread adoption seems unlikely. The proposal put forward by Thomas Voegtlin is to extend BOLT-11 by allowing invoices to contain two bundled payments with distinct preimages and amounts. This extension is intended to address the needs of services that require prepayment of mining fees for non-custodian exchanges, such as submarine swaps and JIT channels. In the case of submarine swaps, dedicated client software like Loop by Lightning Labs can handle prepayments, but competitors like Boltz Exchange cannot. This creates a vulnerability where attackers can force Boltz to pay on-chain fees, resulting in denial-of-service attacks. For JIT channels, providers who want to protect themselves against mining fee attacks need to ask for the preimage of the main payment before opening the channel. However, this makes them custodians from a legal perspective, which may have regulatory implications. Competitors like Electrum, who refuse to offer custodian services, are excluded from participating. To address these issues, Thomas proposes bundling the prepayment and the main payment in the same BOLT-11 invoice. The semantics of bundled payments would involve waiting for all HTLCs of both payments to arrive before fulfilling the pre-payment. If the main payment does not arrive, the pre-payment would fail with a MPP timeout. Once both payment HTLCs have arrived, the receiver fulfills the prepayment HTLCs and broadcasts the on-chain transaction. It should be noted that the main payment can still fail if the sender never reveals the preimage. While this proposal does not prevent service providers from stealing the pre-payment, it aims to level the playing field among lightning service providers and enable non-custodian pay-to-open services. Implementing this change in BOLT-11 is suggested as opposed to using BOLT-12 or onion messages, as it can be achieved without the need for new message exchanges, making it less complicated.</summary>
    <published>2023-06-14T17:28:04+00:00</published>
  </entry>
</feed>
