<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-21T01:20:16.399555+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-13 08:10:29+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-21T01:20:16.399583+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003977.html" rel="alternate"/>
    <summary>ThomasV has proposed an extension to BOLT-11, where an invoice can contain two bundled payments, with distinct preimages and amounts. The use case is for services that require the prepayment of a mining fee in order for a non-custodian exchange to take place. This creates a situation where Boltz is vulnerable to DoS attacks, where the attacker forces them to pay on-chain fees. In order to solve this issue, ThomasV has proposed bundling prepayment and the main payment in the same BOLT-11 invoice. The proposal would level the field in terms of competition between lightning service providers. Currently, you need to use a dedicated client in order to use Loop, and competitors who do not have an established user base running a dedicated client are exposed to the mining fee attack. The semantics of bundled payments are explained as follows: the BOLT-11 invoice contains two preimages and two amounts: prepayment and main payment. The receiver should wait until all the HTLCs of both payments have arrived, before they fulfill the HTLCs of the pre-payment. If the main payment does not arrive, they should fail the pre-payment with a MPP timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment, and they broadcast their on-chain transaction. ThomasV believes that such a change should be implemented in BOLT-11, and not using BOLT-12 or onion messages. This is because his proposal does not require the exchange of new messages. Some of the initial feedback received was that this is a use case for BOLT-12 or OM, but he thinks that this is making things unnecessarily complicated.</summary>
    <published>2023-06-13T08:10:29+00:00</published>
  </entry>
</feed>
