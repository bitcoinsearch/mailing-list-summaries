<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-28T03:24:19.416931+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-13 08:10:29+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-28T03:24:19.416996+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003977.html" rel="alternate"/>
    <summary>Good morning everyone,I would like to propose an extension to BOLT-11 that allows for invoices with two bundled payments, each with distinct preimages and amounts. This proposal addresses the use case of services that require prepayment of a mining fee for non-custodian exchanges such as submarine swaps and JIT channels.Currently, service providers in these cases receive HTLCs for which they do not have the preimage. They must send funds on-chain and wait for the client to reveal the preimage when claiming the payment. To protect themselves against potential loss if the client doesn't claim the payment, service providers ask for prepayment of mining fees.However, some competitors, like Boltz exchange, cannot ask for prepayment because their software is wallet agnostic. This leaves them vulnerable to DoS attacks where attackers force them to pay on-chain fees. Similarly, providers offering JIT channels, like Phoenix, need to ask for the preimage of the main payment before opening the channel to protect against mining fee attacks. However, this makes them custodians, subject to legal regulations like the European MICA regulation.To solve these issues, it would be beneficial to bundle the prepayment and main payment in the same BOLT-11 invoice. The proposed semantics are as follows: the invoice contains two preimages and amounts, and the receiver waits for all HTLCs of both payments to arrive before fulfilling the HTLCs of the prepayment. If the main payment fails to arrive, the prepayment is failed with a MPP timeout. Once both payments arrive, the receiver fulfills the prepayment HTLCs and broadcasts the on-chain transaction. It should be noted that the main payment can still fail if the sender never reveals the preimage.While this proposal does not prevent service providers from stealing the prepayment, it levels the playing field for competition among lightning service providers. Currently, Loop requires a dedicated client, leaving competitors without an established user base vulnerable to mining fee attacks. Additionally, ACINQ could benefit from this change by making their pay-to-open service fully non-custodian. The current pay-to-open service used by Phoenix may fall under the European MICA regulation, posing a significant issue.I believe this change should be implemented in BOLT-11 rather than using BOLT-12 or onion messages. It does not require the exchange of new messages and can be done in a non-interactive way.Thank you,ThomasV</summary>
    <published>2023-06-13T08:10:29+00:00</published>
  </entry>
</feed>
