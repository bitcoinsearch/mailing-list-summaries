<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-03T03:04:08.152136+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-13 08:10:29+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-03T03:04:08.152161+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003977.html" rel="alternate"/>
    <summary>Proposal for Extending BOLT-11 to Include Bundled PaymentsThomasV proposes an extension to BOLT-11, the Lightning Network invoice format, to allow invoices with two bundled payments. This proposal is aimed at addressing the use case of services that require prepayment of a mining fee for non-custodian exchanges like submarine swaps and JIT channels.Currently, service providers in these cases receive a Hashed Time-Locked Contract (HTLC) for which they don't have the preimage. They must then send funds on-chain and wait for the client to reveal the preimage when claiming the payment. To mitigate the risk of clients not claiming the payment, service providers need to ask for prepayment of mining fees.However, some service providers, such as Boltz exchange, are unable to ask for prepayment due to their wallet's inability to handle it. This exposes them to potential Denial-of-Service (DoS) attacks where attackers force them to pay on-chain fees. Similarly, providers offering JIT channels, like Phoenix, become custodians if they ask for the preimage first, which could be problematic from a legal perspective.To address these issues, ThomasV suggests bundling the prepayment and main payment in the same BOLT-11 invoice. The proposed semantics of bundled payments are as follows:1. The BOLT-11 invoice contains two preimages and two amounts: prepayment and main payment.2. The receiver must wait until all HTLCs of both payments have arrived before fulfilling the HTLCs of the pre-payment. If the main payment doesn't arrive, the pre-payment should fail with a Multi-Path Payment (MPP) timeout.3. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction. The main payment can still fail if the sender never reveals the preimage.ThomasV acknowledges that this proposal doesn't prevent service providers from stealing the prepayment, but highlights that this is already a risk under the current system.The suggested extension aims to level the competition field among lightning service providers. Currently, Loop by Lightning Labs requires a dedicated client, making competitors without an established user base vulnerable to mining fee attacks. Additionally, ACINQ could benefit from this extension by enabling their pay-to-open service to be fully non-custodian. ThomasV notes that the current pay-to-open service used by Phoenix might fall under the scope of European MICA regulation, which they should consider a serious issue.Finally, ThomasV argues that this change should be implemented within BOLT-11 rather than introducing new message formats like BOLT-12 or onion messages. The proposal doesn't require additional message exchanges and can be accomplished in a non-interactive way.Overall, ThomasV's proposal seeks to enhance the functionality and security of BOLT-11 invoices, addressing specific use cases and promoting fair competition among lightning service providers.</summary>
    <published>2023-06-13T08:10:29+00:00</published>
  </entry>
</feed>
