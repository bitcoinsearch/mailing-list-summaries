<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-06T02:58:02.245211+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-13 08:10:29+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-06T02:58:02.245248+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003977.html" rel="alternate"/>
    <summary>Proposal for Extending BOLT-11 to Include Bundled PaymentsThomasV is proposing an extension to BOLT-11, the Lightning Network invoice format, that would allow invoices to contain two bundled payments with distinct preimages and amounts. This proposal is aimed at addressing use cases such as submarine swaps and JIT channels, where service providers require prepayment of a mining fee before non-custodial exchanges can take place.In the case of submarine swaps, service providers like Loop by Lightning Labs can ask for a prepayment since their dedicated client software can handle it. However, competitors like Boltz exchange, which do not require a dedicated wallet, face difficulties in requesting prepayment. This vulnerability exposes them to denial-of-service (DoS) attacks, where attackers force them to pay on-chain fees.For JIT channels, providers who want to protect themselves against mining fee attacks need to ask for the preimage of the main payment before opening the channel. However, this approach makes them custodians of the funds, which has legal implications under European MICA regulation. Competitors who refuse to offer custodian services are excluded from the game.To address these issues, ThomasV proposes bundling the prepayment and the main payment in the same BOLT-11 invoice. The semantics of bundled payments involve including two preimages and amounts in the invoice. The receiver should wait until all HTLCs (Hashed Time-Locked Contracts) of both payments have arrived before fulfilling the HTLCs of the pre-payment. If the main payment does not arrive, the pre-payment should be failed with a MPP (Multi-Path Payments) timeout. Once all HTLCs have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts the on-chain transaction. It's important to note that the main payment can still fail if the sender never reveals the preimage of the main payment.While this proposal does not prevent service providers from stealing the pre-payment, ThomasV argues that this is already a risk in the current system. The proposed change would level the playing field among lightning service providers, allowing competitors without dedicated clients to protect themselves against mining fee attacks. Additionally, ACINQ could benefit from this change by making their pay-to-open service fully non-custodial, thereby avoiding potential legal issues under European MICA regulation.ThomasV suggests implementing this change in BOLT-11 rather than using BOLT-12 or onion messages. He believes that the proposal can be achieved without the need for new message exchanges, making the process non-interactive and less complicated.In conclusion, ThomasV's proposal to extend BOLT-11 with bundled payments aims to address vulnerabilities in the current system and promote fair competition among lightning service providers. By including prepayment and main payment in the same invoice, service providers can protect themselves against mining fee attacks while maintaining non-custodial operations. Implementing this change in BOLT-11 offers a simpler and more efficient approach without introducing additional messaging protocols.</summary>
    <published>2023-06-13T08:10:29+00:00</published>
  </entry>
</feed>
