<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-27T04:01:13.373340+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-13 08:10:29+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-27T04:01:13.373367+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003977.html" rel="alternate"/>
    <summary>ThomasV proposes an extension to BOLT-11, which would allow invoices to contain two bundled payments with distinct preimages and amounts. This extension is targeted towards services that require prepayment of mining fees for non-custodial exchanges such as submarine swaps and JIT channels. Currently, Boltz exchange is vulnerable to DoS attacks because it cannot ask for prepayment simultaneously. In contrast, Phoenix asks for the preimage first to protect themselves against the mining fee attack but becomes a custodian as a result. ThomasV's proposal would bundle the prepayment and main payment in the same BOLT-11 invoice, solving this issue. The semantics of bundled payments are such that the receiver should wait until both HTLCs have arrived before fulfilling the HTLCs of the pre-payment. If the main payment does not arrive, they should fail the pre-payment with an MPP timeout. Once both payments have arrived, the receiver fulfills the HTLCs of the prepayment, and they broadcast their on-chain transaction. ThomasV believes that this proposal would level the field in terms of competition between lightning service providers and make it possible for ACINQ to make its pay-to-open service fully non-custodial. He also believes that such a change should be implemented in BOLT-11 and not through BOLT-12 or onion messages, as it does not require the exchange of new messages and can be done in a non-interactive way.</summary>
    <published>2023-06-13T08:10:29+00:00</published>
  </entry>
</feed>
