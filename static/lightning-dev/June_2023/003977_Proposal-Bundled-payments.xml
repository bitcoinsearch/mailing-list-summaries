<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-01T03:14:42.133940+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-13 08:10:29+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-01T03:14:42.133970+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003977.html" rel="alternate"/>
    <summary>Proposal for an Extension to BOLT-11: Bundled PaymentsThomasV suggests an extension to BOLT-11, where invoices can include two bundled payments with distinct preimages and amounts. The purpose of this proposal is to address the use case of services that require prepayment of a mining fee for non-custodian exchanges, such as submarine swaps and JIT channels.Currently, service providers in these cases receive HTLCs for which they don't have the preimage. They must send funds on-chain and wait for the client to reveal the preimage when claiming the payment. To mitigate the risk of clients not claiming payments, service providers often ask for prepayment of mining fees.However, some service providers, like Boltz exchange, face challenges because they cannot ask for prepayment due to their agnostic wallet system. This vulnerability exposes them to DoS attacks where attackers force them to pay on-chain fees.JIT channel providers also need to protect themselves against mining fee attacks. One approach is asking for the preimage of the main payment before opening the channel. However, this makes the service custodial, potentially falling under European MICA regulation. Competitors that refuse to offer custodian services are excluded from the game.To address these issues, ThomasV proposes bundling the prepayment and main payment in the same BOLT-11 invoice. The semantics of bundled payments would involve the receiver waiting for all HTLCs of both payments to arrive before fulfilling the pre-payment HTLCs. If the main payment doesn't arrive, the pre-payment should fail with a MPP timeout. Once both payments' HTLCs have arrived, the receiver fulfills the prepayment HTLCs and broadcasts the on-chain transaction. It's important to note that the main payment can still fail if the sender never reveals the preimage.While the proposal doesn't prevent service providers from stealing the prepayment, this risk already exists in the current system.ThomasV believes this proposal would level the playing field for lightning service providers. Currently, Loop requires a dedicated client, putting competitors without an established user base running such a client at risk of mining fee attacks. Additionally, ACINQ could benefit from this change by making their pay-to-open service fully non-custodian, potentially avoiding European MICA regulation implications.The suggested change should be implemented in BOLT-11 rather than using BOLT-12 or onion messages to keep things non-interactive and avoid unnecessary complexity. ThomasV acknowledges initial feedback suggesting BOLT-12 or OM for this use case but argues against adding new messages when a non-interactive approach is feasible.Overall, ThomasV's proposal aims to enhance competition among lightning service providers and address vulnerabilities related to prepayment and mining fee attacks.</summary>
    <published>2023-06-13T08:10:29+00:00</published>
  </entry>
</feed>
