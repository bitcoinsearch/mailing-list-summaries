<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-04T02:57:18.510383+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-13 08:10:29+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-04T02:57:18.510407+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003977.html" rel="alternate"/>
    <summary>In a proposal addressing the extension of BOLT-11, ThomasV suggests the inclusion of two bundled payments with distinct preimages and amounts in an invoice. The purpose of this extension is to facilitate services that require prepayment of a mining fee for non-custodian exchanges such as submarine swaps and JIT (Just-In-Time) channels. Currently, service providers face the challenge of requesting prepayments due to the inability of certain wallet software to handle multiple invoices simultaneously. This vulnerability exposes them to potential denial-of-service (DoS) attacks forcing them to pay on-chain fees.To address this issue, ThomasV proposes bundling the prepayment and main payment in the same BOLT-11 invoice. The semantics of bundled payments would involve the invoice containing two preimages and two amounts: one for the prepayment and one for the main payment. The receiver would wait for the arrival of all HTLCs (Hash Time-Locked Contracts) from both payments before fulfilling the HTLCs of the prepayment. If the main payment fails to arrive, the prepayment would be failed with a MPP (Multi-Path Payments) timeout. Once all HTLCs have arrived, the receiver would fulfill the HTLCs of the prepayment and broadcast their on-chain transaction. It should be noted that the main payment can still fail if the sender does not reveal the preimage.Although there is a risk of the service provider stealing the prepayment, ThomasV argues that this is already a possibility in the current system. The proposed extension aims to level the playing field among lightning service providers by eliminating the need for a dedicated client like Loop, thus reducing exposure to the mining fee attack. Additionally, ACINQ could benefit from this extension by enabling their pay-to-open service to become fully non-custodian, potentially avoiding compliance issues with European MICA regulation.ThomasV emphasizes that this change should be implemented in BOLT-11 rather than using BOLT-12 or onion messages. The proposed extension does not require the exchange of new messages and can be achieved in a non-interactive manner. By avoiding unnecessary complexity, the goal is to enhance competition between lightning service providers and provide a more inclusive solution.Overall, ThomasV's proposal suggests an extension to BOLT-11 that allows for two bundled payments in a single invoice, addressing the challenges faced by service providers in requesting prepayments for mining fees. This extension aims to level the competition field, potentially benefitting both lightning service providers and users while ensuring compliance with relevant regulations.</summary>
    <published>2023-06-13T08:10:29+00:00</published>
  </entry>
</feed>
