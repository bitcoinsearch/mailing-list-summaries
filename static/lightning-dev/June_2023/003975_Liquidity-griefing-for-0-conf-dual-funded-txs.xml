<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Liquidity griefing for 0-conf dual-funded txs</title>
  <updated>2023-07-02T03:04:52.119327+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-06-07 09:46:36+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Liquidity griefing for 0-conf dual-funded txs</title>
    <updated>2023-07-02T03:04:52.119355+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003975.html" rel="alternate"/>
    <summary>In a discussion about the challenges of liquidity griefing attacks in lightning network's dual funded transactions, Bastien Teinturier proposes a solution to protect against such attacks. He suggests never locking utxos used in dual funded transactions, which allows them to be automatically reused if a remote node goes silent during the process. However, this solution is not applicable when using 0-conf (zero-confirmation) channels because accidental double-spending can lead to loss of funds. To address this, a "soft lock" strategy is proposed, where utxos selected for non 0-conf funding attempts are soft locked and ignored for 0-conf funding attempts.Antoine Riard raises concerns about the effectiveness of the soft lock strategy in preventing liquidity griefing attacks, particularly in the context of dual-funding or splicing. He explains that pinning the transaction in the mempool can be done in a sneaky way, using abuse of replacement rules. This allows a malicious counterparty to batch pinning against unrelated dual-funding transactions, causing a denial-of-service scenario. Antoine suggests exploring solutions already developed to mitigate channel jamming, such as the Staking Credentials framework, which could be deployed by dual-funding market-makers. By paying a fee scaled up based on the amount of UTXOs contributed, anonymity can be maintained, and liquidity griefing can be prevented.Bastien acknowledges the concerns raised by Antoine and agrees that disabling inbound payments or using a longer `cltv_expiry_delta` may still be valuable in case of mempool fee spikes delaying the confirmation of 0-conf channels. He also mentions the persistence of liquidity griefing caused by lack of signature release or mempool manipulation even with package relay/nVersion deployment.In conclusion, the discussion highlights the challenges and possible solutions to prevent liquidity griefing attacks in lightning network's dual funded transactions. The use of soft locks for non 0-conf funding attempts and exploring solutions like the Staking Credentials framework are suggested to mitigate these attacks. The limitations and risks associated with 0-conf channels are also discussed, emphasizing the need for caution and additional safeguards.</summary>
    <published>2023-06-07T09:46:36+00:00</published>
  </entry>
</feed>
