<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Liquidity griefing for 0-conf dual-funded txs</title>
  <updated>2023-07-06T02:55:16.956786+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-06-07 09:46:36+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Liquidity griefing for 0-conf dual-funded txs</title>
    <updated>2023-07-06T02:55:16.956824+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003975.html" rel="alternate"/>
    <summary>In a conversation between Antoine and Bastien, they discuss the issue of liquidity griefing in lightning network transactions. They acknowledge that the usual mempool pinning issues still apply regardless of whether 0-conf (zero-confirmation) is used or not, and that these issues need to be solved at some point. Bastien suggests a mid-term solution of using v3 transactions for channel funding and splicing, with the caveat that it makes them identifiable on-chain. He also mentions the possibility of everyone eventually moving to v3 transactions for everything. In the longer term, they recognize the need for an anti-DoS token exchange to avoid this class of issue, but admit that designing and analyzing such a solution is challenging.Antoine brings up the idea of implementing a "soft lock" strategy when selecting utxos for non 0-conf funding attempts. This would allow soft locked utxos to be reused in non 0-conf funding attempts, while ignoring them in 0-conf funding attempts. However, he raises concerns about liquidity griefing through dual-funding or splicing, where a transaction can be pinned in the mempool by a malicious counterparty.Antoine suggests that one possible mitigation is to enforce that any contributed outputs must be encumbered by a 1 CSV (Check Sequence Verify) unless it's a 2-of-2 funding. However, he notes that this mitigation may be limited as the initial commitment transaction must have anchor outputs on each side for each party to recover their contributed UTXOs.Regarding 0-conf channels, Antoine mentions that it can still be valuable to disable inbound payments or require a longer `cltv_expiry_delta` than usual in case of mempool fee spikes delaying the chain confirmation. He concludes that liquidity griefing related to mempool vectors will always be present, even with package relay/nVersion deployment.As a more long-term solution, Antoine suggests exploring solutions that have been worked out to mitigate channel jamming, as the abstract problem is the same â€“ counterparty locking up scarce resources without paying fees. He mentions the Staking Credentials framework as a possible solution for dual-funding market-makers beyond routing hops.In summary, Antoine and Bastien discuss the challenges and potential solutions for liquidity griefing in lightning network transactions. They consider using v3 transactions and implementing a "soft lock" strategy for utxos. They also explore the idea of leveraging existing solutions to mitigate channel jamming and propose the Staking Credentials framework as a possible long-term solution.</summary>
    <published>2023-06-07T09:46:36+00:00</published>
  </entry>
</feed>
