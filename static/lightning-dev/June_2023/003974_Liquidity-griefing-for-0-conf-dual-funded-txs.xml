<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Liquidity griefing for 0-conf dual-funded txs</title>
  <updated>2023-07-02T03:04:34.930903+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-07 00:41:12+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Liquidity griefing for 0-conf dual-funded txs</title>
    <updated>2023-07-02T03:04:34.930937+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003974.html" rel="alternate"/>
    <summary>The email conversation revolves around the topic of liquidity griefing attacks in lightning network dual-funded transactions. The issue arises when one peer locks their utxos in a shared transaction and the other peer goes silent, resulting in locked and unusable liquidity for the honest peer. The proposed solution is to never lock utxos used in dual-funded transactions, allowing them to be automatically reused if a remote node goes silent. However, this solution falls short when using 0-conf (zero-confirmation) channels as accidental double-spending can lead to loss of funds. To address this, a "soft lock" strategy is suggested, where utxos are selected for non 0-conf funding attempts with a soft lock, while 0-conf funding attempts ignore soft locked utxos. The post also mentions an "opportunistic" approach to 0-conf in Eclair, where if certain conditions are met, the channel is immediately used without the need for both sides to trust each other. However, mixing 0-conf and non 0-conf funding attempts complicates this approach due to potential soft locks on utxos.The author seeks ideas to improve protections against liquidity griefing for nodes offering 0-conf services. One suggestion is to deploy the Staking Credentials framework by dual-funding market-makers to mitigate liquidity griefing. This framework would involve payment of fees based on the amount of UTXOs contributed and the worst-case liquidity griefing scenario. A privacy-preserving credential could be used to unlink dual-funding initiators.Overall, the discussion highlights the challenges and potential solutions related to liquidity griefing attacks in dual-funded transactions, particularly in the context of 0-conf channels. The aim is to find ways to protect against such attacks and improve the user experience for nodes offering 0-conf services.</summary>
    <published>2023-06-07T00:41:12+00:00</published>
  </entry>
</feed>
