<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Liquidity griefing for 0-conf dual-funded txs</title>
  <updated>2023-06-28T03:11:53.126051+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-07 00:41:12+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Liquidity griefing for 0-conf dual-funded txs</title>
    <updated>2023-06-28T03:11:53.126078+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003974.html" rel="alternate"/>
    <summary>The email exchange between Antoine and Bastien discusses the issue of liquidity griefing in lightning network dual-funded transactions. Liquidity griefing occurs when a malicious peer locks up the liquidity of an honest node, making it unusable. The current approach of locking UTXOs as soon as they are added to the shared transaction does not effectively prevent this type of attack.Bastien proposes a solution where UTXOs used in dual-funded transactions are never locked. If a remote node goes silent, the UTXOs will be automatically reused in another instance of the protocol. However, this solution is not suitable for 0-conf channels because accidental double-spending can occur. To address this, a "soft lock" mechanism can be implemented, where UTXOs selected for non 0-conf funding attempts are soft locked and ignored for 0-conf funding attempts.In terms of preventing liquidity griefing related to mempool vectors, Antoine suggests that the honest counterparty can enforce that any contributed outputs must be encumbered by a 1 CSV (Check Sequence Verify) unless it is a 2-of-2 funding. However, this mitigation may have limitations as the initial commitment transaction must have anchor outputs on each side for each party to recover their contributed UTXOs.Antoine also mentions that from the perspective of the 0-conf initiator, it may be valuable to disable inbound payments or require a longer `cltv_expiry_delta` due to mempool fee spikes that delay 0-conf chain confirmation.As a long-term solution, solutions used to mitigate channel jamming could be repurposed to address liquidity griefing. The Staking Credentials framework is suggested as a possible solution, where dual-funding market-makers beyond routing hops deploy it. The dual-funding initiator would pay a fee scale based on the amount of UTXOs contributed and potential worst-case liquidity griefing scenarios. A privacy-preserving credential can be introduced to unlink dual-funding initiators.Overall, the email exchange seeks ideas on how to improve the situation and offer better protections against liquidity griefing for nodes offering 0-conf services. The goal is to find a solution that balances the convenience of 0-conf with the need for security against malicious actors.</summary>
    <published>2023-06-07T00:41:12+00:00</published>
  </entry>
</feed>
