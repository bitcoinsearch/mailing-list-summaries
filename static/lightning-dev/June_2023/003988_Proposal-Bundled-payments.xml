<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-07T02:50:22.054635+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-20 08:45:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-07T02:50:22.054664+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003988.html" rel="alternate"/>
    <summary>In an email exchange, Thomas Voegtlin proposes an extension to BOLT-11, the Lightning Network protocol. This extension would allow invoices to contain two bundled payments with distinct preimages and amounts. The purpose of this proposal is to address the need for services like submarine swaps and JIT channels to require prepayment of mining fees.Currently, services like Loop by Lightning Labs are able to ask for prepayment because their software can handle it. However, competitors who do not have a dedicated wallet cannot. This creates a vulnerability to denial-of-service (DoS) attacks. Additionally, providers who want to protect themselves against mining fee attacks in JIT channels need to ask for the preimage of the main payment before opening the channel. This makes them custodians and subject to regulation.To solve these issues, Voegtlin suggests bundling the prepayment and main payment in the same BOLT-11 invoice. The receiver would wait for all HTLCs (Hash Time-Locked Contracts) of both payments to arrive before fulfilling the prepayment. Once both payments have arrived, the receiver fulfills the prepayment HTLCs and broadcasts an on-chain transaction.Voegtlin believes that implementing this proposal would level the competition field among lightning service providers and benefit ACINQ by making their pay-to-open service fully non-custodian. He argues that this change should be implemented in BOLT-11 rather than using BOLT-12 or onion messages to keep things simple and non-interactive.</summary>
    <published>2023-06-20T08:45:34+00:00</published>
  </entry>
</feed>
