<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-04T02:58:23.760328+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-20 08:45:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-04T02:58:23.760351+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003988.html" rel="alternate"/>
    <summary>In a recent email exchange, Thomas Voegtlin proposed an extension to BOLT-11, the Lightning Network protocol. The proposal suggests allowing invoices to contain two bundled payments with distinct preimages and amounts. This would address the use cases of services that require a prepayment of a mining fee for non-custodian exchanges such as submarine swaps and JIT channels.Currently, some services like Loop by Lightning Labs can ask for a prepayment because their software can handle it. However, competitors who do not require a dedicated wallet, like the Boltz exchange, cannot do the same. This creates a vulnerability where competitors can be subjected to denial-of-service (DoS) attacks by forcing them to pay on-chain fees.In the case of JIT channels, service providers need to ask for the preimage of the main payment before opening the channel to protect themselves against mining fee attacks. However, this makes their service custodian, falling within the European MICA regulation. Competitors who refuse to offer custodian services, like Electrum, are excluded from this game.To solve these issues, Thomas proposes bundling the prepayment and the main payment in the same BOLT-11 invoice. The semantics of bundled payments would require the receiver to wait until all the HTLCs of both payments have arrived before fulfilling the HTLCs of the prepayment. If the main payment does not arrive, the prepayment should be failed with a MPP timeout. Once both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts the on-chain transaction.Thomas believes that this proposal would level the playing field for competition between Lightning service providers. Currently, using Loop requires a dedicated client, and competitors without an established user base running a dedicated client are vulnerable to mining fee attacks. Additionally, ACINQ could benefit from this change as it would allow them to make their pay-to-open service fully non-custodian, addressing regulatory concerns.Thomas suggests that this change should be implemented in BOLT-11 rather than using BOLT-12 or onion messages. He argues that the proposal does not require the exchange of new messages and can be done in a non-interactive way without adding unnecessary complexity.Overall, Thomas's proposal aims to enhance the Lightning Network protocol by allowing invoice bundling of prepayment and main payment, providing more flexibility and security for various use cases.The provided context is an email signature from Electrum Technologies GmbH, a company based in Berlin, Germany. The email includes the company's address (Paul-Lincke-Ufer 8d, 10999 Berlin, Germany), registration details (Sitz, Registergericht: Berlin, Amtsgericht Charlottenburg, HRB 164636), and the name of the Geschäftsführer (Managing Director) Thomas Voegtlin.In addition to the company information, the email also includes a link to the Lightning-dev mailing list hosted by lists.linuxfoundation.org. The link (https://lists.linuxfoundation.org/mailman/listinfo/lightning-dev) directs users to the mailing list's subscription page. The Lightning-dev mailing list is likely related to discussions and development around Lightning Network, a protocol layer built on top of Bitcoin that enables faster and cheaper transactions.</summary>
    <published>2023-06-20T08:45:34+00:00</published>
  </entry>
</feed>
