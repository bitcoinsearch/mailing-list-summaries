<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-28T03:21:32.056747+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-20 08:45:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-28T03:21:32.056812+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003988.html" rel="alternate"/>
    <summary>In an email exchange, Thomas Voegtlin proposed an extension to BOLT-11, the Lightning Network payment protocol. He suggested that invoices should be able to contain two bundled payments with distinct preimages and amounts. This proposal is aimed at services that require a prepayment of a mining fee for non-custodian exchanges such as submarine swaps and JIT (Just-in-Time) channels.Thomas explained that currently, some service providers can ask for prepayment because their dedicated client software can handle it. However, competitors who do not require a dedicated wallet, like the Boltz exchange, cannot ask for prepayment in a practical manner. This vulnerability exposes them to potential denial-of-service attacks where attackers force them to pay on-chain fees.Another issue arises with JIT channels, where providers need to ask for the preimage of the main payment before opening the channel to protect against mining fee attacks. However, asking for the preimage first makes the service custodian, which raises legal concerns. This situation excludes competitors who refuse to offer custodian services.To address these issues, Thomas proposes bundling the prepayment and main payment in the same BOLT-11 invoice. The semantics of bundled payments involve including two preimages and two amounts in the invoice. The receiver should wait until all HTLCs (Hashed Time-Locked Contracts) of both payments have arrived before fulfilling the HTLCs of the prepayment. If the main payment does not arrive, the prepayment should be failed with a MPP (Multi-Path Payments) timeout. Once all HTLCs have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction.Thomas acknowledges that this proposal does not prevent service providers from stealing the prepayment but notes that this risk already exists today. He believes that implementing this change in BOLT-11 would level the field of competition among Lightning service providers. Currently, using Loop, a dedicated client, is necessary to use certain services, leaving competitors without an established user base vulnerable to mining fee attacks. Thomas also suggests that ACINQ, a Lightning payment solutions provider, would benefit from this change as it would enable them to make their pay-to-open service fully non-custodian and compliant with European MICA regulation.In response to Thomas's proposal, Bastien Teinturier points out that the proposal requires senders to be aware that the payment will lead to a channel creation or splice on the receiver's end. He suggests extending BOLT-12 instead of updating BOLT-11 since it would require new sender code anyway. Bastien discusses three strategies for providing JIT liquidity, namely asking the receiver for the preimage and a fee, opening a channel and forwarding the HTLC amount minus a fee, or pre-paying the fee and forwarding the whole HTLC amount on that channel. Currently, strategies 1 and 2 are deployed on the network, while Thomas proposes strategy 3. Bastien highlights that strategies 1 and 2 do not require senders to be aware of JIT liquidity, which was the main reason for choosing them.Regarding trust and regulation, Bastien suggests that solution 2 works fine as long as the mempool isn't empty. If the user does not release the preimage after the channel is opened, the channel can be blacklisted, payments to it can be rejected, and it can be double-spent whenever there is another on-chain transaction. However, Bastien acknowledges that this only works when coupled with zero-conf (0-conf). He also suggests that since zero-conf is likely to be used until BOLT-12 is deployed, it would be more reasonable to include the proposed feature in BOLT-12, as all implementations are actively working on it.Thomas agrees that it is not too late to add a new feature to BOLT-11 and emphasizes that his proposal is a minimal change. He suggests defining a new invoice feature that describes the prepayment of a fee using a different preimage. This feature would be optional during a transition period and could be included by implementing a new feature bit, two extra fields for prepayment amount and prepayment hash, and specific rules for sender support of the feature. The decision to make this feature required or optional would remain with the service provider.Thomas believes that two major implementations, Lightning Labs and ACINQ, have an incentive to support his proposal. He suggests that Lightning Labs could offer their Loop service to non-LND (Lightning Network Daemon) users, while ACINQ could open channels to Phoenix users without requiring the preimage first, making them compliant with upcoming MICA regulation. Thomas also encourages other implementations, such as LDK, to consider supporting the proposed feature.In conclusion, Thomas believes that bundling prepayment and main payment in BOLT-11 invoices would level the field of competition among Lightning service providers and address vulnerabilities related to mining fee attacks and custodian services. He suggests implementing this change in BOLT-11 rather</summary>
    <published>2023-06-20T08:45:34+00:00</published>
  </entry>
</feed>
