<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-22T01:29:31.659888+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-20 07:32:15+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-22T01:29:31.659911+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003987.html" rel="alternate"/>
    <summary>Dave has asked Thomas if it is acceptable for the prepayment to use a keysend payment with the onion message payload for the receiver indicating what payment hash to associate with the prepayment. Dave thinks that only an extra_fee_via_keysend field would be required in BOLT11 invoices if this is allowed. The semantics of bundled payments are that the BOLT-11 invoice contains two preimages and two amounts: prepayment and main payment. The receiver should wait until all the HTLCs of both payments have arrived before they fulfill the HTLCs of the pre-payment. If the main payment does not arrive, they should fail the pre-payment with an MPP timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment, and they broadcast their on-chain transaction. Thomas thinks that the invoice needs a feature bit so that the receiver can decide to make prepayment optional or required. If the feature is optional, the prepayment amount must be subtracted from the main payment amount. In the example given by Dave, Alice would expect to receive either (1 BTC, invoice payment_hash) or (1 BTC - minus 10k sats, invoice payment_hash) + (10k sats, prepayment_hash via keysend).</summary>
    <published>2023-06-20T07:32:15+00:00</published>
  </entry>
</feed>
