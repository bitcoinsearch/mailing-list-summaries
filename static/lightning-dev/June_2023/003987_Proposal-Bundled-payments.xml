<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-05T02:52:32.401757+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-20 07:32:15+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-05T02:52:32.401786+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003987.html" rel="alternate"/>
    <summary>In an email exchange between Thomas Voegtlin and David A. Harding, they discuss the semantics of bundled payments in the context of BOLT11 invoices. Voegtlin suggests that the invoice should have a feature bit to allow the receiver to decide if prepayment is optional or required. Harding then proposes an alternative approach where the prepayment uses a keysend payment with the onion message payload indicating the payment hash associated with the prepayment. This would eliminate the need for an additional payment hash in the BOLT11 invoice and could be implemented by extending the invoice with an extra_fee_via_keysend field. Voegtlin acknowledges that this approach would be smaller and more flexible, allowing the extra_fee_via_keysend field to be encoded in existing BOLT11 fields like the description or metadata field. He suggests that this could be implemented immediately until an updated version of BOLT11 or an alternative using offers becomes widely deployed.Overall, the email exchange revolves around finding a solution to incorporate prepayment functionality in BOLT11 invoices, with both Voegtlin and Harding offering different perspectives on how to achieve this.</summary>
    <published>2023-06-20T07:32:15+00:00</published>
  </entry>
</feed>
