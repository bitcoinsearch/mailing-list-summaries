<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-09T02:57:35.265412+00:00</updated>
  <author>
    <name>Thomas Voegtlin 2023-06-20 07:32:15+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-09T02:57:35.265483+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003987.html" rel="alternate"/>
    <summary>In a discussion between Thomas and David, they discuss the idea of saving space for the prepayment hash. They agree that the invoice would still need a feature bit to allow the receiver to decide whether prepayment is optional or required. In order for the feature to be optional, the prepayment amount needs to be subtracted from the main payment amount. Thomas provides an example where Alice would expect to receive either 1 BTC with the invoice payment hash or 1 BTC minus 10k sats with the invoice payment hash, along with 10k sats via keysend with the prepayment hash. David asks if it would be acceptable for the prepayment to use a keysend payment with the onion message payload indicating what payment hash to associate with the prepayment. He suggests extending BOLT11 invoices with an extra_fee_via_keysend field, which would be smaller and could be encoded in an existing BOLT11 field like description or metadata. Overall, the discussion revolves around the implementation of bundled payments and the potential modifications needed for BOLT11 invoices to accommodate prepayments.</summary>
    <published>2023-06-20T07:32:15+00:00</published>
  </entry>
</feed>
