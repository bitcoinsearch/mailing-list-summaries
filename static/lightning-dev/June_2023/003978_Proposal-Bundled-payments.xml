<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-22T01:29:06.126050+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2023-06-14 02:56:54+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-22T01:29:06.126074+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003978.html" rel="alternate"/>
    <summary>The proposal by Thomas Voegtlin suggests an extension to BOLT-11, where an invoice can contain two bundled payments, with distinct preimages and amounts. The use case is for services that require the prepayment of a mining fee in order for a non-custodian exchange to take place. In both cases, the service provider receives a HTLC for which they do not have the preimage, have to send funds on-chain (to the channel or submarine swap funding address), and wait for the client to reveal the preimage when they claim the payment. Competitors who do require a dedicated wallet, not such as the Boltz exchange, cannot ask for a prepayment. Their website shows an invoice to the user, whose wallet that is agnostic about the swap, and it would be unpractical for them to show two invoices to be paid simultaneously. This creates a situation where Boltz is vulnerable to DoS attacks, where the attacker forces them to pay on-chain fees.In order to solve that, it would be beneficial to bundle the prepayment and the main payment in the same BOLT-11 invoice. The semantics of bundled payments is that the BOLT-11 invoice contains two preimages and two amounts: prepayment and main payment. The receiver should wait until all the HTLCs of both payments have arrived, before they fulfill the HTLCs of the pre-payment. If the main payment does not arrive, they should fail the pre-payment with a MPP timeout. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment, and they broadcast their on-chain transaction. The proposal would level the field in terms of competition between lightning service providers. Currently, you need to use a dedicated client in order to use Loop, and competitors who do not have an established user base running a dedicated client are exposed to the mining fee attack. The proposal does not prevent the service provider from stealing the pre-payment, but that is already the case today. Finally, such a change should be implemented in BOLT-11, and not using BOLT-12 or onion messages. Some of the initial feedback received was that this is a use case for BOLT-12 or OM, but it is making things unnecessarily complicated. They should not add new messages when things can be done in a non-interactive way.</summary>
    <published>2023-06-14T02:56:54+00:00</published>
  </entry>
</feed>
