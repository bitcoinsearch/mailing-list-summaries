<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-06T03:00:11.898788+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2023-06-14 02:56:54+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-06T03:00:11.898817+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003978.html" rel="alternate"/>
    <summary>In a proposal by Thomas Voegtlin, an extension to BOLT-11 is suggested to address the need for bundled payments in invoices. The use case for this extension is for services that require prepayment of a mining fee for non-custodian exchanges such as submarine swaps and JIT channels. In both cases, service providers receive a HTLC (Hash Time-Locked Contract) without the preimage and have to send funds on-chain while waiting for the client to reveal the preimage. To protect against potential losses, service providers ask for prepayment of mining fees.For services like Loop by Lightning Labs, which use dedicated client software, asking for a prepayment is possible because their software can handle it. However, competitors who rely on a dedicated wallet, like the Boltz exchange, cannot do the same. These competitors show an invoice to the user, whose wallet is agnostic about the swap, and it would be impractical for them to display two invoices simultaneously. This vulnerability exposes them to denial-of-service (DoS) attacks where attackers force them to pay on-chain fees.In the case of JIT channels, providers who want to protect themselves from mining fee attacks ask for the preimage of the main payment before opening the channel. However, by doing so, they become custodians, which has legal implications under European MICA regulation. Competitors who refuse to offer custodian services, such as Electrum, are excluded from this game.To address these challenges, Voegtlin proposes bundling the prepayment and main payment in the same BOLT-11 invoice. The proposal suggests the following semantics for bundled payments: 1. The BOLT-11 invoice contains two preimages and two amounts: prepayment and main payment.2. The receiver should wait until all the HTLCs of both payments have arrived before fulfilling the HTLCs of the prepayment. If the main payment does not arrive, they should fail the prepayment with a MPP (Multi-Path Payment) timeout.3. Once the HTLCs of both payments have arrived, the receiver fulfills the HTLCs of the prepayment and broadcasts their on-chain transaction. However, the main payment can still fail if the sender never reveals the preimage.Voegtlin acknowledges that this proposal does not prevent service providers from stealing the prepayment, but it aims to level the competition field between lightning service providers. Currently, using Loop requires a dedicated client, and competitors without an established user base running such a client are exposed to mining fee attacks. ACINQ could also benefit from this proposal as it would allow them to make their pay-to-open service fully non-custodian and comply with European MICA regulation.The suggested change is to implement this extension in BOLT-11 rather than introducing new messages through BOLT-12 or onion messages. Voegtlin argues that the proposed solution can be achieved in a non-interactive way without adding unnecessary complexity.Overall, the proposal aims to address the challenges faced by service providers in non-custodian exchanges by allowing bundled payments in BOLT-11 invoices, providing a more secure and competitive environment for lightning service providers.</summary>
    <published>2023-06-14T02:56:54+00:00</published>
  </entry>
</feed>
