<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-07-09T02:57:22.761702+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2023-06-14 02:56:54+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-07-09T02:57:22.761734+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003978.html" rel="alternate"/>
    <summary>The proposal being discussed in this email thread is an extension to BOLT-11, which involves bundling two payments with distinct preimages and amounts in a single invoice. The motivation behind this proposal is to address the need for prepayment of mining fees in certain lightning network services, such as submarine swaps and JIT channels. In these cases, the service provider receives an HTLC for which they do not have the preimage and must send funds on-chain while waiting for the client to reveal the preimage.Currently, services like Loop by Lightning Labs can ask for a prepayment because their software can handle it. However, competitors who do not require a dedicated wallet, such as the Boltz exchange, are unable to do so. This creates a vulnerability where competitors like Boltz can be targeted with denial-of-service attacks, forcing them to pay on-chain fees.JIT channels also face similar challenges, as providers may need to ask for the preimage of the main payment before opening the channel to protect themselves against mining fee attacks. However, asking for the preimage first would make the service custodian, which has legal implications under regulations such as European MICA.To solve these issues, the proposal suggests bundling the prepayment and the main payment in the same BOLT-11 invoice. The semantics of bundled payments would involve the receiver waiting for all the HTLCs of both payments to arrive before fulfilling the HTLCs of the pre-payment. If the main payment does not arrive, the pre-payment should fail with a MPP timeout. Once all the HTLCs have arrived, the receiver can fulfill the HTLCs of the prepayment and broadcast their on-chain transaction.It should be noted that this proposal does not prevent service providers from stealing the pre-payment, but this risk already exists today. Implementing this change in BOLT-11 would level the playing field for competition between lightning service providers, allowing those without a dedicated client to offer non-custodian services and protect against mining fee attacks.The proposal suggests implementing this change in BOLT-11 rather than introducing new messages or protocols like BOLT-12 or onion messages. This is because the proposed solution does not require the exchange of new messages and can be achieved in a non-interactive way.Overall, the extension to BOLT-11 aims to address the challenges faced by lightning network services that require prepayment of mining fees, providing a more equitable competitive landscape and improving the non-custodial nature of these services.</summary>
    <published>2023-06-14T02:56:54+00:00</published>
  </entry>
</feed>
