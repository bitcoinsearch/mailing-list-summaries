<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposal: Bundled payments</title>
  <updated>2023-06-27T04:22:36.361256+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2023-06-14 02:56:54+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposal: Bundled payments</title>
    <updated>2023-06-27T04:22:36.361282+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003978.html" rel="alternate"/>
    <summary>A proposal has been made to extend BOLT-11, where an invoice can contain two bundled payments with distinct preimages and amounts. This would be beneficial for non-custodial services that require the prepayment of a mining fee in order for a non-custodian exchange to take place such as submarine swaps and JIT channels. Currently, some providers ask for prepayment because their software can handle it, however, competitors who do not require a dedicated wallet cannot do that. Their website shows an invoice to the user, whose wallet is agnostic about the swap and it would be unpractical for them to show two invoices to be paid simultaneously. This creates a situation where they are vulnerable to DoS attacks, where the attacker forces them to pay on-chain fees. In the case of JIT channels, providers who want to protect themselves against this mining fee attack need to ask the preimage of the main payment before they open the channel, which makes their service custodian. The proposal suggests bundling the prepayment and the main payment in the same BOLT-11 invoice, which would level the field in terms of competition between lightning service providers and make it possible for ACINQ to make their pay-to-open service fully non-custodian. The proposal also aims to implement the change in BOLT-11, rather than using BOLT-12 or onion messages.</summary>
    <published>2023-06-14T02:56:54+00:00</published>
  </entry>
</feed>
