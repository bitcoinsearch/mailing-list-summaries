<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>VLS Beta 1 released</title>
  <updated>2023-07-13T03:05:34.271734+00:00</updated>
  <author>
    <name>devrandom 2023-06-28 16:19:19+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>VLS Beta 1 released</title>
    <updated>2023-07-13T03:05:34.271765+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003998.html" rel="alternate"/>
    <summary>The Validating Lightning Signer (VLS) team is excited to announce the Beta release of their product, which is designed to enhance security against accidental fund loss and malicious nodes. This release, known as MVP2, includes several features that aim to protect users' funds. Developers are encouraged to join the VLS Matrix room, submit feature requests, or test the VLS with sample CLN or LDK nodes.While the VLS beta version provides security against common ways through which a malicious node can steal user funds, it does not cover all possible scenarios where users might lose funds. Therefore, it is recommended to run VLS in testnet or with limited funds until the production release milestone is reached and users are confident that it adequately safeguards against all relevant scenarios.Developers will find several highlights in this release, including compatibility with CLN and LDK, encrypted cloud state backup, disaster recovery from signer and node failure, a complete set of layer-2 validation rules, optional validation rules such as velocity and approval, a comprehensive set of layer-1 validation rules for on-chain channel state tracking, heartbeat generation, allowlist for approved destinations, and UTXO set oracle for safe on-chain state. A full changelog is available [here](https://gitlab.com/lightning-signer/validating-lightning-signer/-/blob/main/CHANGELOG.md).Planned for the next release are improvements such as running the signer in a `no-std` environment without a standard library, enabling the signer to operate on modest amounts of RAM and ROM, and optimizing performance for embedded processors. Future releases will include routing, BOLT-12 support, VSS integration, and multisig capabilities.For developers seeking a meaningful open-source project to contribute to, the VLS team welcomes your assistance. They encourage interested individuals to reach out on Matrix to learn how they can get involved with the project.To learn more about the VLS Beta release, click [here](https://vls.tech/posts/vls-beta/).</summary>
    <published>2023-06-28T16:19:19+00:00</published>
  </entry>
</feed>
