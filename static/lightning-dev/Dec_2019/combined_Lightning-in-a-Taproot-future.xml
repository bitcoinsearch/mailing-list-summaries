<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning in a Taproot future</title>
  <updated>2023-06-02T22:22:50.325982+00:00</updated>
  <author>
    <name>ZmnSCPxj 2019-12-17 15:05:17</name>
  </author>
  <author>
    <name>Lloyd Fournier 2019-12-18 03:51:56</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-24 09:56:10</name>
  </author>
  <author>
    <name>ZmnSCPxj 2019-12-15 15:43:07</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-07 00:26:05</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-10 15:24:56</name>
  </author>
  <author>
    <name>David A. Harding 2020-01-12 18:04:41</name>
  </author>
  <author>
    <name>David A. Harding 2020-01-05 13:58:47</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-06 07:37:20</name>
  </author>
  <author>
    <name>David A. Harding 2020-01-10 18:30:07</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-12 15:01:06</name>
  </author>
  <author>
    <name>ZmnSCPxj 2020-01-27 01:40:30</name>
  </author>
  <author>
    <name>Matt Corallo 2019-12-16 01:27:59</name>
  </author>
  <author>
    <name>Anthony Towns 2019-12-17 14:02:29</name>
  </author>
  <link href="lightning-dev/Dec_2019/002387_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002392_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002450_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002375_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002415_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002421_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002424_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002412_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002414_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002422_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002423_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2020/002453_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002376_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2019/002385_Lightning-in-a-Taproot-future.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning in a Taproot future</title>
    <updated>2023-06-02T22:22:50.326966+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2019-December/002387.html" rel="alternate"/>
    <summary>The Lightning Network community is exploring various options to optimize its performance while maintaining security and privacy. One option being considered is the implementation of Pointlocked Timelocked Contracts (PTLCs) to replace Hash Timelocked Contracts (HTLCs). However, the use of MuSig for PTLCs may require increased communication rounds, but an alternative script path can reduce this. There is also a proposal to create "purely scriptless" PTLCs using a point equivalent to a secret scalar, but this method requires more signatures and may compromise privacy. To enhance privacy and efficiency in Bitcoin transactions, the Lightning Network is considering the implementation of Schnorr and Taproot at the base layer of Bitcoin. This will enable the use of payment point+scalar at the Lightning layer. However, there are concerns regarding the implementation of `nSequence` relative-locktime transactions for unilateral closes in the Lightning Network, as it may lead to identifying LN transactions for analytics or censorship.The Lightning Network community is also discussing how to update the network to take advantage of the upcoming taproot update to the base layer. Two options are being considered: updating the current Poon-Dryja mechanism to use Schnorr signatures or keeping the current Poon-Dryja mechanism with SegWit v0 only and updating to Schnorr/SegWit v1 when Decker-Russell-Osuntokun can be implemented. Off-chain updateable cryptocurrency mechanisms such as Poon-Dryja or Decker-Russell-Osuntokun and their compatibility with relative locktimes are also discussed.Improving transactions with relative lock times is also being discussed by the Lightning Network community. Currently, these transactions are distinguishable, and suggestions include having a few wallets change their behavior to set relative time locks on normal payments to weaken the heuristic. Another suggestion is to use a coin toss to determine whether to use a non-relative-locktime nSequence or a relative-locktime nSequence. There is also a proposal to implement relative locktime in Poon-Dryja commitment transactions involving two outputs: one directly spendable by the remote side and one spendable by the local side after a relative locktime. However, this may compromise privacy, and alternatives such as setting nSequence to the block age of the UTXO being spent are suggested to limit a sniper's ability to rearrange ancestor transactions. Overall, the Lightning Network community continues to explore different options to enhance the efficiency, security, and privacy of Bitcoin transactions. These upgrades and improvements will make Bitcoin more usable as a currency for everyday transactions.</summary>
    <published>2019-12-17T15:05:17+00:00</published>
  </entry>
</feed>
