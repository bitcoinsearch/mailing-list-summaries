<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Laundry list of inter-peer wire protocol changes</title>
  <updated>2023-06-03T16:02:39.956267+00:00</updated>
  <author>
    <name>Rusty Russell 2016-04-12 01:36:51</name>
  </author>
  <author>
    <name>Rusty Russell 2016-01-27 03:07:04</name>
  </author>
  <author>
    <name>Anthony Towns 2016-01-27 14:22:29</name>
  </author>
  <author>
    <name>CJP 2016-01-27 19:34:15</name>
  </author>
  <author>
    <name>Rusty Russell 2016-01-29 02:35:17</name>
  </author>
  <author>
    <name>Anthony Towns 2016-01-29 04:37:33</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-01 01:02:56</name>
  </author>
  <author>
    <name>Fabrice Drouin 2016-02-01 16:18:21</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-02 01:11:36</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-03 00:55:37</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-14 03:28:15</name>
  </author>
  <author>
    <name>Rusty Russell 2016-01-29 01:35:35</name>
  </author>
  <author>
    <name>Rusty Russell 2016-01-29 01:23:30</name>
  </author>
  <author>
    <name>CJP 2016-02-02 17:56:08</name>
  </author>
  <author>
    <name>Mats Jerratsch 2016-01-27 07:00:53</name>
  </author>
  <author>
    <name>CJP 2016-01-27 21:19:42</name>
  </author>
  <author>
    <name>Rusty Russell 2016-03-08 05:55:56</name>
  </author>
  <author>
    <name>CJP 2016-02-11 22:47:52</name>
  </author>
  <author>
    <name>CJP 2016-04-07 20:21:53</name>
  </author>
  <link href="lightning-dev/April_2016/000516_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000408_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000410_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000411_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000413_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000416_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000417_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000419_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000420_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000425_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000444_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000414_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000415_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000423_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000409_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Jan_2016/000412_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000469_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000443_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <link href="lightning-dev/April_2016/000514_Laundry-list-of-inter-peer-wire-protocol-changes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Laundry list of inter-peer wire protocol changes</title>
    <updated>2023-06-03T16:02:39.957268+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-April/000516.html" rel="alternate"/>
    <summary>The Lightning Network protocol has been the subject of recent discussions regarding its development. Suggestions have been made to use protobufs instead of open-coded messaging for efficiency, implement a length prefix for initial key exchange and other packets, and de-couple certain subjects to have their own sub-protocol with a version number/protocol identifier. There has also been debate over shachain vs elkrem for generating revocation secrets and R value vs keypair for decorrelating transactions. Rusty Russell, a well-known software developer, is currently reworking update pipelining to remove complexity in the protocol.Amiko Pay, a payment channel network, features manual message confirmation through assigned numbers and facilitates bi-directional routing. However, reserving before locking can increase latency, which may be problematic for some use cases. The concept of reserving before locking in payment channels is an optimization technique used to reduce the risk of locking funds in a part of the route that may not exist anymore. The "reserving" stage is necessary for bi-directional routing, where both payer and payee need to route to a meeting point, and for setting tighter values on the HTLC time-outs.Non-source routing has the advantage that nodes do not need a map of the entire network, which improves privacy and could help keep the network open to new participants, even against the will of many powerful existing participants. Source-routing requires all nodes to have a complete map of the network, which makes it less private than non-source routing. In conclusion, a system where a mix of source-routing and non-source routing can be used is imagined to get the best of both worlds. Lastly, the Chief Justice of the Supreme Court of Pakistan suggests de-coupling certain aspects of the protocol and letting each subject have its own sub-protocol with version number/protocol identifier. Python can be used for proof of concept via a "dirty hack" style of gluing things together. Overall, the Lightning Network protocol is being developed further to allow for new concepts and alternative designs.</summary>
    <published>2016-04-12T01:36:51+00:00</published>
  </entry>
</feed>
