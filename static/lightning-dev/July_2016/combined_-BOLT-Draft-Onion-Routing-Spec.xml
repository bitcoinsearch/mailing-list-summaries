<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [BOLT Draft] Onion Routing Spec</title>
  <updated>2023-06-03T16:33:00.950923+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2016-08-04 18:24:25</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-05 04:00:54</name>
  </author>
  <author>
    <name>Christian Decker 2016-08-08 12:27:39</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-07-27 18:13:55</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-13 10:04:02</name>
  </author>
  <author>
    <name>Christian Decker 2016-08-15 12:06:47</name>
  </author>
  <author>
    <name>Joseph Poon 2016-08-19 18:36:47</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-08-22 19:47:56</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-10-20 22:26:07</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-05 00:52:07</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-08-12 17:59:33</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-08-12 18:00:34</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-10-03 17:21:35</name>
  </author>
  <author>
    <name>Christian Decker 2016-10-03 21:34:57</name>
  </author>
  <author>
    <name>Rusty Russell 2016-10-24 03:59:10</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-09-05 19:24:11</name>
  </author>
  <author>
    <name>Christian Decker 2016-09-06 11:27:01</name>
  </author>
  <author>
    <name>Rusty Russell 2016-09-07 01:27:47</name>
  </author>
  <author>
    <name>Rusty Russell 2016-09-27 01:47:44</name>
  </author>
  <author>
    <name>Christian Decker 2016-07-25 16:23:15</name>
  </author>
  <author>
    <name>Christian Decker 2016-08-16 08:10:57</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-17 10:23:03</name>
  </author>
  <author>
    <name>Christian Decker 2016-08-15 12:18:35</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-08-16 04:54:28</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-08-16 04:54:32</name>
  </author>
  <author>
    <name>Christian Decker 2016-08-18 09:06:22</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-19 00:56:31</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-08-20 20:32:19</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-21 20:45:06</name>
  </author>
  <author>
    <name>Christian Decker 2016-10-20 13:40:47</name>
  </author>
  <author>
    <name>Christian Decker 2016-10-21 08:30:59</name>
  </author>
  <author>
    <name>Christian Decker 2016-09-02 12:08:22</name>
  </author>
  <author>
    <name>Rusty Russell 2016-09-05 02:25:22</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-09-09 23:52:41</name>
  </author>
  <author>
    <name>Rusty Russell 2016-08-02 04:25:44</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2016-08-04 18:47:34</name>
  </author>
  <author>
    <name>Christian Decker 2016-08-04 17:05:04</name>
  </author>
  <link href="lightning-dev/Aug_2016/000559_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000563_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000564_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/July_2016/000557_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000585_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000586_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000597_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000600_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000637_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000562_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000580_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000581_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000625_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000626_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000640_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2016/000603_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2016/000607_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2016/000608_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2016/000622_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/July_2016/000556_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000591_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000592_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000587_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000589_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000590_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000594_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000595_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000598_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000599_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000636_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000638_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2016/000601_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2016/000604_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2016/000609_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000558_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000560_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2016/000561_-BOLT-Draft-Onion-Routing-Spec.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [BOLT Draft] Onion Routing Spec</title>
    <updated>2023-06-03T16:33:00.951921+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-August/000559.html" rel="alternate"/>
    <summary>The Lightning Network developers have been discussing various improvements to the network such as cross-chain payments, key rotation policies, and onion routing protocol. In order to prevent unintended transfers, Rusty Russell and Joseph Poon suggested using pay-to-contract and default requirements for pre-negotiated amounts between senders and recipients. They also proposed adding an identifier between each hop and preventing possible re-use of rhashes to avoid confusion. Christian Decker proposed a new implementation of the Sphinx routing protocol that includes fixed-size payloads to avoid making messages collatable by size. Furthermore, discussions revolved around key rotation for the onion routing protocol and issues with channel identification and proof sizes. The group agreed on using a "comms" key for each node instead of its ID and suggested different methods for key rotation. They also discussed adding a realm byte to avoid ambiguity when transferring funds across multiple channels on different chains. The group agreed on keeping the routing protocol simple and supporting regular nodes.In terms of encryption, the group decided to use ChaCha20-Poly1305 on the last hop and normal ChaCha20 on all preceding hops for encryption of the end-to-end payload. They also discussed the addition of a version byte for future modifications to the mix-header format. The proposed key rotation scheme suggests that nodes publish two keys, along with a block hash of a block beyond a "safe" re-org distance, and a signature covering the advertisement. The Lightning Network proposes using Sphinx, which specifies a format for constructing encrypted messages to be routed through a network of nodes. The per-hop payload is used to give instructions to individual hops, i.e., how many coins to forward to the next hop. This means that the end-to-end payload, i.e., the message in the Sphinx protocol, is currently unused and could be omitted. However, a mechanism is proposed to tell the node the total blinding factor along the path so that it can encrypt something in the routing info for the return path.Finally, the group discussed replay protection and key rotation within the network globally with loose synchronization. Potential solutions were proposed, and a proposal was put forward by Christian Decker to increase the robustness of onion routing within the network. Despite some outstanding issues, the Lightning Network developers are working towards a clean and simple solution to these issues.</summary>
    <published>2016-08-04T18:24:25+00:00</published>
  </entry>
</feed>
