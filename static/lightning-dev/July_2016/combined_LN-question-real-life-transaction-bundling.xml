<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - LN question - real life transaction bundling</title>
  <updated>2023-06-02T00:36:41.643345+00:00</updated>
  <author>
    <name>Luke Dashjr 2016-07-18 15:56:18</name>
  </author>
  <author>
    <name>Ron OHara 2016-07-10 08:35:21</name>
  </author>
  <author>
    <name>Rusty Russell 2016-07-18 01:25:42</name>
  </author>
  <author>
    <name>Ron OHara 2016-07-18 12:17:17</name>
  </author>
  <author>
    <name>Rusty Russell 2016-07-20 00:57:30</name>
  </author>
  <link href="lightning-dev/July_2016/000554_LN-question-real-life-transaction-bundling.xml" rel="alternate"/>
  <link href="lightning-dev/July_2016/000551_LN-question-real-life-transaction-bundling.xml" rel="alternate"/>
  <link href="lightning-dev/July_2016/000552_LN-question-real-life-transaction-bundling.xml" rel="alternate"/>
  <link href="lightning-dev/July_2016/000553_LN-question-real-life-transaction-bundling.xml" rel="alternate"/>
  <link href="lightning-dev/July_2016/000555_LN-question-real-life-transaction-bundling.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - LN question - real life transaction bundling</title>
    <updated>2023-06-02T00:36:41.643345+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-July/000554.html" rel="alternate"/>
    <summary>The discussion revolves around the limitations of payment channels and the potential for optimization with Lightning Network (LN). Rusty Russell explains that LN adds the ability to trustlessly chain channels, so Alice can pay Carol via Bob. However, Ron OHara questions the volume of transactions per user needed to justify reserving funds and the vulnerability of long-running channels to traffic analysis. Rusty suggests having three channels to make the system more robust and spread information around. The lightning network has been under discussion and various points have been raised about it. It is understood that all bitcoin funds are "pending settlement to the blockchain" but immediately available to use on the lightning network.The author is asking about optimizing transactions on the Lightning Network (LN) for frequent interactions between Alice and Bob. The response explains that simple payment channels already exist for this purpose, but LN adds the ability to trustlessly chain channels so that Alice can pay Carol via Bob. However, if the interval is a month and Alice purchases from the same shops during that period, merchants may not be happy with having up to a month's worth of revenue still pending inside the LN since cashflow is vital to them.Additionally, Bitcoin transactions involve addresses rather than individuals, so if both parties follow recommended practices of not reusing addresses, optimization may not be possible. Long-running channels are also vulnerable to traffic analysis, making them less secure than native Bitcoin transactions. The conversation ends with a quote from Arthur C. Clarke.Channels are just bitcoins held by 2 of 2 signature, but a recipient doesn't have to actually hold that many bitcoins since they mainly receive payments. There is another question about whether stores will do this themselves or outsource to Coinbase etc. If Alice only has one channel, and it's to Bob, Bob can see all the amounts Alice spends although he gets an idea of the amounts. Traffic analysis is powerful even if the content is encrypted. This is specifically how Bletchley Park worked during WWII for at least half of the information it gleaned. LN with hubs (with routing) really only starts to gain major traffic optimization wins when it has a lot of channels and participants. A chicken and egg business problem is there. Lightning Network service is expected to bootstrap slowly along the same lines as bitcoin, possibly with a killer app to accelerate growth.</summary>
    <published>2016-07-18T15:56:18+00:00</published>
  </entry>
</feed>
