<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - HTLC output aggregation as a mitigation for tx recycling, jamming, and on-chain efficiency (covenants)</title>
  <updated>2023-12-19T02:01:18.949687+00:00</updated>
  <author>
    <name>Antoine Riard 2023-12-17 22:56:38+00:00</name>
  </author>
  <author>
    <name>Johan Torås Halseth 2023-12-11 09:17:23+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-11-21 02:39:45+00:00</name>
  </author>
  <author>
    <name>Johan Torås Halseth 2023-10-26 16:52:03+00:00</name>
  </author>
  <link href="lightning-dev/Dec_2023/004255_HTLC-output-aggregation-as-a-mitigation-for-tx-recycling-jamming-and-on-chain-efficiency-covenants-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2023/004243_HTLC-output-aggregation-as-a-mitigation-for-tx-recycling-jamming-and-on-chain-efficiency-covenants-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2023/004218_HTLC-output-aggregation-as-a-mitigation-for-tx-recycling-jamming-and-on-chain-efficiency-covenants-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2023/022093_HTLC-output-aggregation-as-a-mitigation-for-tx-recycling-jamming-and-on-chain-efficiency-covenants-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - HTLC output aggregation as a mitigation for tx recycling, jamming, and on-chain efficiency (covenants)</title>
    <updated>2023-12-19T02:01:18.949735+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-December/004255.html" rel="alternate"/>
    <summary>The email from Antoine to Johan delves into the intricacies of the Lightning Network's transaction processes and raises concerns about potential vulnerabilities, specifically highlighting issues related to the aggregation of HTLC outputs. Antoine discusses a scenario where the aggregation of offered HTLC "payouts" into one or two outputs could pose a risk for replacement cycling attacks. In such an attack, a malicious actor could use high fees to replace honest transactions in the network mempools, ultimately aiming to double-spend a high-value HTLC payout. This threat is exacerbated by congested network mempools which could delay the confirmation of these malicious transactions.

Antoine suggests that one part of the solution could be the introduction of 'self-sustained' fees coupled with a sliding delay of the HTLC timelock based on block feerate to combat replacement cycling attackers who benefit from network congestion. He also proposes that in a taproot-world, system design might need to accept an increase in witness size for non-cooperative closures and considers the implementation of an accumulator at the Script level to efficiently test partial set membership as a way to prevent exponential blowup in situations involving mass non-coordinated withdrawals from a payment pool.

Furthermore, Antoine engages with the technical aspects of transaction recycling attacks within the context of LN anchor channel types. These attacks are feasible due to the ability to add inputs to increase fees without invalidating the signature. He contrasts this with legacy channels where such vulnerabilities did not exist because fees were taken directly from the HTLC outputs. Antoine highlights the advantages of aggregating HTLC outputs but also notes the risks it introduces, including the potential for a counterparty to inflate miner's fees. To mitigate these issues, he suggests segregating HTLC claims into separate outputs and employing covenants to manage aggregated claims.

The conversation also touches upon the current protocol limit of 483 and its implications for long-term payment throughput on the LN. Antoine contemplates using sliding windows to manage claim periods for HTLCs, recognizing that this would require off-chain consensus on feerate thresholds among routing nodes. The potential for Point Time-Locked Contracts (PTLCs) to maintain near-constant size for offered HTLCs is explored, along with the application of covenant mechanisms in withdrawal phases for payment pools with many participants.

Antoine expresses caution regarding the activation of multiple covenants simultaneously in Bitcoin's conservative system, citing the possibility of creating 'malicious' Layer 2 contracts with complex game-theory implications. He references past discussions on CoinSwap's Transaction Withholding Attack and emphasizes the importance of an efficiency simulation framework to analyze different covenant constructions and their trade-offs. Finally, Antoine poses a thought-provoking question about whether advanced cryptosystems could scale LN payment throughput by decoupling the number of off-chain payments from the on-chain witness size needed for their claims, while maintaining security.

In summary, the correspondence explores both the benefits and challenges associated with HTLC output aggregation, including its impact on transaction recycling and slot jamming. It highlights the need for further development of covenant primitives and a careful balance between innovation and security in the evolution of Bitcoin and Layer 2 solutions like the Lightning Network. Antoine's insights contribute to ongoing discussions aimed at enhancing the scalability and robustness of cryptocurrency transactions.</summary>
    <published>2023-12-17T22:56:38+00:00</published>
  </entry>
</feed>
