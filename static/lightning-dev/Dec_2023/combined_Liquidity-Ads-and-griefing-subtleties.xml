<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Liquidity Ads and griefing subtleties</title>
  <updated>2023-12-03T02:02:28.957876+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-12-02 02:22:54+00:00</name>
  </author>
  <author>
    <name>Matt Morehouse 2023-12-01 22:42:34+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2023-12-01 17:45:18+00:00</name>
  </author>
  <link href="lightning-dev/Dec_2023/004229_Liquidity-Ads-and-griefing-subtleties.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2023/004228_Liquidity-Ads-and-griefing-subtleties.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2023/004227_Liquidity-Ads-and-griefing-subtleties.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Liquidity Ads and griefing subtleties</title>
    <updated>2023-12-03T02:02:28.957922+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-December/004229.html" rel="alternate"/>
    <summary>The discussion revolves around the subtleties of managing liquidity and funds in the Lightning Network, particularly in the context of channel management and the use of CheckLockTimeVerify (CLTV) for leased liquidity. An idea is presented that suggests encumbering a portion of the seller's funds with CLTV to safeguard transactions up to a certain threshold, specifically 10,000 satoshis. The proposal entails that any excess funds would be placed in a normal output, and HTLCs from the seller would prioritize depleting the normal output before tapping into the CLTV-secured funds. This mechanism also stipulates how funds should be managed in the event of failed HTLCs, ensuring that the CLTV output is replenished first, up to the specified limit, before overflowing to the normal output. The goal of this policy is to protect both parties while preventing potential exploitation.

The concept of liquidity advertisements is identified as a critical element of protocol design, highlighting the challenges associated with pricing and the risks of liquidity griefing attacks. These attacks occur when a buyer moves all their funds through the seller, leaving them with more locked funds than intended, which can lead to undesirable consequences for the seller. To mitigate such issues, the current specification proposes adding a CLTV to protect buyers from sellers who might close channels prematurely. However, this creates an imbalance, potentially disadvantaging the seller, especially when failed HTLCs come into play, raising concerns about the ideal destination for returned funds.

Sellers are generally considered more reputable than buyers, often being well-connected nodes or Lightning Service Providers (LSPs), which implies that it may be more effective to protect sellers rather than buyers. By enforcing optional CLTV, sellers can choose whether to accept additional risk in exchange for attracting buyers. This decision should be reflected in the pricing strategy of the sellers. Additionally, the integration of splicing, which allows for the joining or splitting of channels without closure, complicates the dynamics of channel management. Restrictions are suggested where sellers can't splice out but can splice in, whereas buyers have the freedom to splice both ways. However, this doesn't completely resolve potential disruptions to the fairness and security intended by liquidity ads.

In conclusion, the complexities of implementing CLTV locks for liquidity ads necessitate careful consideration by sellers, who must account for the potential downsides and price their services accordingly. Despite these challenges, the development of liquidity marketplaces within the lightning network is seen as a valuable advancement. The community continues to work towards refining these mechanisms to foster the growth and efficiency of the network.</summary>
    <published>2023-12-02T02:22:54+00:00</published>
  </entry>
</feed>
