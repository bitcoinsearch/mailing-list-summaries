<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>commitment update steps</title>
  <updated>2023-05-17T16:58:21.644046+00:00</updated>
  <author>
    <name>Anthony Towns</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>commitment update steps</title>
    <updated>2023-05-17T16:58:21.645041+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000062.html" rel="alternate"/>
    <summary>The conversation is about finding a solution for storing prior commitment transactions and HTLC outputs in order to identify the original commitment transaction when necessary. One suggested solution involves using the nLockTime trick to store the height of HTLC storage and searching back down from the most recent output to find other HTLCs in the transaction. Another suggestion was to use OP_RETURN metadata output to store information. The size of storage required depends on the number of commitments per second, although it is estimated that even at scale, the amount of data generated will be reasonable. There are also discussions around how key management would work without OP_CTV or OP_CSV.</summary>
    <published>2015-07-25T08:44:26+00:00</published>
  </entry>
</feed>
