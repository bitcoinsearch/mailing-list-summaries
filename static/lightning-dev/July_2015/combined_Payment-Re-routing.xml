<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Payment Re-routing</title>
  <updated>2023-06-01T23:15:40.293659+00:00</updated>
  <author>
    <name>Kevin Greene 2015-07-01 18:19:09</name>
  </author>
  <author>
    <name>Nick ODell 2015-07-01 22:35:36</name>
  </author>
  <author>
    <name>Kevin Greene 2015-07-01 23:01:31</name>
  </author>
  <author>
    <name>Joseph Poon 2015-07-02 11:40:19</name>
  </author>
  <author>
    <name>Stephen 2015-06-27 03:45:41</name>
  </author>
  <author>
    <name>Stephen Morse 2015-06-30 04:59:43</name>
  </author>
  <author>
    <name>Nick ODell 2015-07-01 16:55:46</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-02 05:11:18</name>
  </author>
  <author>
    <name>Rusty Russell 2015-06-30 08:03:00</name>
  </author>
  <author>
    <name>Kevin Greene 2015-07-01 16:31:47</name>
  </author>
  <author>
    <name>Rusty Russell 2015-06-27 05:30:53</name>
  </author>
  <author>
    <name>Rusty Russell 2015-06-27 06:41:04</name>
  </author>
  <link href="lightning-dev/July_2015/000014_Payment-Re-routing.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000015_Payment-Re-routing.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000016_Payment-Re-routing.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000018_Payment-Re-routing.xml" rel="alternate"/>
  <link href="lightning-dev/June_2015/000007_Payment-Re-routing.xml" rel="alternate"/>
  <link href="lightning-dev/June_2015/000010_Payment-Re-routing.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000013_Payment-Re-routing.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000017_Payment-Re-routing.xml" rel="alternate"/>
  <link href="lightning-dev/June_2015/000011_Payment-Re-routing.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000012_Payment-Re-routing.xml" rel="alternate"/>
  <link href="lightning-dev/June_2015/000008_Payment-Re-routing.xml" rel="alternate"/>
  <link href="lightning-dev/June_2015/000009_Payment-Re-routing.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Payment Re-routing</title>
    <updated>2023-06-01T23:15:40.294659+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000014.html" rel="alternate"/>
    <summary>The Lightning Network is a payment channel that allows for fast and inexpensive transactions. However, the issue of trust arises when rerouting payments. If a payment channel becomes unresponsive mid-payment, rerouting the payment can lead to the original non-responsive party revealing the pre-image to someone else and effectively stealing extra BTC. This could occur maliciously or non-maliciously due to honest outages.In an email exchange, Rusty and Stephen discussed how rerouting payments could result in theft if parties collude. To prevent this, one solution proposed was to delay only a portion of the payment while rerouting the rest or redistributing payments among other functioning paths. Delaying the entire payment is not a good option as it goes against the concept of fast transactions.Stephen also proposed re-routing only 99% of the payment while waiting for the non-responsive party to rejoin or redistributing payments allotted for the broken path among other functioning paths. However, this solution is not foolproof because it assumes that E is not colluding with C to split the profits.To solve this problem, a separate preimage for each message is needed. E can provide A with 100 hashes to use as she wishes. However, producing 100 preimages is easy using crypto rather than hashes.The Lightning Network does not have a central processor to enforce the reputation of nodes, making it crucial for users to rely on highly available processors and not do rerouting. Nonetheless, a rating system based on node trustworthiness could be implemented to address issues of dishonesty. The Lightning Network could use a similar system to Tor's directory authority to enforce node reputations without requiring everyone to use the same directory authority.Alternative solutions include smaller payments across diverse paths, which could potentially incentivize honesty. Overall, implementing cryptographic solutions and rating systems based on node trustworthiness could minimize the impact of dishonesty on the Lightning Network.</summary>
    <published>2015-07-01T18:19:09+00:00</published>
  </entry>
</feed>
