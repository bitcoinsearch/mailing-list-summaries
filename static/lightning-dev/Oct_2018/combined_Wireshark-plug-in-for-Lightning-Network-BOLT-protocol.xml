<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Wireshark plug-in for Lightning Network(BOLT) protocol</title>
  <updated>2023-06-03T19:57:08.571992+00:00</updated>
  <author>
    <name>tomokio203 at gmail.com 2018-10-26 10:39:40</name>
  </author>
  <author>
    <name>daniel 2018-11-27 11:11:56</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-11-06 07:08:17</name>
  </author>
  <author>
    <name>Fabrice Drouin 2018-10-29 18:49:33</name>
  </author>
  <author>
    <name>tock203 2018-11-07 05:43:03</name>
  </author>
  <author>
    <name>tock203 2018-11-27 21:31:53</name>
  </author>
  <author>
    <name>Christian Decker 2018-11-08 02:38:57</name>
  </author>
  <author>
    <name>daniel 2018-11-28 05:10:22</name>
  </author>
  <link href="lightning-dev/Oct_2018/001478_Wireshark-plug-in-for-Lightning-Network-BOLT-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001676_Wireshark-plug-in-for-Lightning-Network-BOLT-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001523_Wireshark-plug-in-for-Lightning-Network-BOLT-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001482_Wireshark-plug-in-for-Lightning-Network-BOLT-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001534_Wireshark-plug-in-for-Lightning-Network-BOLT-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001678_Wireshark-plug-in-for-Lightning-Network-BOLT-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001540_Wireshark-plug-in-for-Lightning-Network-BOLT-protocol.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001686_Wireshark-plug-in-for-Lightning-Network-BOLT-protocol.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Wireshark plug-in for Lightning Network(BOLT) protocol</title>
    <updated>2023-06-03T19:57:08.571992+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001478.html" rel="alternate"/>
    <summary>The Nayuta team has developed an alpha version of a Wireshark plug-in for the Lightning Network (BOLT) protocol that can decode some BOLT messages and currently works for Nayuta's implementation (ptarmigan) and Éclair. The team proposes adding a compile option to every implementation that enables an output key information file to make interoperability testing easier by allowing communication logs of BOLT messages to be viewed in the same format (.pcap). When ptarmigan is compiled with certain options, it writes out a key information file that the Wireshark plug-in can use to decode packets. For Éclair, the software parses a log file. Key rotation occurs whenever nonce equals zero, and the lightning node software writes 16 byte MAC and key of "first BOLT packet". However, messages with non-zero nonce values cannot be decrypted until the next key rotation. Lightning-dissector already supports key rotation, but if there are both messages before and after key rotation in a .pcap file, ~/.lightning/keys.log should contain a few recent sk to support decrypting such .pcap. The team hopes that their project will be useful for the Lightning Network ecosystem, and Olaoluwa Osuntokun suggests creating canned protocol transcripts for other implementations. Christian Decker wonders if it would be possible to query a command line program or a JSON-RPC call to get the secret so that it could be added to the `listpeers` output. Tock203 responds that they implemented the latter scheme, and lightning-dissector already supports key rotation.</summary>
    <published>2018-10-26T10:39:40+00:00</published>
  </entry>
</feed>
