<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Recovering a channel state</title>
  <updated>2023-06-02T00:55:37.561410+00:00</updated>
  <author>
    <name>Anton Kumaigorodskiy 2016-10-21 13:52:48</name>
  </author>
  <author>
    <name>Rusty Russell 2016-10-24 04:11:38</name>
  </author>
  <link href="lightning-dev/Oct_2016/000639_Recovering-a-channel-state.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000641_Recovering-a-channel-state.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Recovering a channel state</title>
    <updated>2023-06-02T00:55:37.561410+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-October/000639.html" rel="alternate"/>
    <summary>The issue of lost or stolen mobile devices and how to recover data or break channels unilaterally on a new device is being considered by the author. One solution proposed is the ability to do a unilateral close, with essential parameters recorded on a server for later retrieval. However, fully recovering a latest channel state seems tricky as it requires trusting a server to never provide an outdated snapshot. The author seeks feedback on whether it is possible to obtain a latest channel snapshot from the counterparty in a trustless manner or if unilateral close is a better option.Anton Kumaigorodskiy of the Rusty Russell team suggests that there should be a way to recover the channel or at least break it unilaterally on a new device. While this topic was deferred for 1.0, it is important to discuss. Tadge has done work on outsourcing vigilance, which involves uploading encrypted information to watchers. This can almost reconstruct the current state sufficient to mutually close the channel. There's an interesting subset of this which can be done with peers. Each peer would keep some amount of encrypted data for you and always send it to you whenever you first connect. As long as one peer is honest, you get enough state to cleanly shut down the other peers without getting robbed. The idea of having peers exchange encrypted data to help each other recover channels could be useful in situations where mobile devices are lost or stolen. However, there is still more work to be done in enumerating exactly how this works.</summary>
    <published>2016-10-21T13:52:48+00:00</published>
  </entry>
</feed>
