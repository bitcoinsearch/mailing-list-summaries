<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Blockstream Successfully Tests End-to-End Lightning Micropayment Transaction</title>
  <updated>2023-06-03T16:47:41.714125+00:00</updated>
  <author>
    <name>gb 2016-10-05 21:11:49</name>
  </author>
  <author>
    <name>Christian Decker 2016-10-05 21:37:06</name>
  </author>
  <author>
    <name>Anthony Towns 2016-10-06 06:59:39</name>
  </author>
  <author>
    <name>Christian Decker 2016-10-05 16:00:18</name>
  </author>
  <link href="lightning-dev/Oct_2016/000628_Blockstream-Successfully-Tests-End-to-End-Lightning-Micropayment-Transaction.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000629_Blockstream-Successfully-Tests-End-to-End-Lightning-Micropayment-Transaction.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000630_Blockstream-Successfully-Tests-End-to-End-Lightning-Micropayment-Transaction.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2016/000627_Blockstream-Successfully-Tests-End-to-End-Lightning-Micropayment-Transaction.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Blockstream Successfully Tests End-to-End Lightning Micropayment Transaction</title>
    <updated>2023-06-03T16:47:41.715115+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-October/000628.html" rel="alternate"/>
    <summary>Blockstream developers Rusty Russell and Dr. Christian Decker have successfully demonstrated an end-to-end test of a lightning micropayment network using the v0.5 C lightning prototype. The test was set up using a web server to create invoices for test bitcoin payments over the lightning network, and in return offered to send an ASCII cat picture. Dr. Decker purchased the feline picture using 0.01 test bitcoin to open a lightning channel with the server which was mined in a test block. After paying the invoice with a 100 satoshi transfer, he accessed the link to find his cat picture, discovering it was an ASCII picture, featuring two cats. He promptly opened another node, connected to the first node, and bought a second copy of the cat picture by routing through the previous node. This is the first end-to-end test of a Lightning micropayment network, including invoicing, multi-hop payment, and item delivery. The demonstration included some bugs in corner cases and hit some known FIXMEs, but also made lightningd more robust against misconfiguration. The team plans to create libraries to allow web developers to construct their own cat picture stores. The Digital Ocean server runs Apache, bitcoind, and lightningd. A CGI script calls 'lightning-cli invoice 100000' to create an invoice, which is presented to the user. If 'lightning-cli listinvoice' indicates that the invoice was paid, the script presents the picture. In addition, the lightningd is using port 8334 that namecoind has used since its launch in May 2011. It is mostly a coincidence as the implementation will bind to a random port by default, but Rusty fixed the port to 8334 to make the server easier to find. The team found that there is a Unicode symbol for lightning, U+2607 (â˜‡), which would be 9735 in decimal. This port number is currently unassigned according to IANA.The team plans to write some documentation and smooth out a few rough edges before the 0.5 release. They want to create libraries to allow web developers to play with constructing their own cat picture stores. The low production value fits with the ASCII art. A video of the demonstration has been provided on asciinema.org.</summary>
    <published>2016-10-05T21:11:49+00:00</published>
  </entry>
</feed>
