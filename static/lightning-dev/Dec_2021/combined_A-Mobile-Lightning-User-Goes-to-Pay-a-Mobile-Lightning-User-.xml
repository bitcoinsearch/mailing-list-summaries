<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A Mobile Lightning User Goes to Pay a Mobile Lightning User...</title>
  <updated>2023-06-03T06:24:44.403227+00:00</updated>
  <author>
    <name>Matt Corallo 2021-12-27 19:12:10</name>
  </author>
  <author>
    <name>Matt Corallo 2021-10-13 16:57:57</name>
  </author>
  <author>
    <name>Matt Corallo 2021-10-13 04:44:21</name>
  </author>
  <author>
    <name>Matt Corallo 2021-10-13 05:13:53</name>
  </author>
  <author>
    <name>Matt Corallo 2021-10-20 19:16:34</name>
  </author>
  <author>
    <name>Andrés G. Aragoneses 2021-10-13 05:08:51</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-10-13 09:58:40</name>
  </author>
  <author>
    <name>ZmnSCPxj 2021-10-14 00:20:15</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2021-10-19 11:51:38</name>
  </author>
  <author>
    <name>Rusty Russell 2021-12-03 02:59:40</name>
  </author>
  <link href="lightning-dev/Dec_2021/003436_A-Mobile-Lightning-User-Goes-to-Pay-a-Mobile-Lightning-User-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003312_A-Mobile-Lightning-User-Goes-to-Pay-a-Mobile-Lightning-User-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003307_A-Mobile-Lightning-User-Goes-to-Pay-a-Mobile-Lightning-User-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003309_A-Mobile-Lightning-User-Goes-to-Pay-a-Mobile-Lightning-User-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003330_A-Mobile-Lightning-User-Goes-to-Pay-a-Mobile-Lightning-User-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003308_A-Mobile-Lightning-User-Goes-to-Pay-a-Mobile-Lightning-User-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003311_A-Mobile-Lightning-User-Goes-to-Pay-a-Mobile-Lightning-User-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003313_A-Mobile-Lightning-User-Goes-to-Pay-a-Mobile-Lightning-User-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2021/003328_A-Mobile-Lightning-User-Goes-to-Pay-a-Mobile-Lightning-User-.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2021/003370_A-Mobile-Lightning-User-Goes-to-Pay-a-Mobile-Lightning-User-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A Mobile Lightning User Goes to Pay a Mobile Lightning User...</title>
    <updated>2023-06-03T06:24:44.403227+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-December/003436.html" rel="alternate"/>
    <summary>Matt Corallo and Rusty Russell discussed in an email conversation about the challenges of sending invoices when using bolt12. They proposed a generic authorization mechanism with a fallback node to address the problem. ZmnSCPxj suggested PTLCs as a solution for adding random nonce to the PTLC payments, but Matt suggested using two hashes in an HTLC instead of one. A new model was proposed where the sender sends an HTLC with a long CLTV timeout to their own LSP with instructions. When the Recipient comes online, their LSP sends the reply to the Tipper's LSP, causing the Tipper's LSP to forward the original HTLC that the Recipient receives. The challenge of coordinating mobile lightning payments has been a topic of discussion among users. The community has proposed various solutions such as Blockstream Greenlight, keysend/AMP, lnurl, trusted LSPs, and untrusted LSPs. A new model is proposed to solve this problem where the sender sends an HTLC with a long CLTV timeout to their own LSP with instructions. Andrés G. Aragoneses asked Matt to clarify on the use of lightning for tips and accepting payments on mobile devices. Matt stated that several lightning apps attempt to solve this problem, but there's no guarantee that even a microsecond of CPU time will be available on both Android and iOS platforms. Therefore, it appears that the challenge is to find a better solution to the problem of how to accept lightning payments on mobile devices without requiring users to keep their lightning app open and in the foreground at all times.The Lightning Network community has been discussing proposals to improve payment security without compromising on non-custodial payments. One proposal was to use onion messages and notifications to build a better solution than holding HTLCs at the recipient's LSP. Another proposal suggested using two hashes instead of one for every HTLC. However, it was noted that if every node in the path had to be adapted to handle this, it might be better to simply use PTLCs instead. Overall, the Lightning Network community is actively discussing ways to improve payment security while maintaining non-custodial payments.</summary>
    <published>2021-12-27T19:12:10+00:00</published>
  </entry>
</feed>
