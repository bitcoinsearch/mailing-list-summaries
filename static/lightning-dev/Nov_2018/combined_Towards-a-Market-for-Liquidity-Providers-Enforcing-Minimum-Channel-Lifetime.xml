<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Towards a Market for Liquidity Providers -- Enforcing Minimum Channel Lifetime</title>
  <updated>2023-06-02T04:21:36.932084+00:00</updated>
  <author>
    <name>Pierre 2018-11-11 03:40:16</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-12 00:35:55</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-12 00:15:47</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-10 13:46:24</name>
  </author>
  <link href="lightning-dev/Nov_2018/001557_Towards-a-Market-for-Liquidity-Providers-Enforcing-Minimum-Channel-Lifetime.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001560_Towards-a-Market-for-Liquidity-Providers-Enforcing-Minimum-Channel-Lifetime.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001558_Towards-a-Market-for-Liquidity-Providers-Enforcing-Minimum-Channel-Lifetime.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001555_Towards-a-Market-for-Liquidity-Providers-Enforcing-Minimum-Channel-Lifetime.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Towards a Market for Liquidity Providers -- Enforcing Minimum Channel Lifetime</title>
    <updated>2023-06-02T04:21:36.932084+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001557.html" rel="alternate"/>
    <summary>The discussion between ZmnSCPxj and Pierre revolves around adding an additional CLTV constraint to determine the minimum channel lifetime. However, it is noted that parties have to exchange the first commitment txes before the funding tx is published, which means the absolute CLTV delay would not really constrain the duration of the channel as the timer starts running before the channel is created. ZmnSCPxj also brings up the "initiator pays" principle in relation to liquidity providers. In this scenario, the onchain fee from the liquidity provider's side would still end up being paid by the buyer of liquidity, so "initiator pays" seems reasonable. The liquidity provider would prefer to keep its own funds in as few outputs as possible to be more competitive in the liquidity provider market.ZmnSCPxj then presents a contract where Mercy agrees to pay N satoshi to Licky, Licky agrees to have L satoshi locked for use in the channel until block height B, either side may void this contract by paying a miner fee until the funding transaction confirms, and Mercy is responsible for getting the funding transaction confirmed. The thread discusses the concept of dual-funding and a liquidity market for providing incoming capacity. The proposal suggests that the contract for purchasing liquidity should specify the amount to be allocated for capacity and some duration for how long that capacity is to be allocated.To impose a minimum lifetime to a channel, an additional CLTV constraint that determines the minimum channel lifetime can be added after symmetric CSV. The commitment transaction can be broadcast at any time, as it has no nLockTime. If Licky pretends to sleep and does not respond, it gains no additional money or utility. In case of emergency, Licky has the ability to enforce on-chain. If Mercy broadcasts the commitment transaction as soon as it is signed, it ties up Licky's funds, and Licky cannot earn routing fees. If Licky disposes of its obligation without having most of its money tied to the channel, then the obligation is transferred to Randy. Finally, it is noted that if an actual physical bolt of lightning were to strike Licky, then Mercy gets no incoming capacity, and the contract is effectively voided.</summary>
    <published>2018-11-11T03:40:16+00:00</published>
  </entry>
</feed>
