<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Splicing Proposal: Feedback please!</title>
  <updated>2023-06-03T19:49:57.388634+00:00</updated>
  <author>
    <name>Rusty Russell 2018-10-11 00:32:46</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-10-11 04:39:28</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-10-15 19:04:23</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-10-15 19:04:46</name>
  </author>
  <author>
    <name>Christian Decker 2018-10-16 12:38:17</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-16 22:30:15</name>
  </author>
  <author>
    <name>lisa neigut 2018-10-17 01:09:02</name>
  </author>
  <author>
    <name>Conner Fromknecht 2018-10-19 03:04:59</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-24 06:36:52</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-12 04:23:57</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-10-12 06:13:49</name>
  </author>
  <author>
    <name>Christian Decker 2018-10-15 19:35:31</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-16 04:33:57</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-10-17 05:00:15</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-10-19 02:40:10</name>
  </author>
  <author>
    <name>Conner Fromknecht 2018-10-23 05:16:13</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-11-06 07:02:24</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-07 00:59:56</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-07 06:06:07</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-10 03:45:43</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-11-06 06:55:03</name>
  </author>
  <author>
    <name>Christian Decker 2018-11-07 03:12:28</name>
  </author>
  <author>
    <name>René Pickhardt 2018-10-10 22:42:18</name>
  </author>
  <author>
    <name>Christian Decker 2018-10-11 17:33:48</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-10-12 03:30:12</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-12 04:21:01</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-10-16 11:16:26</name>
  </author>
  <author>
    <name>Johan Torås Halseth 2018-10-16 19:25:59</name>
  </author>
  <link href="lightning-dev/Oct_2018/001438_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001439_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001455_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001456_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001459_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001461_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001463_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001468_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001476_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001445_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001447_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001457_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001462_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001465_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001467_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001472_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001522_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001528_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001535_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001434_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001521_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001531_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001437_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001440_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001443_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001444_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001458_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001460_Splicing-Proposal-Feedback-please-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Splicing Proposal: Feedback please!</title>
    <updated>2023-06-03T19:49:57.389631+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001438.html" rel="alternate"/>
    <summary>The Lightning Network developers are proposing a splice feature that would allow users to add or remove liquidity from channels without closing them. René Pickhardt proposes a new method for splicing in and out of Lightning Network channels, which involves creating an additional output that can be spent in future commitment transactions. However, Rusty did not choose to use this method due to its drawbacks. The proposed splicing negotiation involves three types: splice_add_input, splice_add_output, and splice_all_added. In a discussion on the Lightning-dev mailing list, a member named ZmnSCPxj suggested that a simpler method for splicing should be considered despite its larger on-chain footprint. The Lightning Network is exploring new methods for splicing, which involves creating an additional output spent by a special commitment transaction to simplify the process and avoid sending messages twice. There are debates on whether to lift from the multiple funding output approach the "pre-seating of inputs" as it would allow for splicing of funds without needing to modify the revoke_and_ack or channel_reestablish messages. The negotiation process for splicing is discussed, along with the limitations of the descriptor language and the possibility of restarting the revocation sequence post-splice to free up space in watchtowers. The Lightning Network is a decentralized system for instant and high-volume Bitcoin transactions, which has been designed as an overlay network to the Bitcoin Blockchain. The Lightning Network developers have proposed a feature called splicing, which allows users to combine two existing payment channels into one or divide one channel into two. The proposed design includes sending a distinct message referencing the active_channel_id and a splice_channel_id for the pending splice. Safety of transactions on Lightning protocol is discussed, with 0-conf transactions being used but made safe by preventing replacement of the 0-conf transaction without receiver consent. Rusty Russell proposed a new protocol for Lightning Network's splice-in feature, which enables users to add funds to an existing payment channel without closing it. The current process involves creating a new transaction with updated balances, but Russell's alternative method involves creating parallel funding transactions that can be merged at an agreed depth. Olaoluwa Osuntokun discusses the benefits of creating multiple channels and indirectly routed payments. The limitations of c-lightning have been highlighted, which makes it difficult to create multiple channels. C-lightning users are complaining that they can't open multiple channels, so a rough proposal has been introduced to allow splicing of existing channels.The conversation highlights the importance of having multiple channels, especially post AMP, as the increased HTLC bandwidth load requires nodes to open additional channels to other nodes. Maintaining diverse channels for fault tolerance, path diversity, and redundancy reasons is essential. There are debates on the initiator distinction in the Lightning Network and the prioritization of work items. The proposed solution is to have the initiator of the splice pay for any on-chain fees related to splicing, even if the other side decides to splice in/out some funds together with the splice. This approach reduces the surface of potential attacks in case of a bad design or implementation of dual-fund-opening and splicing.Lastly, the email thread discusses two methods of splicing channels in the Lightning Network. The first method involves merging channels once enough confirmations are received, and the second method involves creating a spent of the funding transaction which has two outputs. ZmnSCPxj suggests pre-seating inputs to generate addresses that can be spliced directly into the channel. However, there are safety concerns without trust in the other peer as the other party can refuse to create the new commit transaction. One solution proposed was to use Taproot addresses, which by default is just a 2-of-2, but in an uncooperative case it can reveal the script it commits to, which is a timelocked refund requiring a single-sig. The architecture of c-lightning assigns a separate process to each peer, which handles only a single channel. Changing this architecture would be difficult as some of the channel initiation and shutdown protocols are written directly in C code. Initiator distinction should not be done away with as an initiatee could be forced to pay fees they did not voluntarily consider paying. The Splice Preparation Protocol has five steps before the confirmation of the splice. Failure modes are also discussed. Rusty proposes an alternative approach based on inline splice-in. The proposed solution is to have the initiator of the splice pay for any on-chain fees related to splicing, even if the other side decides to splice in/out some funds together with the splice. This approach reduces the surface of potential attacks in case of a bad design or implementation of dual-fund-opening and splicing. Lastly, a new method for splicing in the Lightning Network is proposed, involving creating an additional output spent by a special commitment transaction to simplify the process and allow for multiple splicing operations in parallel. The process of Splice Signing and Splice Announcement in the Lightning Network is explained, which involves creating and signing both the</summary>
    <published>2018-10-11T00:32:46+00:00</published>
  </entry>
</feed>
