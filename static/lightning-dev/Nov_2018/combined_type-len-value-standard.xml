<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - type,len,value standard</title>
  <updated>2023-06-03T20:19:36.848724+00:00</updated>
  <author>
    <name>Christian Decker 2018-11-15 20:12:53</name>
  </author>
  <author>
    <name>Conner Fromknecht 2018-11-15 06:49:40</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-15 07:39:19</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-15 09:45:13</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-16 00:25:34</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-11-15 04:54:25</name>
  </author>
  <author>
    <name>Conner Fromknecht 2018-11-16 00:12:45</name>
  </author>
  <link href="lightning-dev/Nov_2018/001627_type-len-value-standard.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001605_type-len-value-standard.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001607_type-len-value-standard.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001609_type-len-value-standard.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001620_type-len-value-standard.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001604_type-len-value-standard.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001614_type-len-value-standard.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - type,len,value standard</title>
    <updated>2023-06-03T20:19:36.848724+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-November/001627.html" rel="alternate"/>
    <summary>The conversation focuses on the structure of `type, len, value` sequence in BOLT messaging. It is suggested that the `type`s should be in ascending order to make checking uniqueness easier for a naive parser. The length of `type` is proposed to be one byte instead of two to avoid creating a new message type for 256 optional fields. For an unknown even `type`, it is suggested to crash and burn to maintain consistency. The use of varint for the length of `len` is proposed to address the issue of insufficient bytes for all lengths. A separate BOLT document is also proposed for `type,len,value` to add new fields and help spec and verify t-l-v data structures. During a summit, a proposal was brought up to add `type,len,value` to messages and intercommunication structures for backward compatibility while allowing future additional fields. Each `type` must be unique, but it is unclear whether they must be in ascending order. There are debates over the length of `type` and `len`, with some suggesting the use of varint. The question of odd `type`s' acceptability depends on the message context. A separate BOLT for `type,len,value` is proposed, but specifics about sub-TLV structures are not yet fleshed out.A proposal is made to allow varint to be max 2 bytes to address the max message size of 65KB. The discussion revolves around implementing varint in Lightning and the creation of a section or part in a different BOLT to describe it.</summary>
    <published>2018-11-15T20:12:53+00:00</published>
  </entry>
</feed>
