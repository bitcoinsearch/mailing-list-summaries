<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Commitment Transaction Format Update Proposals?</title>
  <updated>2023-06-03T19:51:38.557518+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-10-12 06:19:31</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-19 10:42:31</name>
  </author>
  <author>
    <name>Conner Fromknecht 2018-10-20 16:12:00</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-11-06 06:03:19</name>
  </author>
  <author>
    <name>Fabrice Drouin 2018-10-18 11:28:31</name>
  </author>
  <author>
    <name>Rusty Russell 2018-11-06 04:59:52</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-11-06 04:29:21</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-12 04:56:03</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-12 06:36:57</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-10-12 07:08:48</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-13 02:59:02</name>
  </author>
  <author>
    <name>Jim Posen 2018-10-20 20:36:59</name>
  </author>
  <author>
    <name>Rusty Russell 2018-10-23 10:43:26</name>
  </author>
  <link href="lightning-dev/Oct_2018/001448_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001469_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001470_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001520_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001466_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001519_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2018/001518_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001446_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001449_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001450_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001452_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001471_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2018/001473_Commitment-Transaction-Format-Update-Proposals-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Commitment Transaction Format Update Proposals?</title>
    <updated>2023-06-03T19:51:38.558519+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-October/001448.html" rel="alternate"/>
    <summary>Bitcoin developers are exploring changes to the Lightning Network's commitment transaction format. One proposed change is the use of an OP_TRUE-style output to allow for Child Pays for Parent (CPFP) and avoid closing channels during spikes in on-chain fees. Additionally, they suggest the use of SIGHASH_ANYONECANPAY|SIGHASH_SINGLE for HTLC transactions. However, this would require an available UTXO to make the CPFP. The CLTV timeout should also be symmetrical to avoid trying to game the peer into closing. Other changes include making the `remotepubkey` a BIP-32-style and using a two-stage unhardened BIP-32 derivation based on the commitment number for keys like `localpubkey`, `remotepubkey`, and others. The proposed changes will be combined into a single `commitment_style2` feature. There were concerns about the proposal requiring base-layer changes at the Bitcoin level, such as modifying IsStandard() and implementing a consensus rule that OP_TRUE would only be spendable within the block it appears in. Another concern was that HTLC transactions with an absolute timeout won't be accepted in the mempool until the expiry has matured. Nevertheless, the conversation focused on finding ways to manage on-chain fees more efficiently and flexibly. ZmnSCPxj and Rusty Russell had an email conversation discussing minor improvements to the Bitcoin network. They discussed using an OP_TRUE-style output to allow Child Pays for Parent (CPFP) in Bitcoin transactions, which would require base-layer changes at the Bitcoin level. However, it was suggested that a P2WSH to "OP_TRUE" could work for now despite wasting some space. It was also discussed whether robots would arise to claim as many OP_TRUE outputs as they could find, which Rusty seemed to welcome as a technique to avoid polluting the UTXO set.In another discussion about CPFP, Jim Posen suggested signing all inputs with ANYONECANPAY and creating an exact output for the fees input instead of leaving an extra output for CPFP. However, this approach would change the transaction ID that the Hashed Time-Locked Contract (HTLC) transactions rely on. The email exchange also touched on symmetric delays in commitment transactions. Rusty Russell argued that the delays need not be the same for both parties, but they should be applied equally regardless of who publishes the commitment transaction. He explained that taking the max delay avoids game theory issues where one party has a shorter delay than the other, leading to unfairness and potential coercion. The rationale for the original asymmetric design of the CLTV timeout was also discussed, with Rusty suggesting that aligning incentives (to mutual close) makes sense if they are changing other things.Overall, the conversation covered technical details and proposals regarding Bitcoin implementations, including suggestions on managing fees in commitment transactions and concerns about potential robots claiming as many OP_TRUE outputs. There were also discussions on how to simplify the static channel backup and recovery workflow in Bitcoin's Lightning Network.</summary>
    <published>2018-10-12T06:19:31+00:00</published>
  </entry>
</feed>
