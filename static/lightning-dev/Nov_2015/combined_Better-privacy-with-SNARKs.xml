<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Better privacy with SNARKs</title>
  <updated>2023-06-01T23:59:35.017158+00:00</updated>
  <author>
    <name>Andrew Miller 2015-12-02 12:40:43</name>
  </author>
  <author>
    <name>Martijn Meijering 2015-12-07 18:28:22</name>
  </author>
  <author>
    <name>Anthony Towns 2015-12-08 02:10:46</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-30 00:07:59</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-17 21:14:36</name>
  </author>
  <author>
    <name>Mats Jerratsch 2015-11-19 13:16:57</name>
  </author>
  <author>
    <name>Rusty Russell 2015-11-24 03:30:19</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-24 05:45:43</name>
  </author>
  <author>
    <name>Andrew Miller 2015-11-24 13:31:37</name>
  </author>
  <author>
    <name>Martijn Meijering 2015-12-06 16:24:54</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-27 04:42:19</name>
  </author>
  <author>
    <name>Mats Jerratsch 2015-11-27 14:44:19</name>
  </author>
  <author>
    <name>Rusty Russell 2015-11-20 01:35:46</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-20 07:44:15</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-22 02:13:27</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-26 11:15:16</name>
  </author>
  <author>
    <name>Rusty Russell 2015-11-27 03:55:09</name>
  </author>
  <link href="lightning-dev/Dec_2015/000365_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000366_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000368_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000363_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000309_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000314_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000337_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000338_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000340_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2015/000367_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000349_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000358_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000328_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000329_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000330_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000344_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000347_Better-privacy-with-SNARKs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Better privacy with SNARKs</title>
    <updated>2023-06-01T23:59:35.017158+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-December/000365.html" rel="alternate"/>
    <summary>This post discusses the use of SNARKs (Succinct Non-interactive Arguments of Knowledge) to increase privacy in Lightning network transactions. The idea is to create a proof that a hash value was computed from a specific input without revealing the input itself. There are limitations, such as time and computational resources required to generate the proof data and the need for trust in the original random numbers used to generate the verification key.Andrew Miller, a member of the Lightning development community, posted a message in 2015 on the Linux Foundation's mailing list stating that a SNARK is unnecessary for the application being discussed. In response to a question about SNARK, someone stated that using ECC multiply and addition achieved the same result which was already being used for crypto. The author also discusses the use of zero-knowledge proofs (ZKPs) to prove that R1 = R2 XOR X without revealing R1 or R2. This would allow for the switching of R in between routing an arbitrary amount of time, solving the last obvious privacy attack vector currently existing. However, the author notes that ZKPs require perfect implementation to work as intended.Bitcoin developers have been discussing various methods of revealing private keys, including Rusty Russell and Anthony Towns' approaches to revealP function. Towns suggested using EC keys for a payment system where users are given two key pairs: K1 and K2, such that K2 = K1 * p. The burden of keeping the payment private falls entirely on the consumer, who can route HTLC payable to qN at the first hop all the way to q1 when it gets to the merchant. However, implementation issues and the need for OP_CHECKPRIVPUBKEYPAIR operator must be addressed.In an email conversation, Towns discussed dividing QN by (r2*..*rN) to get back to Q1 in Bitcoin transactions. If successful, the original receipt/proof of payment could be obtained. An extra 32B or 64B of payload would need to be added to each onion hop if calculating r from the ECDH secret is fine or not, respectively.Two approaches were also discussed to force someone to reveal the private key corresponding to secp256k1 public key P. The first approach involves generating a signature with P, requiring brute-forcing approximately 4 billion parameters to get a valid signature. The second approach, suggested by andytoshi and aj, is more complicated but faster while still being secure, requiring six sigops if the transaction needs to be dropped to the blockchain.Finally, Rusty Russell pointed out that the proposed solution wouldn't work if sigA, sigB, and sigC all shared the same r and SIGHASH settings. Greg Maxwell suggested a quicker method of calculating P.</summary>
    <published>2015-12-02T12:40:43+00:00</published>
  </entry>
</feed>
