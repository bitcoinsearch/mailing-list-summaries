<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Return to the Layered Commit Transactions?</title>
  <updated>2023-05-18T16:32:58.107531+00:00</updated>
  <author>
    <name>Anthony Towns 2015-11-30 01:25:54</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-27 21:27:42</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-27 05:14:46</name>
  </author>
  <author>
    <name>Anthony Towns 2015-11-25 09:07:54</name>
  </author>
  <link href="lightning-dev/Nov_2015/000364_Return-to-the-Layered-Commit-Transactions-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000361_Return-to-the-Layered-Commit-Transactions-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000350_Return-to-the-Layered-Commit-Transactions-.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2015/000343_Return-to-the-Layered-Commit-Transactions-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Return to the Layered Commit Transactions?</title>
    <updated>2023-05-18T16:32:58.108533+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-November/000364.html" rel="alternate"/>
    <summary>Rusty Russell and Anthony Towns had a conversation about the constraints on timeout based on fees. They suggested batching timeouts to save space in transactions. The maximum number of concurrent committed HTLCs on a channel is 3000 due to the standard limit on transactions. Bob needs to determine the timeout to set on the outgoing HTLC, T_b, in order to keep the channel with Alice open. He must resolve the outgoing HTLC by time T_a-d_a-f_a. At time T-d-f, if the HTLC has not been resolved off-chain, he needs to publish his commitment transaction and it will hit the chain at time T-d. The email thread discusses Bitcoin's constraints on HTLCs and commitment transactions. It explains how Alice can close a channel unilaterally when paying an HTLC and claim a refund while ensuring the counterparty is not cheated. Revocation time and absolute CLTV timeout are also covered, which must increase/decrease with each hop, respectively. The protocol ensures node 19 will demand a response from node 20 at time T-t+k, but worst case is three days unless there are multiple hop failures. If payment fails due to a single hop failure, the nodes' funds will be held up until the node comes back online. Reducing the OP_CHECKLOCKTIMEVERIFY argument would not work usefully because the revocation delay happens simultaneously. Finally, Rusty and Anthony discussed how to close the channel or drop to the blockchain well before T actually comes around.</summary>
    <published>2015-11-30T01:25:54+00:00</published>
  </entry>
</feed>
