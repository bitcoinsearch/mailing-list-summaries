<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Resumable channels using OP_CHECKSIGFROMSTACK</title>
  <updated>2023-08-17T01:50:38.400562+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-08-16 07:56:21+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Resumable channels using OP_CHECKSIGFROMSTACK</title>
    <updated>2023-08-17T01:50:38.400833+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-August/004045.html" rel="alternate"/>
    <summary>The email starts with the sender expressing their opinion that fraud proofs are not necessary and can be dangerous. They argue that fraud proofs impose a hard penalty on LSPs (Lightning Service Providers) for something that should be best effort, and could also get desynchronized by connection issues, especially with flaky mobile connections.The sender agrees with Peter Todd's viewpoint that the mobile wallet can check the state of the returned backup at every connection request, which makes it highly unlikely for the LSP to cheat. They mention that this approach has been taken for Phoenix, a project they are working on.The sender expresses surprise that the recipient didn't mention the BOLT PR (Basis of Lightning Technology Pull Request) created for those backups. They believe that the BOLT PR is sufficient for achieving the desired outcome. They provide a link to the BOLT PR in [1]. They suggest that once this version is implemented, it should probably be moved to a blip instead of a BOLT. They clarify that the approach used in Phoenix currently is slightly different from the one described in the BOLT PR, but apart from that difference, it contains all the necessary mechanisms.The email ends with a casual "Cheers" and the name of the sender.</summary>
    <published>2023-08-16T07:56:21+00:00</published>
  </entry>
</feed>
