<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Nucleus: Capital-efficient multipeer Lightning payment channels</title>
  <updated>2023-08-29T02:17:23.313615+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-08-28 13:34:44+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Nucleus: Capital-efficient multipeer Lightning payment channels</title>
    <updated>2023-08-29T02:17:23.313686+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-August/004076.html" rel="alternate"/>
    <summary>The email discusses the major difference between Proof of Work (PoW) and Lightning Network in terms of sybil attacks. It explains that for PoW, it is impossible to create a sybil attack by spinning up multiple nodes on AWS containers with their own identity. This is because every node in PoW requires its own continuous hashpower. On the other hand, in Lightning Network, each node can be generated by simply incrementing a 256-bit number.The email emphasizes that the honest majority assumption can only be relied upon if there is some form of sybil-resistance. PoW itself acts as the sybil-resistance mechanism used in Bitcoin. Without any sybil-resistance mechanism, it is entirely possible for someone to run multiple nodes and vote others out of their funds.The author concludes by stating that there is a reason why every non-custodial trust-minimized multiparticipant offchain mechanism requires n-of-n, highlighting the importance of having a sybil-resistance mechanism in place.(Note: The farewell part of the email has been ignored as per the given rules.)</summary>
    <published>2023-08-28T13:34:44+00:00</published>
  </entry>
</feed>
