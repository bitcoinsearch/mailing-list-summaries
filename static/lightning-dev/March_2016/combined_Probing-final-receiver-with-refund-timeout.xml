<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Probing final receiver with refund timeout</title>
  <updated>2023-06-03T16:14:13.620810+00:00</updated>
  <author>
    <name>Mats Jerratsch 2016-03-02 11:29:39</name>
  </author>
  <author>
    <name>Mats Jerratsch 2016-03-09 09:49:23</name>
  </author>
  <author>
    <name>Rusty Russell 2016-03-15 01:01:38</name>
  </author>
  <author>
    <name>Rusty Russell 2016-03-22 01:14:15</name>
  </author>
  <author>
    <name>Rusty Russell 2016-03-05 09:28:36</name>
  </author>
  <author>
    <name>Mats Jerratsch 2016-03-08 15:36:21</name>
  </author>
  <author>
    <name>Rusty Russell 2016-03-09 00:30:47</name>
  </author>
  <author>
    <name>Mats Jerratsch 2016-03-21 09:42:35</name>
  </author>
  <link href="lightning-dev/March_2016/000452_Probing-final-receiver-with-refund-timeout.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000484_Probing-final-receiver-with-refund-timeout.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000490_Probing-final-receiver-with-refund-timeout.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000499_Probing-final-receiver-with-refund-timeout.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000454_Probing-final-receiver-with-refund-timeout.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000472_Probing-final-receiver-with-refund-timeout.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000481_Probing-final-receiver-with-refund-timeout.xml" rel="alternate"/>
  <link href="lightning-dev/March_2016/000497_Probing-final-receiver-with-refund-timeout.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Probing final receiver with refund timeout</title>
    <updated>2023-06-03T16:14:13.620810+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-March/000452.html" rel="alternate"/>
    <summary>The Lightning Network, a layer-2 scaling solution for Bitcoin, has been discovered to have a vulnerability in its onion routing. The attack can be carried out by setting too short of an absolute CLTV refund timeout, allowing an intermediary node to determine if a payment is originating from another source rather than being relayed. One proposed solution involves making sure that payment timeouts differ between each other, while another suggests that each node should publish their minimum timeout value. Mats Jerratsch proposes a three-step solution that involves publishing MIN_TIMEOUT, summing the MIN_TIMEOUT to the payee and adding some random value, and putting the 'expected_timeout' in each layer of the onion by subtracting the last hops' MIN_TIMEOUT from the initial timeout. However, there are concerns that even with this solution, patterns could still emerge that clever individuals could exploit. To combat this issue, Mats proposes using MAX_HOPS * MAX_OVERLAY * MIN_TIMEOUT to randomize the refund time, without running out of time in the end. There are also fears that including the timeout the previous node should have sent you and the timeout you should use for the next node into the onion object would complicate routing and open up another attack vector for attacking the network with unroutable payments.Furthermore, Mats Jerratsch is proposing adding complexity to prevent free payments and to potentially block future features involving multiple payments to one R value over the same route. This would prevent malicious nodes from manipulating the routing onion. However, it is acknowledged that the filtering would not be based on the same R value, but on the bitwise identical onion routing information. In summary, the Lightning Network's onion routing has been found to have vulnerabilities, leading to a discussion on the different solutions proposed to mitigate this issue. While there are concerns about the potential exploitation of these solutions, they aim to prevent attacks and ensure the security of the network.</summary>
    <published>2016-03-02T11:29:39+00:00</published>
  </entry>
</feed>
