<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [RFC] Lightning invoice/payment format draft</title>
  <updated>2023-06-02T01:09:54.249373+00:00</updated>
  <author>
    <name>ZmnSCPxj 2017-06-01 03:42:21</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-06-01 03:48:46</name>
  </author>
  <author>
    <name>ZmnSCPxj 2017-06-01 05:25:57</name>
  </author>
  <author>
    <name>Rusty Russell 2017-06-01 01:28:20</name>
  </author>
  <link href="lightning-dev/June_2017/000733_-RFC-Lightning-invoice-payment-format-draft.xml" rel="alternate"/>
  <link href="lightning-dev/June_2017/000734_-RFC-Lightning-invoice-payment-format-draft.xml" rel="alternate"/>
  <link href="lightning-dev/June_2017/000735_-RFC-Lightning-invoice-payment-format-draft.xml" rel="alternate"/>
  <link href="lightning-dev/June_2017/000732_-RFC-Lightning-invoice-payment-format-draft.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [RFC] Lightning invoice/payment format draft</title>
    <updated>2023-06-02T01:09:54.249373+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-June/000733.html" rel="alternate"/>
    <summary>The letter addresses issues with parsing optional amounts in lightning invoices due to confusion with the separator character "1" being used for both human-readable and data parts. A suggestion is made to fix the first 5 bits to be 0 for an unambiguous separator. The author questions the claim that lightning invoices are optimized for human errors, as they are longer than segwit addresses and more prone to errors.In a message, ZmnSCPxj corrects someone's understanding of bech32 and apologizes for any confusion caused. They note that the character "1" is not allowed in the data part, making the last "1" digit in the bech32 string serve as the separator between human-readable and data parts.ZmnSCPxj reports a doubled "than" at line 20 of Bolt#11 and notes that the tagged `d` field is not clearly described, assuming it is encoded in ASCII or UTF8 and packed into 5-bit packets. They suggest including a proper description of its intended encoding in the BOLT.The lightning network has a pull request for a payment format that requires wider review. Rustyrussell has provided an implementation of the payment format on Github, along with an example.</summary>
    <published>2017-06-01T03:42:21+00:00</published>
  </entry>
</feed>
