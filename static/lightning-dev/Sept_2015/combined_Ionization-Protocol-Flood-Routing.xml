<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Ionization Protocol: Flood Routing</title>
  <updated>2023-05-18T17:55:49.304850+00:00</updated>
  <author>
    <name>Pieter Wuille 2015-09-25 03:38:59</name>
  </author>
  <author>
    <name>Anthony Towns 2015-09-21 11:08:44</name>
  </author>
  <author>
    <name>Anthony Towns 2015-09-28 11:12:56</name>
  </author>
  <author>
    <name>Anthony Towns 2015-09-28 10:37:19</name>
  </author>
  <author>
    <name>Anthony Towns 2015-09-25 10:11:40</name>
  </author>
  <author>
    <name>Anthony Towns 2015-09-25 05:54:06</name>
  </author>
  <author>
    <name>Anthony Towns 2015-09-25 05:08:36</name>
  </author>
  <author>
    <name>Anthony Towns 2015-09-23 05:42:40</name>
  </author>
  <author>
    <name>Anthony Towns 2015-09-21 07:12:42</name>
  </author>
  <link href="lightning-dev/Sept_2015/000236_Ionization-Protocol-Flood-Routing.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000201_Ionization-Protocol-Flood-Routing.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000241_Ionization-Protocol-Flood-Routing.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000240_Ionization-Protocol-Flood-Routing.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000235_Ionization-Protocol-Flood-Routing.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000234_Ionization-Protocol-Flood-Routing.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000233_Ionization-Protocol-Flood-Routing.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000216_Ionization-Protocol-Flood-Routing.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000200_Ionization-Protocol-Flood-Routing.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Ionization Protocol: Flood Routing</title>
    <updated>2023-05-18T17:55:49.305850+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-September/000236.html" rel="alternate"/>
    <summary>In an email exchange on September 25th, 2015, Rusty Russell and Pieter Wuille discussed how to increase Lightning Network efficiency. They chose a dozen "beacon" nodes at random and propagated the best routes to and from those nodes, which is similar to another scheme. They also discussed methods for avoiding fake beacons and how to update beacon routing. In the end, they suggested using a global communication mechanism or IRC channel as a prototype hack.The Lightning Network could potentially use an update rate of 10kB/s to allow fees to be updated once every three hours on average, while a rate of 100kB/s would allow updates to occur around every 20 minutes. Having the entire graph could help with commercial and academic research beyond privacy as knowing the fees others charge can help determine what fees should be charged. The conversation is about the design of a Lightning Network for Bitcoin. The topic of discussion focuses on how to choose beacon nodes and their number, route selection, and the time delay before using a beacon. The conversation suggests that power law distribution may occur due to increased connectivity, and the beacon nodes' number should be agreed upon by the consensus network rather than being set per node. It was suggested that the use of multiple cohorts of beacons could ensure seamless transitions as the network grows. Additionally, it's recommended that there should be a two-phased approach where one can compete to become a beacon through SPV proof and later broadcast routes after the block is confirmed. Finally, the conversation discussed the depth requirement of the anchor, which may vary depending on the transaction size and frequency.The author discusses the profitability of running lightning nodes, with a focus on the role of beacons. They argue that the profit from running regular nodes is not worth it compared to running a beacon node. They also explore the idea of using nanopayments to probe routes and determine fees. The author further notes potential issues with beacons, such as needing to scale channel balances and the possibility of attacks on beacons. Additionally, they suggest that beacon nodes may not be effective in practice. Finally, they discuss the idea of using onion routing for donation addresses and the need for a DHT for routing to such addresses.The Lightning Network is a layer two protocol for Bitcoin which is designed to make transactions faster and cheaper by routing them through payment channels that are established between users. The network makes use of "beacons" which are used to broadcast information about available routes and fees, making it easier for users to find a path for their payment. Additionally, nodes on the Lightning Network can earn fees for forwarding payments, but this can erode channels over time. As such, there is a proposal for nodes to pay profits and expenses to an entirely separate lightning wallet every month to prevent erosion. In a conversation between Rusty Russell and aj, they discussed various details of the Lightning Network. They talked about how setting incoming fees prohibitively high and outgoing fees to a different set as prohibitively high will allow for a dynamic management system, but may result in the risk of not being used as a beacon if the fees are too high. aj suggests that the route finding is separate enough that you can always improve it while leaving the lower layers (HTLCs and onion-forwarding) the same. They also debated on the number of beacons, which they decided should increase on a log scale with network size and can be derived from previous beacons. They further discussed how to volunteer to be a beacon, with the consensus being that you commit to node id, ordering, and volunteering to be a beacon by signing "imma beacon! depth $n anchor $txid" and gossiping about it, hoping to be in the top 12. The conversation discusses the possibility of anonymous posting and observing of prices and values through lightning network by nodes without beacons. It suggests the use of nanopayments for probing routes in case of no fee information. The idea of running a node on a phone is also discussed, but it is deemed not realistic due to battery life and connectivity issues. The risk of all funds being tied up in active HTLCs when buying something is also brought up. The conversation ends with a discussion on the difference between wallets and routing nodes, and the potential risks associated with being a routing node, such as being hacked and having funds drained.The lightning network used by Bitcoin is a layer on top of the blockchain that facilitates quick, cheap and scalable transactions. A recent thread on the mailing list has been discussing how beacons will work on Lightning Network. Beacons are the nodes which store information about all the channels in their sub-graph and help in finding a route for transactions. The number of beacons required for the network to operate efficiently has been debated. It was suggested that each node should provide its lightning public key and a set of low-cost paths from the current beacons to it when requesting a payment. In addition, there should be a distributed</summary>
    <published>2015-09-25T03:38:59+00:00</published>
  </entry>
</feed>
