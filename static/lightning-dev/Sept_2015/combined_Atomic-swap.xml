<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Atomic swap</title>
  <updated>2023-06-03T15:27:36.656851+00:00</updated>
  <author>
    <name>Pierre 2015-09-14 21:44:26</name>
  </author>
  <author>
    <name>Pierre 2015-09-14 13:35:02</name>
  </author>
  <author>
    <name>Rusty Russell 2015-09-14 18:46:10</name>
  </author>
  <link href="lightning-dev/Sept_2015/000186_Atomic-swap.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000184_Atomic-swap.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000185_Atomic-swap.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Atomic swap</title>
    <updated>2023-06-03T15:27:36.656851+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-September/000186.html" rel="alternate"/>
    <summary>The participants in this conversation are discussing an idea proposed by some individuals in a Bitcoin forum. The proposal involves the secure movement of funds in and out of existing channels through the use of HTLC contracts. This implementation has several use cases, including funding balanced channels and providing merchants with a way to cash out their funds seamlessly. Rusty-style protobuf messages are provided to illustrate what the implementation would look like, with separate flows for swap in and swap out processes.However, there are two caveats that need addressing. Firstly, a way to add another anchor to a channel is required since the atomic swap cannot increase channel capacity. Secondly, it is a routing question. The proposal involves normal HTLCs, but with a different next hop - "bitcoin address X" instead of "lightning node X". No protocol changes are necessary, except for adding routing information to the commitment transaction to initiate the HTLC.The regular swap in flow involves Bob sending Alice a swap_in_offer, which Alice accepts and then sends an update_add_htlc message to Bob. Bob then sends an update_fulfill_htlc message to Alice after revealing the hash r. The regular swap out flow involves Bob sending Alice a swap_out_offer, which Alice accepts and then sends an update_add_htlc message to Bob. Alice then sends an update_fulfill_htlc message to Bob after revealing the hash r.Throughout the conversation, the tone is generally positive as they express excitement about this approach.</summary>
    <published>2015-09-14T21:44:26+00:00</published>
  </entry>
</feed>
