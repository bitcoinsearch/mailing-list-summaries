<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Standardization</title>
  <updated>2023-06-03T15:34:01.283422+00:00</updated>
  <author>
    <name>CJP 2015-09-21 17:43:48</name>
  </author>
  <author>
    <name>Rusty Russell 2015-09-23 04:43:09</name>
  </author>
  <author>
    <name>Pierre 2015-09-22 10:43:31</name>
  </author>
  <author>
    <name>Rusty Russell 2015-09-23 04:40:53</name>
  </author>
  <link href="lightning-dev/Sept_2015/000203_Standardization.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000214_Standardization.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000209_Standardization.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000213_Standardization.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Standardization</title>
    <updated>2023-06-03T15:34:01.283422+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-September/000203.html" rel="alternate"/>
    <summary>In a conversation between Pierre and CJP, the need for a well-organized process of collecting and documenting design ideas and trade-off argumentation was discussed to increase interoperability among various pieces of software being developed. The focus was on open-source projects, with the concern of avoiding ending up like Bitcoin with specification=implementation. After attending the Scaling Bitcoin workshop, CJP proposed using a Git repository containing all concepts and standards, exchanging new ideas, amendments, etc., like pull requests. For concept choices, he created a template. CJP also proposed to distinguish between concepts and standards; concepts are non-trivial design decisions, whereas standards fill in all the trivial design decisions to make different pieces of software inter-operable.Rusty suggested something like an RFC-like process for Lightning, which is good for nailing down proposal details. However, they're not so good with brainstorming future stuff or concepts. The writer acknowledges Rusty's suggestion but notes that their proposal is different from the RFC process. They are open to other ideas and would like to be informed about why they should use an RFC-like process or something else.The writer notes that there are some differences in how different people think certain problems should be addressed. While design decisions in Lightning do not require the same "consensus" as block validity rules in Bitcoin, some decisions carry a strong network effect and may be hard to reverse once made. The writer believes there is a need for a well-organized process of collecting and documenting design ideas and trade-off argumentation, which would help increase interoperability between several pieces of software being developed.Finally, Pierre expressed his desire to have a well-organized process for collecting and documenting design ideas and trade-off argumentation. He believes that this would increase interoperability among the various pieces of software being developed. Currently, he is using Rusty's repo at ElementsProject as the reference implementation, which he finds to be perfectly fine. However, he hopes that they won't end up like Bitcoin with specification=implementation.</summary>
    <published>2015-09-21T17:43:48+00:00</published>
  </entry>
</feed>
