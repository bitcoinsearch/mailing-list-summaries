<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A state machine.</title>
  <updated>2023-05-18T17:49:49.889726+00:00</updated>
  <author>
    <name>Anthony Towns 2015-08-31 02:24:26</name>
  </author>
  <author>
    <name>Anthony Towns 2015-09-01 22:32:42</name>
  </author>
  <author>
    <name>Anthony Towns 2015-08-30 00:51:54</name>
  </author>
  <author>
    <name>Anthony Towns 2015-08-29 07:42:39</name>
  </author>
  <link href="lightning-dev/Aug_2015/000166_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000178_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000160_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000156_A-state-machine-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A state machine.</title>
    <updated>2023-05-18T17:49:49.889726+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000166.html" rel="alternate"/>
    <summary>The conversation between Rusty Russell and Anthony Towns centers around the Lightning Network's payment channel, which allows users to transact without involving the blockchain. They discuss the current states of the protocol and how CMD_CLOSE isn't a valid option when proposing an update. Instead, it is only valid during WAIT_FOR_UPDATE_SIG but not WAIT_FOR_HTLC_ACCEPT/WAIT_FOR_UPDATE_COMPLETE.One potential optimization discussed is updating multiple HTLCs at once. While it could be a practical solution, Russell shies away from implementing it now due to the current state of the protocol. They also discuss the possibility of declining broken HTLC updates and the potential for a deadlock in the system if both systems think they're high priority.Furthermore, they consider the possibility of ignoring some errors rather than automatically closing the channel. The INIT_NOANCHOR state can rebalance the channel using PKT_REBALANCE_VIA_BLOCKCHAIN. Finally, they discuss the assumption that whoever initiates a channel will be the one funding it.In terms of channel anchoring, the merchant can register with PayPal or anchor the channel with a random hub. They can also make use of an HTLC to move all the funds to the other side of their channel. It is possible to fund the channel later, and the initial funding for the transaction can be as low as desired. However, increasing the capacity of a channel requires a new anchor transaction.Overall, the conversation highlights the potential optimizations and limitations of the Lightning Network's payment channel, providing insight into the inner workings of the protocol.</summary>
    <published>2015-08-31T02:24:26+00:00</published>
  </entry>
</feed>
