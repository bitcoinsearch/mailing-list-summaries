<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - A state machine.</title>
  <updated>2023-06-03T15:23:52.255543+00:00</updated>
  <author>
    <name>Rusty Russell 2015-08-21 01:33:52</name>
  </author>
  <author>
    <name>Rusty Russell 2015-08-21 01:27:22</name>
  </author>
  <author>
    <name>Rusty Russell 2015-08-21 05:32:32</name>
  </author>
  <author>
    <name>Pierre 2015-08-28 16:55:31</name>
  </author>
  <author>
    <name>Pierre 2015-08-29 12:50:44</name>
  </author>
  <author>
    <name>Rusty Russell 2015-08-31 00:34:03</name>
  </author>
  <author>
    <name>Rusty Russell 2015-08-31 01:04:21</name>
  </author>
  <author>
    <name>Pierre 2015-08-20 18:20:04</name>
  </author>
  <author>
    <name>Rusty Russell 2015-09-02 05:55:44</name>
  </author>
  <author>
    <name>Rusty Russell 2015-09-04 05:35:37</name>
  </author>
  <author>
    <name>Rusty Russell 2015-09-01 07:32:49</name>
  </author>
  <author>
    <name>Anthony Towns 2015-09-01 22:32:42</name>
  </author>
  <author>
    <name>Jasper Hugunin 2015-09-02 19:36:44</name>
  </author>
  <author>
    <name>Rusty Russell 2015-08-20 07:52:11</name>
  </author>
  <author>
    <name>Pierre 2015-08-20 18:36:09</name>
  </author>
  <author>
    <name>Anthony Towns 2015-08-29 07:42:39</name>
  </author>
  <author>
    <name>Anthony Towns 2015-08-30 00:51:54</name>
  </author>
  <author>
    <name>Anthony Towns 2015-08-31 02:24:26</name>
  </author>
  <link href="lightning-dev/Aug_2015/000142_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000144_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000145_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000154_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000157_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000164_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000165_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000137_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000180_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000183_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000177_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000178_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2015/000181_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000136_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000138_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000156_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000160_A-state-machine-.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2015/000166_A-state-machine-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - A state machine.</title>
    <updated>2023-06-03T15:23:52.255543+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-August/000142.html" rel="alternate"/>
    <summary>The Lightning Network protocol is a layer two protocol built on top of Bitcoin that enables faster and cheaper transactions by creating payment channels between users. The protocol includes various states and inputs, which are defined in the code and enumerated in state_types.h. Rusty Russell created a state machine for the wire protocol that handles all the commands and bitcoin event notifications. The protocol responds to protocol violations with an error packet and unilateral close.In addition to these states, the protocol allows for broadcasting one or more revoked commit tx or their latest commit tx at any time. The conversation between Pierre and Rusty in 2015 raised concerns regarding the order of events in the Lightning Network protocol. Rusty provided links to diagrams illustrating the different states of the protocol and outlined the various combinations of events that participants in the network could be waiting for during the closing phase of a transaction. The use of enums makes it easier to manage the different states and inputs in the protocol implementation code and allows for clear communication among developers working on the project.Rusty Russell discusses the Lightning Network's state diagram, specifically focusing on the different INIT states and suggesting that the graph should follow the protocol steps. He proposes an update to allow multiple HTLCs at once and suggests modifying PKT_UPDATE_COMPLETE_HTLC to forbid declining by having some go to WAIT_FOR_UPDATE_ACCEPT instead of WAIT_FOR_HTLC_ACCEPT. Russell finds the PRIO stuff cumbersome and suggests a constant tiebreak or having high priority given to whoever last went from WAIT_FOR_UPDATE_SIG -&gt; NORMAL. He also brings up a potential deadlock issue and proposes having a "timeout waiting for message -&gt; retry/close channel" for most of the non-NORMAL states. Lastly, Russell suggests adding a PKT_REBALANCE_VIA_BLOCKCHAIN option and provides a diagram of how it would work.In an email exchange between Rusty Russell and Anthony Towns on August 31, 2015, they discussed the possibility of updating multiple hash time-locked contracts (HTLCs) at once. Russell proposed a single PKT_UPDATE_CHANNEL instead of ADD_HTLC, COMPLETE_HTLC, TIMEOUT_HTLC, etc., but Towns was hesitant to implement the optimization at that time due to the complexity of handshaking. They also discussed CMD_CLOSE and PKT_CLOSE options during different states. Towns suggested a new state diagram for HTLCs with clearer constraints, which Russell noted currently allows declining of HTLC updates and potential deadlocks if both parties think they are high or low priority. Towns pointed out that it is not safe to assume that strangers on the network have bug-free software and the current commitment ID does not actually give priority.In an email conversation between Anthony Towns and Pierre, they discuss the initiation phase of a channel in relation to funding it, potential deadlocks, and adding a timeout waiting for messages before retrying or closing the channel. A user named Pierre asked several questions regarding a new branch called 'state' which Rusty Russell answered in detail.Finally, Rusty Russell, a contributor to the Elements Project, has created a state machine for the Lightning Network protocol. The protocol state alternates between high and low priority which resolves conflicts if both parties attempt to make an update at once. PKT_CLOSE is allowed at any time and the protocol should handle re-transmits. The state machine has been tested thoroughly and can be found on the "state" branch of Rusty's GitHub account.</summary>
    <published>2015-08-21T01:33:52+00:00</published>
  </entry>
</feed>
