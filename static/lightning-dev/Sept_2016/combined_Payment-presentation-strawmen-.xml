<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Payment presentation strawmen.</title>
  <updated>2023-06-03T16:46:14.792372+00:00</updated>
  <author>
    <name>Christian Decker 2016-09-10 21:36:12</name>
  </author>
  <author>
    <name>Rusty Russell 2016-09-06 00:49:24</name>
  </author>
  <author>
    <name>Ryan Grant 2016-09-10 11:16:07</name>
  </author>
  <author>
    <name>Ryan Grant 2016-09-11 03:16:02</name>
  </author>
  <author>
    <name>Ryan Grant 2016-09-11 04:04:34</name>
  </author>
  <link href="lightning-dev/Sept_2016/000611_Payment-presentation-strawmen-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2016/000606_Payment-presentation-strawmen-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2016/000610_Payment-presentation-strawmen-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2016/000612_Payment-presentation-strawmen-.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2016/000613_Payment-presentation-strawmen-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Payment presentation strawmen.</title>
    <updated>2023-06-03T16:46:14.792372+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2016-September/000611.html" rel="alternate"/>
    <summary>In the Lightning Network (LN), payments that are fragmented into multiple channels can be tricky to manage for the recipient of the payment, as they may require time-based heuristics to join separate LN transactions. To address this issue, reassembly protocol support should be available, and every wallet should assist with the accounting. A payment_id could be used to identify fragmented payments, which would help recipients join separate LN transactions.Christian Decker explains that splitting a payment is not a special event as long as the recipient knows the total amount they should receive and can delay the release of the secret until all funds are guaranteed. The partial payments are collated using the r-hash, and the private key release works similarly. However, there may be concerns about using the same r-hash across multiple channels as exposure to a colluding intermediary in another channel could lead to funds being pulled before they're sent onward.In a discussion about how a payee instructs a payer on how to make a payment, Rusty presents his wishlist, including minimal state required on the client and server, minimal network queries by the client, and presentation of a standard QR code for one-way communications. Rusty discusses three possibilities to address this issue: presenting only the amount and public node address, presenting one or more chains of channels from landmarks, or similar to the second but including IDs for each hop in the chain. Option C is considered more scalable, while option B would work for the first million nodes.The speaker makes an error by saying "Oops, I see my mistake," without specifying what the mistake was. They suggest holding onto the r-hash longer, which could refer to a different approach or technique in relation to hashing. The exact meaning or significance of the speaker's statement is unclear without further context or information.</summary>
    <published>2016-09-10T21:36:12+00:00</published>
  </entry>
</feed>
