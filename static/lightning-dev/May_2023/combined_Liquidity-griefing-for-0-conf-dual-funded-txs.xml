<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Liquidity griefing for 0-conf dual-funded txs</title>
  <updated>2023-06-28T03:14:16.137613+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-07 00:41:12+00:00</name>
  </author>
  <author>
    <name>Matt Morehouse 2023-05-09 17:38:55+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-07 22:54:50+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-10 00:07:06+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2023-05-10 09:15:25+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2023-05-05 16:21:50+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2023-06-07 09:46:36+00:00</name>
  </author>
  <author>
    <name>Matt Morehouse 2023-05-09 17:38:55+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-07 22:54:50+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-05-10 00:07:06+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2023-05-10 09:15:25+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2023-05-05 16:21:50+00:00</name>
  </author>
  <link href="lightning-dev/June_2023/003974_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003938_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003931_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003942_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003943_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003920_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/June_2023/003975_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003938_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003931_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003942_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003943_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <link href="lightning-dev/May_2023/003920_Liquidity-griefing-for-0-conf-dual-funded-txs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Liquidity griefing for 0-conf dual-funded txs</title>
    <updated>2023-06-28T03:14:16.137714+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003974.html" rel="alternate"/>
    <summary>The Lightning Network has introduced dual-funded transactions, which have raised challenges related to liquidity griefing attacks from malicious peers. One proposed solution is to not lock UTXOs used in dual funded transactions, allowing them to be automatically re-used in another instance of the protocol if a remote node goes silent. However, this approach falls short when using 0-conf as accidentally double-spending a 0-conf channel can result in loss of funds. Nodes offering 0-conf services also need to ensure that the UTXOs they use for 0-conf are isolated from those used for non-0-conf. This can be addressed by using a "soft lock" when selecting UTXOs for non-0-conf funding attempts.Bastien Teinturier, a member of the Lightning Network development team, raised concerns about protecting against liquidity griefing attacks in dual funded transactions. The issue arises when using 0-conf, as accidentally double-spending a channel can result in the loss of funds for one of the peers. To address this, Bastien suggests never locking UTXOs used in dual funded transactions and proposes locking them after tx_completes have been exchanged.The discussion also touches on the safety of dual-funded 0-conf transactions. The author suggests using swap-in-potentiam addresses with the acceptor to prevent liquidity griefing. However, trust is still required between the initiator and the acceptor.The email thread further delves into the challenge of offering 0-conf services while protecting against liquidity griefing attacks. The dual funding protocol involves exchanging data about UTXOs and broadcasting the resulting transaction. One solution proposed is to never lock UTXOs used in dual-funded transactions. However, when using 0-conf, accidental double-spending remains a concern. Nodes that offer 0-conf channels must ensure that the UTXOs used for 0-conf are isolated from those used for non-0-conf. Eclair, an open-source Lightning Network implementation, currently uses opportunistic 0-conf but faces issues with mixed funding attempts.In another email, Bastien Nocera proposes adding 0-conf support to Lightning's `pay` command. However, some developers express security concerns about implementing 0-conf in Lightning. The discussion on the pull request is ongoing.Overall, the introduction of dual funded transactions in the Lightning Network has presented challenges in protecting against liquidity griefing attacks. The use of 0-conf raises additional concerns, and efforts are being made to find solutions and improve the situation for nodes offering 0-conf services.</summary>
    <published>2023-06-07T00:41:12+00:00</published>
  </entry>
</feed>
