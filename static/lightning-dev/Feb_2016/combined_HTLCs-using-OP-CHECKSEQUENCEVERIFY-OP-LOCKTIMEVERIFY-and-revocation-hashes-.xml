<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - HTLCs using OP_CHECKSEQUENCEVERIFY/OP_LOCKTIMEVERIFY and revocation hashes.</title>
  <updated>2023-06-03T15:04:06.113430+00:00</updated>
  <author>
    <name>Rusty Russell 2015-07-06 06:41:34</name>
  </author>
  <author>
    <name>CJP 2015-07-07 19:51:54</name>
  </author>
  <author>
    <name>Adam Back 2015-07-07 19:59:28</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-24 00:54:05</name>
  </author>
  <author>
    <name>CJP 2016-02-08 22:07:53</name>
  </author>
  <author>
    <name>Anthony Towns 2016-02-10 16:50:49</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-08 00:32:34</name>
  </author>
  <author>
    <name>Anthony Towns 2015-07-23 05:07:33</name>
  </author>
  <author>
    <name>Anthony Towns 2016-02-09 08:59:56</name>
  </author>
  <author>
    <name>CJP 2016-02-09 19:48:59</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-09 23:14:46</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-10 01:15:16</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-08 23:39:12</name>
  </author>
  <author>
    <name>CJP 2016-02-11 21:00:32</name>
  </author>
  <link href="lightning-dev/July_2015/000021_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000024_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000025_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000056_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000433_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000441_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000027_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000054_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000437_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000438_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000439_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000440_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000434_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000442_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - HTLCs using OP_CHECKSEQUENCEVERIFY/OP_LOCKTIMEVERIFY and revocation hashes.</title>
    <updated>2023-06-03T15:04:06.113430+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000021.html" rel="alternate"/>
    <summary>The Lightning Network is a second-layer scaling solution designed to improve the scalability of the Bitcoin network. It requires hash time-locked contracts (HTLCs) to function, with both commitment transactions getting an additional output per HTLC. These outputs are spendable under four conditions: the recipient knows the R value; the HTLC has timed out; the HTLC has been revoked; or the commit transaction has been revoked. Private keys were originally used as a means of revoking transactions, but "revocation preimages" are now used instead, which is considered an improvement. The design change allows for more efficiency and ease of use.In a hypothetical scenario involving two parties, Alice and Eve, connected with two channels, a potential problem with the Lightning Network was identified where Eve could steal funds from Alice. However, since revocation pre-images have been exchanged, Alice can immediately spend the HTLC using either the HTLC-TIMEOUT &amp; SIG-PAYER clause or the REVOCATION-E &amp; SIG A clause. The email thread further discusses the question of which times out first, Alice's CSV or Eve's CLTV, and concludes that Alice's CSV should be the first to time out. Finally, the thread assumes that the HTLC timeout is T0 + 1 day on the channel where Eve receives, T0 + 2 days on the channel where Eve sends, and states that Alice's CSV should have a delay less than one day.Rusty Russell presented four possible choices for closing a payment channel: keeping the channel open, having the other party close it unilaterally, closing it unilaterally oneself, or cooperatively closing it together. He argues that cooperative closing is preferred due to the disadvantages of OP_CSV delay in unilateral closing. In an email from Rusty Russell on July 6, 2015, the commitment transaction of Lightning Network was explained. Each side maintains a commitment transaction with two outputs, one paying to self and the other paying to the other side. The last two failure modes are separate from each other because HTLCs have different lifetimes from commit transactions.Rusty Russell generalized the concept of revocable transactions further by using a hypercube multi-dimensional array of preimages to reduce setup time. In a post, he explains that all outputs to A in A's commit transaction must be delayed via OP_CSV, including HTLC outputs. He suggests longer delays to catch the use of revoked commit transactions, while shorter HTLC timeout increments lock up funds for shorter periods.In a discussion with Anthony Towns, they identified four options for closing channels: keeping the channel open, unilateral closure by either party, or cooperative closure. They ranked them as d &gt; b &gt; c. Rusty expressed concern over the party going offline and paying the least penalty while their counterparties have their funds tied up. He proposes delaying all outputs to A in A's commit transaction via OP_CSV, including HTLC outputs, to avoid theft escalation caused by downtime/DoS attack. The Lightning Network's HTLC system has been subject to potential issues, and Rusty proposed delaying all non-revocation paths in HTLCs and straight payment outputs to prevent the problem. The email thread also discussed the problem of intertwinement of channel balance and collateral and suggested implementing both types of solutions if there is demand for it, using them side by side in Amiko Pay.</summary>
    <published>2015-07-06T06:41:34+00:00</published>
  </entry>
</feed>
