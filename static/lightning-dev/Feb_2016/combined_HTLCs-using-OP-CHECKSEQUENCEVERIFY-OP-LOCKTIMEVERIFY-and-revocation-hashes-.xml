<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - HTLCs using OP_CHECKSEQUENCEVERIFY/OP_LOCKTIMEVERIFY and revocation hashes.</title>
  <updated>2023-06-01T23:21:17.004805+00:00</updated>
  <author>
    <name>Rusty Russell 2015-07-08 00:32:34</name>
  </author>
  <author>
    <name>Anthony Towns 2015-07-23 05:07:33</name>
  </author>
  <author>
    <name>Anthony Towns 2016-02-09 08:59:56</name>
  </author>
  <author>
    <name>CJP 2016-02-09 19:48:59</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-09 23:14:46</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-10 01:15:16</name>
  </author>
  <author>
    <name>Rusty Russell 2016-02-08 23:39:12</name>
  </author>
  <author>
    <name>CJP 2016-02-11 21:00:32</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-06 06:41:34</name>
  </author>
  <author>
    <name>CJP 2015-07-07 19:51:54</name>
  </author>
  <author>
    <name>Adam Back 2015-07-07 19:59:28</name>
  </author>
  <author>
    <name>CJP 2016-02-08 22:07:53</name>
  </author>
  <author>
    <name>Anthony Towns 2016-02-10 16:50:49</name>
  </author>
  <author>
    <name>Rusty Russell 2015-07-24 00:54:05</name>
  </author>
  <link href="lightning-dev/July_2015/000027_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000054_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000437_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000438_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000439_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000440_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000434_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000442_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000021_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000024_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000025_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000433_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/Feb_2016/000441_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2015/000056_HTLCs-using-OP-CHECKSEQUENCEVERIFY-OP-LOCKTIMEVERIFY-and-revocation-hashes-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - HTLCs using OP_CHECKSEQUENCEVERIFY/OP_LOCKTIMEVERIFY and revocation hashes.</title>
    <updated>2023-06-01T23:21:17.004805+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-July/000027.html" rel="alternate"/>
    <summary>The Lightning Network paper introduced the concept of revocable transactions using temporary private keys or pre-signed 2-of-2 transactions, but hashes are even easier and more efficient. Rusty Russell further generalized this idea by using a hypercube multi-dimensional array of preimages to reduce setup time. The commitment transaction of Lightning Network was explained, where both sides maintain a commitment transaction with two outputs, one paying to self and the other paying to the other side. Both commitment transactions get an additional output per Hash Time-Locked Contract (HTLC) required for HTLCs that are spendable under four conditions. Rusty Russell presents four possible choices for closing a payment channel: keeping the channel open, having the other party close it unilaterally, closing it unilaterally oneself, or cooperatively closing it together. He argues that cooperative closing is better than unilateral closing due to the OP_CSV delay, which has some disadvantages compared to cooperative closing. He suggests implementing an OP_CSV on both sides of HTLCs to threaten to lock up the other party's funds if they don't pay a certain amount for a cooperative close.Rusty Russell suggests delaying all outputs to A in A's commit transaction via OP_CSV, including HTLC outputs, to prevent theft escalation. The intertwinement of channel balance and collateral is a recurring problem that needs documentation to address its recurrence. In order to generate Hash Time-Locked Contracts for Lightning Network, each commitment transaction gets an additional output. We need to ensure delays in the cases where payment can go to A so that B has a chance to steal the funds if the HTLC or commitment tx has been revoked.Private keys were mentioned in the original draft paper as a means of revoking transactions, but now "revocation preimages" are used instead of sending pubkeys. The Lightning Network uses a hypercube multi-dimensional array of preimages to replace the need for private keys in revoking transactions. This is seen as an improvement, but there are potential problems. An old email thread identifies a scenario where Eve could steal funds from Alice through a payment to herself routed through Alice with two channels without revealing the transaction R value as a payee. The author suggests adding an OP_CSV to the R-VALUE &amp; SIG-PAYEE clause but acknowledges it would break its legitimate use.In another email thread, CJP provides a detailed explanation of a hypothetical scenario involving two parties, Alice and Eve, connected with two channels. The channels have delay parameters for both channels set at the value "D". The HTLCs are explained in detail, and the email thread discusses which times out first, Alice's CSV or Eve's CLTV. Finally, the thread assumes that the HTLC timeout is T0 + 1 day on the channel where Eve receives, T0 + 2 days on the channel where Eve sends, and states that Alice's CSV should have a delay less than one day.In a message exchange between Anthony Towns and Rusty Russell, they discuss the concept of Hash Time-Locked Contracts (HTLCs) required for Lightning Network to be a network. Both parties maintain a commitment transaction with two outputs, one paying to self and the other paying to the other side. In order to generate HTLCs, each commitment transaction gets an additional output per HTLC. This output is spendable under four conditions: the recipient knows the R value; the HTLC has timed out; the HTLC has been revoked; or the commit transaction has been revoked. Rusty explains that the last two failure modes are separate from each other because HTLCs have different lifetimes from commit transactions.</summary>
    <published>2015-07-08T00:32:34+00:00</published>
  </entry>
</feed>
