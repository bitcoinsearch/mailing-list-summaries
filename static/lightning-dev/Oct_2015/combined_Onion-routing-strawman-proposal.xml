<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Onion routing strawman proposal</title>
  <updated>2023-06-03T15:36:36.795167+00:00</updated>
  <author>
    <name>Rusty Russell 2015-10-02 05:48:39</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-04 05:57:17</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-05 15:02:10</name>
  </author>
  <author>
    <name>Rusty Russell 2015-10-06 01:48:11</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-06 05:22:36</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-06 14:01:34</name>
  </author>
  <author>
    <name>Rusty Russell 2015-10-06 22:35:01</name>
  </author>
  <author>
    <name>Richard Kiss 2015-10-03 18:02:39</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-05 14:49:00</name>
  </author>
  <author>
    <name>Anthony Towns 2015-10-03 16:38:56</name>
  </author>
  <author>
    <name>Rusty Russell 2015-10-06 01:49:14</name>
  </author>
  <link href="lightning-dev/Oct_2015/000247_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000250_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000252_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000254_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000255_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000256_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000257_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000249_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000251_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000248_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <link href="lightning-dev/Oct_2015/000253_Onion-routing-strawman-proposal.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Onion routing strawman proposal</title>
    <updated>2023-06-03T15:36:36.795167+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2015-October/000247.html" rel="alternate"/>
    <summary>In October 2015, Rusty Russell shared test onion routing code on GitHub and requested a crypto review. The code included AES128 counter mode encryption, HMAC using SHA256, and Bitcoin's EC with ECDH. Anthony Towns successfully implemented the decoding/forwarding process using pyelliptic, a Python library for elliptic curve cryptography. Rusty made changes to the branch on Github, including disabling flip_key() and making the 02/03 prefix explicit. They discussed creating an RFC or wiki to document the Lightning protocol and technology decisions.Richard Kiss and aj discussed a problem with libsec256k1 where SHA256(y||x) is run with y being '\x02' for even values of y and '\x03' for odd values of y. Richard suggested using his open source library pycoin to get Y from X. However, aj still needs to know whether to set is_even True or False. To address this, aj implemented ECDH directly by performing a single EC_POINT_mul operation.The Lightning Network project has implemented test onion routing code in a fixed 3840 bytes format. Lightning nodes are identified by the full 512 bit (or 257 bit?) public key used for routing unlike normal bitcoin pay2pubkey transactions. Anthony Towns submitted a pull request to implement export-friendly encryption mode, which Rusty merged into the project. Rusty also reworked test_onion and Makefile test to separate generate and decode, and suggested mixing in the python version for these files too.</summary>
    <published>2015-10-02T05:48:39+00:00</published>
  </entry>
</feed>
