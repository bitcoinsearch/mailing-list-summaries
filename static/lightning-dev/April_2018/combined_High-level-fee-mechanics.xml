<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - High level fee mechanics</title>
  <updated>2023-06-03T18:33:39.173476+00:00</updated>
  <author>
    <name>Thomas Steenholdt 2018-04-10 15:02:39</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-12 04:49:23</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-04-12 20:37:17</name>
  </author>
  <author>
    <name>Thomas Steenholdt 2018-03-19 11:30:35</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-11 09:17:15</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-04-11 16:00:47</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-18 23:48:57</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-11 03:04:09</name>
  </author>
  <author>
    <name>Alejandro Ranchal Pedrosa 2018-04-11 08:01:02</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-13 13:26:15</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-04-13 16:13:18</name>
  </author>
  <author>
    <name>Thomas Steenholdt 2018-03-18 22:24:07</name>
  </author>
  <link href="lightning-dev/April_2018/001154_High-level-fee-mechanics.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001171_High-level-fee-mechanics.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001174_High-level-fee-mechanics.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001101_High-level-fee-mechanics.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001160_High-level-fee-mechanics.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001164_High-level-fee-mechanics.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001099_High-level-fee-mechanics.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001156_High-level-fee-mechanics.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001158_High-level-fee-mechanics.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001177_High-level-fee-mechanics.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001179_High-level-fee-mechanics.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001098_High-level-fee-mechanics.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - High level fee mechanics</title>
    <updated>2023-06-03T18:33:39.174474+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001154.html" rel="alternate"/>
    <summary>In a conversation between Benjamin Mord and ZmnSCPxj, they discuss the importance of considering short and long-term goals when building systems. They highlight the economic efficiency of Lightning operation and the critical nature of pricing as a signaling mechanism that impacts channel lifetime. Mord suggests adding an optional exponential component to permit a price exponent which may be set higher than 1. However, ZmnSCPxj notes that larger payments have a lower chance of successfully propagating through the network and that adding a nonlinear component would be difficult without the proposed AMP proposal. ZmnSCPxj proposes the idea of channels having the option to publicize their balances in order to improve routing performance and scalability in a large network. However, revealing channel balances would compromise privacy since each balance represents the amount of money each peer owns on that channel. Furthermore, adding a nonlinear component to the protocol would be difficult as there is no provision for it in the protocol. They also touch on the power law assumption of transaction size distribution and the more general approach to estimating channel lifespan. The writer seeks information on the mechanics of Lightning fees, particularly in the case of routed payments. They ask several questions including how A knows ahead of time the fees on B and C, how A knows the amount of fees that need to be added to the payment to cover all fees, if D is aware of the full amount including fees, and how the fees are actually claimed. ZmnSCPxj explains how fees are established, announced and ultimately claimed in a payment over Lightning Network, using node gossip and `channel_update` messages. The channel balance of each peer is not revealed by node gossip, as it represents the amount of money each peer owns on that channel, and any changes to that balance represent a send/receive on that channel. Finally, the earlier AMP proposal by roasbeef is back-compatible but does not support a proof-of-payment compatible with ZKCP protocols. Mord expresses skepticism towards discrete logarithm's long-term security and views scriptless scripts as being dangerously seductive. Despite this, he suggests that it is worth assuming that we will eventually want and need alternative methods of achieving AMP in order to think strategically about how fee dynamics can improve efficiency over time.</summary>
    <published>2018-04-10T15:02:39+00:00</published>
  </entry>
</feed>
