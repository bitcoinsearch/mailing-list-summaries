<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Towards a gridlike Lightning Network</title>
  <updated>2023-06-02T02:35:14.189945+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-03-20 03:19:02</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-24 12:07:52</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-04-18 23:56:17</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-04-19 18:21:01</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-20 03:24:40</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-03-23 15:29:19</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-19 02:04:52</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-04-20 20:43:20</name>
  </author>
  <link href="lightning-dev/March_2018/001108_Towards-a-gridlike-Lightning-Network.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001118_Towards-a-gridlike-Lightning-Network.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001204_Towards-a-gridlike-Lightning-Network.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001206_Towards-a-gridlike-Lightning-Network.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001208_Towards-a-gridlike-Lightning-Network.xml" rel="alternate"/>
  <link href="lightning-dev/March_2018/001117_Towards-a-gridlike-Lightning-Network.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001205_Towards-a-gridlike-Lightning-Network.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001216_Towards-a-gridlike-Lightning-Network.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Towards a gridlike Lightning Network</title>
    <updated>2023-06-02T02:35:14.189945+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-March/001108.html" rel="alternate"/>
    <summary>ZmnSCPxj, a member of the Lightning-dev mailing list, has suggested an algorithm to identify a peer node for connecting and funding a channel in the Lightning Network. The algorithm uses a hash algorithm and starts with a 32-bit number to filter nodes based on their public key. ZmnSCPxj's idea of organizing the Lightning Network using cyclic superhubs requires coordination to set up cyclic superhubs. However, he suggests that coordination is needed only to identify peers with which one forms superhubs. ZmnSCPxj presents an algorithm that given a set of nodes extracted from node gossip, returns a peer to try connecting and funding a channel to. It starts with a 32-bit number i = 0 and for each node, gets hash=H(i || pubkey), where H is some standard hash algorithm, and pubkey is the public key of the node. The algorithm then performs successive filtering and while the set is larger than 2 nodes, successively compares high bits.In a conversation between Benjamin and ZmnSCPxj, they discuss the identification of a 'neighborhood' and establishment of an order within that neighborhood for the purpose of cycle formation. Bloom filters are used to define a neighborhood as a valuable contribution in maintaining useful competition and redundancy. Establishing a unique ordering for cycle establishment within a neighborhood is a much more ambitious undertaking, which becomes brittle when the network is dynamic.Lastly, there are concerns about making cycle establishment within a neighborhood robust in a dynamic context. ZmnSCPxj suggests a heuristic where the probability of establishing a channel is proportional to the number of bits in common in the pubkey hash. He also notes that the algorithm does not consider what happens when a new member joins or an existing member wishes to leave and there is no way to inform this. Intermediate nodes already know two hops. Nodes could track the routes of payments that flow through their channels and could spot fees that seem both large and popular, and could use this information to identify under-served nodes to which a direct channel might be in order.</summary>
    <published>2018-03-20T03:19:02+00:00</published>
  </entry>
</feed>
