<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - QR of node information</title>
  <updated>2023-06-02T02:40:19.291185+00:00</updated>
  <author>
    <name>Corn√© Plooy 2018-04-09 09:47:51</name>
  </author>
  <author>
    <name>Rusty Russell 2018-04-10 23:47:49</name>
  </author>
  <author>
    <name>Robert Olsson 2018-04-07 15:17:22</name>
  </author>
  <author>
    <name>Igor Cota 2018-04-09 11:06:54</name>
  </author>
  <author>
    <name>Robert Olsson 2018-04-12 09:56:11</name>
  </author>
  <link href="lightning-dev/April_2018/001143_QR-of-node-information.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001169_QR-of-node-information.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001139_QR-of-node-information.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001144_QR-of-node-information.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001172_QR-of-node-information.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - QR of node information</title>
    <updated>2023-06-02T02:40:19.291185+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001143.html" rel="alternate"/>
    <summary>In a forum, Robert Olsson posted about not being able to find a bolt regarding the QR code of node at ip:port. He suggested that there should be support for bech32 nodeid's to keep the QR small and avoid bulky QR codes. The writer seeks support for bech32 nodeid's to reduce the size of QR codes and believes that standardization is necessary to ensure that all wallets support it from the start. The suggested format is lightning:ln1bech32nodeid/ipnumber/port where /port is optional if port is 9735.In response to this post, a discussion took place on the Lightning-dev mailing list regarding the QR code format for node ID at IP:port. Igor Cota stated that not using hex would save 33 bytes and he intends to support both approaches. Bech32 is a Bitcoin address format that is designed to make small QR codes because of the ability to create text-mode QR-codes which are much smaller. It may be best to have the UX ask the user if they want to open a new channel directly to the store or to a randomly selected goat farmer on the other side of the world that might have a well-funded path - this could be optional. If a direct channel is used, the invoice already contains the node-ID so your wallet can establish a properly sized connection depending on your payment history, perhaps automatically even after successful payments via other routes. A proposed bolt12 could make this possible but reliance on DNSSEC might be necessary to ensure that mcdonalds.com isn't hijacked by someone that wants to prevent using LN.Regarding sizes of QR codes, there is a reckless PoC-implementation of current hex, Bech32, and bolt12 QR-codes so you can compare the sizes. Rusty Russell anticipates a move away from "manually connect to node" and this wart will be less visible. A Bech32 'ln1' encoding could be created, but it would be 62 chars vs. 66.</summary>
    <published>2018-04-09T09:47:51+00:00</published>
  </entry>
</feed>
