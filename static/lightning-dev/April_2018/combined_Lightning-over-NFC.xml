<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning over NFC</title>
  <updated>2023-06-03T18:42:46.699179+00:00</updated>
  <author>
    <name>Igor Cota 2018-04-05 09:46:32</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-05 15:39:58</name>
  </author>
  <author>
    <name>Corné Plooy 2018-04-05 15:52:27</name>
  </author>
  <author>
    <name>Igor Cota 2018-04-06 06:10:09</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-05 16:53:52</name>
  </author>
  <link href="lightning-dev/April_2018/001132_Lightning-over-NFC.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001133_Lightning-over-NFC.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001134_Lightning-over-NFC.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001137_Lightning-over-NFC.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001136_Lightning-over-NFC.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning over NFC</title>
    <updated>2023-06-03T18:42:46.699179+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001132.html" rel="alternate"/>
    <summary>Igor Cota, a Lightning developer, has been experimenting with using Lightning for retail payments on his Android device. He envisions a system that is instantaneous like contactless bank cards and encodes a fancy HTML receipt in bolt11 for future reference. Igor has been using c-lightning on Android and NFC-enabled phones for this purpose. There are two basic ways to use NFC enabled phones: passive tag readers and card emulation mode. Card emulation mode enables two-way communication and an ad hoc connection to the lightning network. After some handshaking, the phone can tell the terminal that it wants to connect to Lightning via NFC. All communication between these two lightning nodes can be done over NFC or even Bluetooth.A MIME type (application/lightning) and an NFC application id (LIGHTNING) have been settled on along with a simple protocol to forward socket data. However, ZmnSCPxj raised concerns about censorship and direct payment channels. For practical mobile devices, communication over a secure channel to a trusted server is preferred, but the payment terminal would provide a connection to the Internet-in-general rather than to the payment terminal node. Initiating a payment requires direct communication with whoever you have a direct channel to, and if the mobile device can communicate only with the payment terminal, then it can only pay using channels with the only node it has a connection to.In response to Corné Plooy's suggestion for a set-up where the payer has an authenticated connection to a trusted server through the Internet connection provided by the payee, ZmnSCPxj suggests communicating over a secure channel to a trusted server is how he imagines most practical mobile devices would work. It would be great if standards could be agreed upon for interoperability. Igor personally prefers this kind of set-up because he sees cell phones as a huge privacy issue; users are continuously transmitting their rough location to the network.</summary>
    <published>2018-04-05T09:46:32+00:00</published>
  </entry>
</feed>
