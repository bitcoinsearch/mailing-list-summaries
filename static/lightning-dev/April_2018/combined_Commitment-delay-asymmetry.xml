<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Commitment delay asymmetry</title>
  <updated>2023-06-02T02:46:24.230457+00:00</updated>
  <author>
    <name>Rusty Russell 2018-04-13 00:02:40</name>
  </author>
  <author>
    <name>Jim Posen 2018-04-13 22:10:16</name>
  </author>
  <author>
    <name>Daniel McNally 2018-04-14 04:17:18</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-15 13:35:55</name>
  </author>
  <author>
    <name>Jim Posen 2018-04-15 18:37:05</name>
  </author>
  <author>
    <name>Daniel McNally 2018-04-15 19:52:13</name>
  </author>
  <author>
    <name>Ariel Lorenzo-Luaces 2018-04-15 20:00:38</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-16 03:52:48</name>
  </author>
  <author>
    <name>Jim Posen 2018-04-12 17:04:59</name>
  </author>
  <author>
    <name>Daniel McNally 2018-04-16 04:39:20</name>
  </author>
  <author>
    <name>Jim Posen 2018-04-16 04:42:49</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-16 11:56:16</name>
  </author>
  <link href="lightning-dev/April_2018/001175_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001181_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001182_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001183_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001185_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001186_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001187_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001189_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001173_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001190_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001191_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001193_Commitment-delay-asymmetry.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Commitment delay asymmetry</title>
    <updated>2023-06-02T02:46:24.230457+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001175.html" rel="alternate"/>
    <summary>The Lightning Network is currently discussing ways to prevent denial-of-service (DOS) attacks and incentivize honest nodes. Various proposals have been put forward, including a symmetric CSV delay and scaling the delay of the other side's closure based on the balance of the channel. However, concerns have been raised that these solutions may create new attack vectors or still allow for passive attacks.To address the issue of asymmetric channel closure, a proposal suggests time-locking the to_remote output by the to_remote_delay to make the consequence of an on-chain settlement symmetric. This would shift the game from chicken to a tragedy of the commons. However, some argue that this could be easier to perform an active attack than the current DOS attack.One example proposes applying a delay on the remote output based on the balance distribution to avoid a misbehaving node from unilaterally closing channels where it has little or no balance, thereby locking up the funds of the remote node at virtually no cost to itself. The delay on the remote output would scale from zero delay up to the same delay as the side unilaterally closing the channel, which would improve the situation.Another proposal suggests scaling the delay in proportion to the time-money lost by the broadcasting party. The delay for the local output is always the to_local_delay, but the delay on the remote output could be assigned using a better rule of min(to_remote_delay, to_local_delay * to_local_value / to_remote_value). This ensures that the delay is never worse than what the opposite side would get by broadcasting themselves.In terms of setting up a channel, the commitment delays do not need to be the same in both commitment transactions. An attacker should always prefer to become unresponsive rather than broadcast the commitment themselves. In the symmetric-delay world, an attacker can trigger the lockup period immediately in the active attack. However, the risk is that the other side may decide not to close the channel unilaterally anyway.The suggestion is to make the delays equal as in the original proposal, with each side having its own `to_self_delay` that currently applies to the other side. However, there is a concern that the new attack may be easier to perform, and there is no guarantee that it will eliminate the previous attack vector. Overall, the Lightning Network is exploring various solutions to mitigate DOS attacks and incentivize honest nodes while considering potential new attack vectors.</summary>
    <published>2018-04-13T00:02:40+00:00</published>
  </entry>
</feed>
