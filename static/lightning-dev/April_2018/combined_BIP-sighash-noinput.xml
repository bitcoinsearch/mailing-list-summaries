<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP sighash_noinput</title>
  <updated>2023-06-02T03:15:06.852459+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2018-05-09 23:01:39</name>
  </author>
  <author>
    <name>Christian Decker 2018-05-15 14:28:22</name>
  </author>
  <author>
    <name>Bram Cohen 2018-05-07 20:51:11</name>
  </author>
  <author>
    <name>Christian Decker 2018-07-03 12:05:09</name>
  </author>
  <author>
    <name>Luke Dashjr 2018-07-03 12:13:44</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-07-11 07:43:49</name>
  </author>
  <author>
    <name>Rusty Russell 2018-07-13 00:04:14</name>
  </author>
  <author>
    <name>Christian Decker 2018-04-30 16:29:53</name>
  </author>
  <author>
    <name>Dario Sneidermanis 2018-04-30 18:25:42</name>
  </author>
  <author>
    <name>Christian Decker 2018-05-07 19:40:46</name>
  </author>
  <author>
    <name>Anthony Towns 2018-05-08 14:40:21</name>
  </author>
  <author>
    <name>William Casarin 2018-07-03 11:54:37</name>
  </author>
  <author>
    <name>Peter Todd 2018-07-09 09:41:39</name>
  </author>
  <author>
    <name>Rusty Russell 2018-07-03 04:56:53</name>
  </author>
  <author>
    <name>Rusty Russell 2018-05-09 23:04:58</name>
  </author>
  <author>
    <name>Anthony Towns 2018-05-14 09:23:29</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-07-02 18:11:54</name>
  </author>
  <author>
    <name>Peter Todd 2018-07-03 05:21:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-07-03 06:58:36</name>
  </author>
  <author>
    <name>Gregory Maxwell 2018-07-03 23:45:22</name>
  </author>
  <author>
    <name>DING FENG 2018-07-11 04:37:27</name>
  </author>
  <link href="lightning-dev/May_2018/001265_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001282_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001288_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001340_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001341_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001357_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001359_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001224_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001225_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001242_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001253_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001339_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001354_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001334_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001266_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001274_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001333_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001336_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001338_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001345_BIP-sighash-noinput.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001356_BIP-sighash-noinput.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP sighash_noinput</title>
    <updated>2023-06-02T03:15:06.852459+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-May/001265.html" rel="alternate"/>
    <summary>On April 30, 2018, Christian Decker proposed a new sighash flag called `SIGHASH_NOINPUT` on the bitcoin-dev mailing list. The proposal aimed to remove the commitment to the previous output and would be useful for Lightning Network channels. It could also enable simple watch-towers so that the need to watch the blockchain for channel closures is outsourced. However, concerns were raised about the potential insecurity of the feature.Aj suggested using a hypothetical "OP_CHECK_SIG_FOR_SINGLE_USE_KEY" opcode instead of _NOINPUT to mitigate potential issues. Meanwhile, Towns suggested making _NOINPUT a flag to a signature for a hypothetical "OP_CHECK_SIG_FOR_SINGLE_USE_KEY" opcode instead. Gregory Maxwell and Rusty Russell agreed with adding a suffix or prefix to the term SIGHASH_NOINPUT, potentially calling it SIGHASH_NOINPUT_UNSAFE or SIGHASH_REUSE_VULNERABLE, respectively.The implementation of SIGHASH_NOINPUT is expected to enable the Lightning Network to function more efficiently by allowing the creation of lightning channels without broadcasting to the network. This will result in cost savings for users and reduce the blockchain's load. The proposal aims to eliminate transaction malleability issues and improve privacy. However, there are concerns that the proposed feature poses a risk of losing money, especially if one uses the same key for multiple inputs and signs one of them with _NOINPUT.A debate is ongoing within the Bitcoin community regarding the potentially risky `SIGHASH_REUSE_VULNERABLE` flag. While some developers argue it is necessary for certain use cases such as Lightning Network channels, others like Peter Todd believe it poses a significant risk for double-spending attacks. Another concern has been raised by a junior developer and Bitcoin user regarding the use of "SIGHASH_NOINPUT" which could make reuse addresses more dangerous. Luke Dashjr does not believe that address reuse should be assumed safe or works and intends to possibly use "SIGHASH_NOINPUT" for ordinary Bitcoin transactions in a wallet he is writing, which explicitly does not support address reuse. The deployment part of the proposal is left vague on purpose to avoid colliding with any other proposals. It should be possible to introduce it by bumping the segwit script version and adding the new behavior. Overall, the proposal is very interesting and it is believed that there are many more applications that can be enabled with this change.</summary>
    <published>2018-05-09T23:01:39+00:00</published>
  </entry>
</feed>
