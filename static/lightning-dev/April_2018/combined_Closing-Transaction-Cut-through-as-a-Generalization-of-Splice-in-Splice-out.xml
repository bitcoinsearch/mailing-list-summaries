<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Closing Transaction Cut-through as a Generalization of Splice-in/Splice-out</title>
  <updated>2023-06-02T02:43:44.647317+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-04-13 13:10:56</name>
  </author>
  <author>
    <name>Christian Decker 2018-04-11 17:38:47</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-10 09:44:15</name>
  </author>
  <link href="lightning-dev/April_2018/001176_Closing-Transaction-Cut-through-as-a-Generalization-of-Splice-in-Splice-out.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001165_Closing-Transaction-Cut-through-as-a-Generalization-of-Splice-in-Splice-out.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001153_Closing-Transaction-Cut-through-as-a-Generalization-of-Splice-in-Splice-out.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Closing Transaction Cut-through as a Generalization of Splice-in/Splice-out</title>
    <updated>2023-06-02T02:43:44.647317+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001176.html" rel="alternate"/>
    <summary>ZmnSCPxj and Christian discuss the connection between channel factories, with ZmnSCPxj suggesting that a way to invalidate a prior funding transaction is necessary for reseat without needing a cut-through. He proposes introducing a `reseatchannel` command at c-lightning RPC level to transfer remaining funds of a channel from one peer to another. The `multifundchannel` creates a new channel factory, while `reseatchannel` is an off-chain channel reorganization request to the factory.The proposed alternative to splice-in/splice-out ("channel top-up") is implementing a "cut-through" for a channel close transaction. Both sides would provide signed normal transactions to create a new close transaction that cuts through the original close transaction and additional normal transactions. This generalization would allow reseating a channel to another peer using the closing transaction cut-through in a single on-chain transaction if both peers and the node belong to the same channel factory.</summary>
    <published>2018-04-13T13:10:56+00:00</published>
  </entry>
</feed>
