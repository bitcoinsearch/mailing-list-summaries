<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Closing Transaction Cut-through as a Generalization of Splice-in/Splice-out</title>
  <updated>2023-06-03T18:45:33.671699+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-04-10 09:44:15</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-13 13:10:56</name>
  </author>
  <author>
    <name>Christian Decker 2018-04-11 17:38:47</name>
  </author>
  <link href="lightning-dev/April_2018/001153_Closing-Transaction-Cut-through-as-a-Generalization-of-Splice-in-Splice-out.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001176_Closing-Transaction-Cut-through-as-a-Generalization-of-Splice-in-Splice-out.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001165_Closing-Transaction-Cut-through-as-a-Generalization-of-Splice-in-Splice-out.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Closing Transaction Cut-through as a Generalization of Splice-in/Splice-out</title>
    <updated>2023-06-03T18:45:33.671699+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-April/001153.html" rel="alternate"/>
    <summary>The proposed alternative to a splice-in/splice-out is a "cut-through" for a channel close transaction. This allows both sides to provide signed normal transactions that spend the outputs and cooperatively create a new close transaction that cuts through the original close transaction and the additional normal transactions. This generalization is useful if one wants to "reseat" a channel to another peer, which could be done off-chain if both peers and the node belong to the same channel factory.ZmnSCPxj suggests presenting a `reseatchannel` command at c-lightning RPC level to transfer the remaining funds of a channel from one peer to a new channel to another. `Multifundchannel` creates a new channel factory with this node and all nodes listed in the multi-fund operation as members of the factory. `Reseatchannel` is an offchain channel reorganization request to the factory.The proposal suggests using tx formatted messages to transport the intent, reconnecting to the idea of cut-through, combining multiple transactions into one. Although this may complicate state tracking, it is believed that eventually, transactions will assume multiple roles anyway.</summary>
    <published>2018-04-10T09:44:15+00:00</published>
  </entry>
</feed>
