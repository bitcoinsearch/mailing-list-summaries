<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Scriptless Scripts with ECDSA</title>
  <updated>2023-06-03T18:50:57.890182+00:00</updated>
  <author>
    <name>Greg Sanders 2018-05-08 12:58:33</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-05-08 13:09:05</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-05-08 13:31:51</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-05-08 22:02:46</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-04-30 04:23:11</name>
  </author>
  <author>
    <name>Jim Posen 2018-05-08 15:54:58</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-05-09 03:59:01</name>
  </author>
  <author>
    <name>Pedro Moreno Sanchez 2018-04-26 17:13:34</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-05-07 23:57:39</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-05-07 23:58:54</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-05-08 00:14:21</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-05-08 05:01:49</name>
  </author>
  <author>
    <name>Benjamin Mord 2018-05-08 12:44:41</name>
  </author>
  <author>
    <name>Pedro Moreno Sanchez 2018-05-24 16:20:57</name>
  </author>
  <link href="lightning-dev/May_2018/001250_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001251_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001252_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001255_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001222_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001254_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001256_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/April_2018/001221_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001244_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001245_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001246_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001247_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001249_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001297_Scriptless-Scripts-with-ECDSA.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Scriptless Scripts with ECDSA</title>
    <updated>2023-06-03T18:50:57.890182+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-May/001250.html" rel="alternate"/>
    <summary>The email exchange discusses the potential vulnerabilities of cryptographic algorithms in the face of quantum computing. The use of scriptless scripts is a functional concept but lacks alternative implementations and is vulnerable to Schor's algorithm. Lattice-based cryptography is a promising solution, but redundancy and cryptographic conservatism must be added before building upon the functional concept of scriptless scripts.The discussion on the deployment of scriptless scripts on Lightning continues with arguments against making certain protocol changes to the base Bitcoin blockchain for the reason that they may not be quantum resistant. Additionally, Pedro Moreno Sanchez has created a scriptless version of the adaptor signatures and contract necessary using only 2-party ECDSA signatures, which is directly applicable today. The Lindell's technique is another proposed solution that can replace the regular 2-of-2 multi-sig with a single p2wkh, and it offers several benefits such as reducing fees for opening and closing channels and making htlc timeout+success transactions smaller by removing the multi-sig. Integrating this scheme into the existing protocol requires accounting for the additional cryptographic overhead that it would add.The Lightning-dev mailing list has discussed the potential of Schnorr signature aggregation and hash-based signatures. Supporting Schnorr signatures would require a new global feature bit, `option_support_scriptless`, to be added to the Lightning BOLT spec to support routing of scriptless-script conditional payments. A member of the Lightning Network team proposed a new cryptographic scheme to improve the contract protocol. This proposal includes a scriptless version of adaptor signatures and contracts using only 2-party ECDSA signatures, which could be applied directly today without waiting for Schnorr signatures to be deployed in Bitcoin. Olaoluwa Osuntokun also discusses the potential of using Lindell's technique as a way to replace regular 2-of-2 multi-sig with a single p2wkh. This method wouldn't require any end-to-end changes and could lead to lower fees for opening/closing channels and smaller transactions.In another email conversation, the discussion concerns two end-to-end payment routing schemes, namely the 2pc pailier technique and the OG SS technique based on schnorr. The former can replace regular multi-sig with a single pay-to-witness-public-key-hash (p2wkh) without requiring any end-to-end changes. On the other hand, the latter allows the use of randomized payment identifiers across the route but requires additional cryptographic overhead.Several possible applications of SS ECDSA include atomic swaps where the resulting transaction no longer reveals the cryptographic condition. However, the concept of scriptless scripts lacks alternative implementation and falls to Schor's algorithm, posing a potential threat. Although the functional concept of scriptless scripts is impressive, there needs to be some cryptographic conservatism before building on it to avoid creating a house of cards.</summary>
    <published>2018-05-08T12:58:33+00:00</published>
  </entry>
</feed>
