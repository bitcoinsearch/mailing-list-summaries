<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Preventing delay abuse in a Lightning-based peer-to-peer exchange</title>
  <updated>2023-06-02T03:27:55.147476+00:00</updated>
  <author>
    <name>Corn√© Plooy 2018-05-22 14:59:08</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-05-22 22:45:38</name>
  </author>
  <link href="lightning-dev/May_2018/001292_Preventing-delay-abuse-in-a-Lightning-based-peer-to-peer-exchange.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001294_Preventing-delay-abuse-in-a-Lightning-based-peer-to-peer-exchange.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Preventing delay abuse in a Lightning-based peer-to-peer exchange</title>
    <updated>2023-06-02T03:27:55.147476+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-May/001292.html" rel="alternate"/>
    <summary>In a recent discussion on Lightning-dev, the possibility of implementing a decentralized crypto/crypto exchange through atomic swaps on the Lightning network was brought up. However, one issue that arises is participants delaying transactions to speculate on exchange rate changes. Two approaches were proposed to deal with this issue. The first approach involved a latency monitor service, but it was found uninteresting due to issues with dealing with reputation in a community of pseudonyms. The second approach involves delegating the execution of the Lightning transaction to a trusted third party. Trading parties don't need to trust each other and only need to trust the third party to not cooperate with the other trading party to perform a delay attack.Although this approach is not completely trust-free, it offers several advantages over traditional exchanges such as no need for the trusted party to have a monopoly, customers can remain anonymous, and the provider doesn't know which asset is traded. It may not be competitive for very high-frequency or high-volume needs, but it could have some use for casual users on Lightning. This design also eliminates the need for exchanges with large amounts of stored crypto assets, which are attractive targets for hackers. Links to proposals for both approaches for preventing abuse in a Lightning-based peer-to-peer exchange were included in the discussion.ZmnSCPxj responded to the post and suggested that mitigations for exchange delay abuse should also apply as mitigations for the loop attack since they have the same attack vector.</summary>
    <published>2018-05-22T14:59:08+00:00</published>
  </entry>
</feed>
