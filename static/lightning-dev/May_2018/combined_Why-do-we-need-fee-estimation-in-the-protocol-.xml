<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Why do we need fee estimation in the protocol?</title>
  <updated>2023-06-03T19:19:35.412271+00:00</updated>
  <author>
    <name>ZmnSCPxj 2018-05-15 01:03:34</name>
  </author>
  <author>
    <name>CJP 2018-05-12 20:45:15</name>
  </author>
  <author>
    <name>Rusty Russell 2018-05-14 03:51:13</name>
  </author>
  <link href="lightning-dev/May_2018/001277_Why-do-we-need-fee-estimation-in-the-protocol-.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001272_Why-do-we-need-fee-estimation-in-the-protocol-.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001276_Why-do-we-need-fee-estimation-in-the-protocol-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Why do we need fee estimation in the protocol?</title>
    <updated>2023-06-03T19:19:35.412271+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-May/001277.html" rel="alternate"/>
    <summary>In a discussion thread, ZmnSCPxj questioned the need for consensus in commitment transactions in Lightning Network. ZmnSCPxj suggested that each peer should have their own version of the transaction and be responsible for paying the associated fee. However, ZmnSCPxj also acknowledged that this could lead to issues with both parties being unhappy with the fees when it comes time to use the transaction. ZmnSCPxj noted that Eltoo works around this issue by using a single input/output pair with SIGHASH_SINGLE|SIGHASH_ANYONECANPAY, which allows fees to be attached later without causing bloat. This technique cannot be used in Poon-Dryja because commitment transactions often have multiple outputs.The author questions the need for consensus in fee estimation for BOLT#3, stating that the current algorithm may be sub-optimal and subjective. They propose that each peer should have the ability to determine the fee for their own commitment transaction, with the peer who has an interest in committing to a certain transaction paying the fee. The author also suggests that changing the fee may not require a new revocation secret and that peers should be free to choose their own fees during normal operation, except in cases where there are significant HTLCs. However, updating the fee would require changes to follow-up transactions due to the change in txID.Rusty Russell, a contributor to the Lightning Network, suggests allowing peer A to pay for the commit transaction A and determine the amount of the fee, as they always pay the fee anyway. Peer B would need to approve it, but only needs to ensure that their own funds are safe. However, given the asynchronous nature of updates, this solution is not sufficient as neither side may end up being happy with the fees. Laolu Osuntokun's proposal of having an "OP_TRUE" output and minimal fees, that require a CPFP to push the transaction, greatly simplifies the fee problems but costs some onchain bloat for unilateral closes. Eltoo works around this by having only a single input/output pair with SIGHASH_SINGLE|SIGHASH_ANYONECANPAY and relying on SIGHASH_NOINPUT, enabling fees to be attached later without the bloat issue.</summary>
    <published>2018-05-15T01:03:34+00:00</published>
  </entry>
</feed>
