<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Imposing minimum 253 sat/ksipa feerate?</title>
  <updated>2023-06-03T19:20:23.083415+00:00</updated>
  <author>
    <name>Sjors Provoost 2018-06-15 11:39:59</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-06-18 09:22:07</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-06-06 01:06:13</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-05-29 06:15:55</name>
  </author>
  <link href="lightning-dev/June_2018/001308_Imposing-minimum-253-sat-ksipa-feerate-.xml" rel="alternate"/>
  <link href="lightning-dev/June_2018/001309_Imposing-minimum-253-sat-ksipa-feerate-.xml" rel="alternate"/>
  <link href="lightning-dev/June_2018/001299_Imposing-minimum-253-sat-ksipa-feerate-.xml" rel="alternate"/>
  <link href="lightning-dev/May_2018/001298_Imposing-minimum-253-sat-ksipa-feerate-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Imposing minimum 253 sat/ksipa feerate?</title>
    <updated>2023-06-03T19:20:23.083415+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-June/001308.html" rel="alternate"/>
    <summary>The Lightning Network is currently facing issues with the minimum relay fee imposed for Bitcoin transactions, which causes problems with dynamic fee-paying later. There is a difference in fee computation between Bitcoind and the BOLT spec, resulting in a minimum 250 sat/ksipa feerate that is not accepted by Bitcoind nodes. C-lightning, Eclair, and ucoin have all imposed a minimum of 253 sat/ksipa feerate to avoid rejection by Bitcoind, but lnd uses vsize internally for all fee estimation and does not impose this minimum.The best current candidate for managing these fee issues is utilizing a permanent op_true output, but even this solution has its own issues. Nodes regulate their minimum fee rates dynamically deepening on the size of their mempools, and even a value of 253 may be too low if a large fee spike occurs. Unilateral closure causes C-lightning to waste on chain fees sweeping and also incurs the time lock delay. The SegWit block size increase can maintain low fees until a better system is developed.</summary>
    <published>2018-06-15T11:39:59+00:00</published>
  </entry>
</feed>
