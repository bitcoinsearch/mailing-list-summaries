<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Including a Protocol for splicing to BOLT</title>
  <updated>2023-06-02T03:35:03.735223+00:00</updated>
  <author>
    <name>René Pickhardt 2018-06-25 10:10:26</name>
  </author>
  <author>
    <name>Rusty Russell 2018-07-04 05:47:23</name>
  </author>
  <author>
    <name>Christian Decker 2018-08-27 13:19:16</name>
  </author>
  <author>
    <name>Corné Plooy 2018-08-27 12:52:43</name>
  </author>
  <author>
    <name>Christian Decker 2018-07-03 13:45:30</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-07-04 21:28:13</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-07-05 03:36:29</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-07-05 04:30:22</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-07-05 04:47:11</name>
  </author>
  <author>
    <name>Rusty Russell 2018-07-08 06:38:38</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-07-03 05:15:40</name>
  </author>
  <author>
    <name>Corné Plooy 2018-08-27 13:22:49</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2018-06-25 19:35:41</name>
  </author>
  <author>
    <name>ZmnSCPxj 2018-06-26 07:26:09</name>
  </author>
  <author>
    <name>Rusty Russell 2018-07-01 23:55:48</name>
  </author>
  <author>
    <name>Rusty Russell 2018-07-05 00:07:44</name>
  </author>
  <link href="lightning-dev/June_2018/001322_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001346_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2018/001398_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2018/001397_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001342_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001347_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001349_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001350_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001351_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001353_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001335_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/Aug_2018/001399_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/June_2018/001324_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/June_2018/001325_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001332_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001348_Including-a-Protocol-for-splicing-to-BOLT.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Including a Protocol for splicing to BOLT</title>
    <updated>2023-06-02T03:35:03.735223+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-June/001322.html" rel="alternate"/>
    <summary>The Lightning Network development community is currently prioritizing different features to enhance the user experience and provide a trustworthy network. One of the most requested features is spontaneous payments, which can be achieved through a preimage and hash method without requiring any proof of payment. However, the absence of Zero-Knowledge Contingent Payments (ZKCP) makes it impossible to build a trustless off-to-on/on-to-offchain bridge, which is essential. The developers are considering various updates, including splicing, dual funded channels, and Schnorr-Eltoonicorn. Splicing is important for better user experience as it allows users to ignore differences between on-chain and off-chain funds and show only one balance for all use-cases. However, it requires low-level knowledge of Bitcoin and specific implementation details. Dual funded channels allow for immediate bi-directional transfers between endpoints, while Schnorr-Eltoonicorn will bring several trade-offs and switch to dlog-based HTLCs. In addition, the Lightning Network developers are facing difficulties with extending the gossip protocol for their network improvements. The extension of channel_announce and channel_update won't propagate through old nodes until the new channel is six deep, and a new message type wouldn't propagate at all through old nodes. The developers are working on splicing, which will be included in BOLT 1.1. The Lightning Network developers are also discussing the importance of having a proper proof-of-payment in a system without intermediaries. Currently, the Lightning Network only provides a "proof that someone paid," which is trivially forgable by payees. Developers are working towards implementing a trustworthy system.Finally, there have been email exchanges between members of the Lightning Network development community regarding the technical implementation of various proposals, including splicing and spontaneous payments. While progress has been made, the implementation of these features is difficult and requires specific knowledge of Bitcoin.</summary>
    <published>2018-06-25T10:10:26+00:00</published>
  </entry>
</feed>
