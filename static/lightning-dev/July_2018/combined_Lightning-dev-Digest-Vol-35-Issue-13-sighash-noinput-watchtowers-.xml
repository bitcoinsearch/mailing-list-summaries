<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning-dev Digest, Vol 35, Issue 13 (sighash_noinput &amp; watchtowers)</title>
  <updated>2023-06-03T19:30:03.473166+00:00</updated>
  <author>
    <name>Rusty Russell 2018-07-14 00:48:15</name>
  </author>
  <author>
    <name>James Chiang 2018-07-13 14:54:18</name>
  </author>
  <link href="lightning-dev/July_2018/001361_Lightning-dev-Digest-Vol-35-Issue-13-sighash-noinput-watchtowers-.xml" rel="alternate"/>
  <link href="lightning-dev/July_2018/001360_Lightning-dev-Digest-Vol-35-Issue-13-sighash-noinput-watchtowers-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning-dev Digest, Vol 35, Issue 13 (sighash_noinput &amp; watchtowers)</title>
    <updated>2023-06-03T19:30:03.473166+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2018-July/001361.html" rel="alternate"/>
    <summary>The email thread in question discusses the use of sighash_noinput, an application that reduces the number of stored signatures. However, there is concern about the potential trade-off of privacy when using this method for watchtowers, as it reveals which states are related. Eltoo is mentioned as a solution to this problem, but it requires SIGHASH_NOINPUT, which means that only the latest transaction is needed instead of a penalty tx for every state change. The txid_half + encrypted blob model ensures that no information is learned about each state and how they relate unless a revocation must happen, but this method does not scale well. With the reuse of signatures for multiple states with sighash_noinput, there is a question of how to minimize information being disclosed to third parties. Encryption using the txid is suggested as a possible solution, although no full design has been done yet.A twist is that the watchtower may need to consider transactions that have already been spent by one or a chain of SIGHASH_NOINPUT transactions, but this is considered easy. In response to these concerns, Rusty Russell suggests that a wallet should never create a SIGHASH_NOINPUT to spend its own UTXOs, as it is only useful for smart contracts with unique conditions such as lightning.</summary>
    <published>2018-07-14T00:48:15+00:00</published>
  </entry>
</feed>
