<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Scaling Lightning With Simple Covenants</title>
  <updated>2023-09-27T01:57:04.673105+00:00</updated>
  <author>
    <name>David A. Harding 2023-09-24 21:40:29+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-09-19 07:44:48+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-09-18 04:14:55+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2023-09-17 11:32:52+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:59:39+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:56:04+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:52:13+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-09-11 05:27:25+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2023-09-11 02:13:52+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2023-09-11 00:56:40+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-08 18:54:46+00:00</name>
  </author>
  <link href="lightning-dev/Sept_2023/004115_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2023/004107_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2023/004106_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2023/004105_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2023/004104_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2023/004103_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2023/004102_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2023/004098_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2023/004097_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2023/004095_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="lightning-dev/Sept_2023/004092_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Scaling Lightning With Simple Covenants</title>
    <updated>2023-09-27T01:57:04.673245+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004115.html" rel="alternate"/>
    <summary>The email discusses the tradeoff between trust and capital efficiency in the context of a single UTXO that is claimable by user B at a specific time. User B cheating could lead to a "thundering herd" problem where millions of casual users would need to drop their channel to the chain or risk losing their funds. Casual users can calculate how many extra transactions per block their worst-case scenario generates and determine when to roll over their funds to a new UTXO. The email also mentions the challenges of reducing timeout periods and collusion among different providers.Additionally, the email addresses the challenge of scaling Lightning channels for casual users. Signature-based factories have limitations, so simple covenants are proposed as a solution. Enabling simple covenants would allow for the creation of channels for millions of casual users without requiring complex coordination or signatures. Timeout-trees are suggested for long-term scaling, allowing casual users to continue using their Lightning channels without putting them on-chain. The email also discusses the problem of availability when draining funds from an old timeout-tree to a new one and proposes solutions using the FFO-WF Lightning channel protocol and handling HTLCs.Furthermore, the email highlights the delay in accessing funds on-chain and proposes the use of timeout-trees to provide casual users with immediately-accessible off-chain bitcoin. The scalability of Lightning can be greatly improved by implementing simple covenants and timeout-trees, making it more widely used for payments. The email also mentions other protocols that address usability issues. However, there are limitations to consider, such as the cost of resolving HTLCs on-chain and reliable relay of transaction packages. Overall, the email hopes for the addition of mechanisms like CTV or APO to Bitcoin's consensus rules to enhance Lightning's usability as a means of payment.</summary>
    <published>2023-09-24T21:40:29+00:00</published>
  </entry>
</feed>
