<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Payment Splitting &amp; Switching and its impact on Balance Discovery Attacks (preprint)</title>
  <updated>2023-09-27T01:57:21.210790+00:00</updated>
  <author>
    <name>Gijs van Dam 2023-09-22 14:53:58+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Payment Splitting &amp; Switching and its impact on Balance Discovery Attacks (preprint)</title>
    <updated>2023-09-27T01:57:21.210825+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004114.html" rel="alternate"/>
    <summary>Gijs van Dam begins the email by mentioning their previous discussion on Link MPP over alternative routes. They have developed a proof of concept called Payment Splitting &amp; Switching (PSS) by creating a core-lightning plugin. The plugin works by splitting up a payment into multiple parts, with one part following the original route and using the original onion but committing to an HTLC with a lesser amount. Upon receiving this HTLC, the recipient can forward the payment but will wait for another payment from the sender. The sender then sends this additional payment over an alternative route, contingent on the payment hash of the original payment.The interest in Link MPP and PSS arises from Gijs van Dam's research on the Balance Discovery Attack (BDA), also known as the probing attack. PSS allows for route changes and amount changes without the sender's knowledge, which impacts how an attacker interprets information obtained through a BDA. In an LN simulator using real-world data, deploying PSS resulted in up to a 62% drop in information gain compared to earlier work without PSS. Further details on this research can be found in Gijs van Dam's preprint on the Cryptology ePrint Archive.Gijs van Dam welcomes feedback on their research and would like to hear thoughts on the role PSS could play in mitigating probing and/or jamming. They have also written a set of blog posts introducing the research, which can be found at the provided links. Finally, they mention that PSS may also work with PTLC, but this will be discussed at another time.Overall, the email discusses Gijs van Dam's development of the Payment Splitting &amp; Switching (PSS) plugin, its potential applications in mitigating probing and/or jamming, and the impact of PSS on the Balance Discovery Attack (BDA). They provide links to additional resources for further reading and welcome feedback on their research.</summary>
    <published>2023-09-22T14:53:58+00:00</published>
  </entry>
</feed>
