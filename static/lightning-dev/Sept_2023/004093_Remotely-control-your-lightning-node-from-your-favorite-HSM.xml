<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Remotely control your lightning node from your favorite HSM</title>
  <updated>2023-09-09T01:49:43.154917+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-09-08 23:16:58+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Remotely control your lightning node from your favorite HSM</title>
    <updated>2023-09-09T01:49:43.154958+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004093.html" rel="alternate"/>
    <summary>The email exchange between Christian and Bastien is centered around the topic of implementing security measures within a Hardware Security Module (HSM) for creating runes. Christian agrees with Bastien's point that if they create runes inside the HSM, it will result in the same security model. The decision then comes down to choosing between implementing Bolt 8 or rune management within the HSM.Bastien expresses his preference for Bolt 8 due to its universality and simplicity, but suggests that it might be worth experimenting with both approaches. He also highlights the importance of configuring access control and rights on the lightning node side, emphasizing the need for implementation work to address these details.Overall, the email discussion revolves around weighing the pros and cons of implementing Bolt 8 versus rune management within an HSM, and the significance of configuring access control and rights for the lightning node.</summary>
    <published>2023-09-08T23:16:58+00:00</published>
  </entry>
</feed>
