<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Remotely control your lightning node from your favorite HSM</title>
  <updated>2023-09-06T01:57:30.507274+00:00</updated>
  <author>
    <name>Bastien TEINTURIER 2023-09-05 21:26:49+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Remotely control your lightning node from your favorite HSM</title>
    <updated>2023-09-06T01:57:30.507307+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004084.html" rel="alternate"/>
    <summary>Bastien has submitted a pull request to the bLIPs repository [1] to document an idea he has been investigating. The idea is to create a simple architecture that allows for securely sending administrative commands to a lightning node from an untrusted machine. This can be done by using a hardware security module (HSM) acting as a whitelisted lightning peer.The architecture utilizes a standard lightning connection as the communication channel and custom lightning messages to send commands. The interesting aspect of this architecture is that it requires minimal changes to the lightning node itself. Bastien mentions that this can be implemented in a custom application running on a Ledger Nano S [2], which is what he has been exploring.Although the bLIP still needs some work on the actual commands and their encoding, Bastien believes that the most significant part is the HSM app. He suggests that implementing this idea would be very useful and volunteers to provide better specifications and review the implementation. Additionally, he proposes that this work could potentially be done under an open-source grant.In conclusion, Bastien's email introduces a concept for securely sending administrative commands to a lightning node using an HSM as a whitelisted lightning peer. He highlights the minimal changes required on the lightning node itself and expresses his willingness to contribute to further development and implementation.</summary>
    <published>2023-09-05T21:26:49+00:00</published>
  </entry>
</feed>
