<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Scaling Lightning With Simple Covenants</title>
  <updated>2023-09-28T01:55:42.695290+00:00</updated>
  <author>
    <name>Antoine Riard 2023-09-26 16:42:34+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Scaling Lightning With Simple Covenants</title>
    <updated>2023-09-28T01:55:42.695317+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004117.html" rel="alternate"/>
    <summary>Antoine received an email from John discussing various aspects of off-chain constructions and their trade-offs. The email mentions that while many users want payments to work, they are not willing to invest time or hardware resources to make them work efficiently. Antoine agrees but points out that even casual users will have to store signatures and witnesses for off-chain balances somewhere. He suggests the use of hierarchical channels and timeout-trees to improve efficiency and scalability.The email also discusses the challenges of transactional scaling in Lightning Network due to liquidity imbalances among counterparties. Antoine mentions that on-chain splicing and pool rebalancing can help address this issue. He further explains that pre-committing a subset of casual or inactive users to sign transactions is not straightforward, especially for millions of users. A more efficient cryptographic accumulator would be needed in such cases.Antoine acknowledges that timeout-trees and channel resizing suffer from fault-tolerance issues when one user aims to go on-chain. The fragmentation cost is borne by all users in the tree branch. He highlights the importance of fault-tolerance and mentions that it is one of the key design goals for payment pool advancements.The concept of timevalue cost is also mentioned, where certain actions need to be performed within a limited time window. Antoine states that most off-chain constructions require strong liveliness and the ability to perform actions within a specific timeframe. He appreciates the TP-channel factories for allowing casual users to decide when they need to act.The thundering herd problem, which refers to a sudden surge of requests overwhelming a system, is discussed as a distinct issue in the original Lightning paper. Antoine agrees with this observation and points out that transaction-relay changes alone cannot fix this problem.Antoine raises concerns about dedicated users becoming targets for attacks, such as channel jamming or time-dilation, once they have multiple off-chain trees. He also mentions the possibility of using "cut-through" to reduce on-chain footprint in mass exit cases.Towards the end of the email, Antoine poses a few questions based on Dave's description of TP protocol, such as the prevention of double-spending and equivocation. He expresses his interest in understanding the security model of the TP protocol and how it compares to other off-chain constructions.Overall, the email discusses various aspects of off-chain constructions, their challenges, and potential solutions. Antoine acknowledges the insights shared by John and raises additional points for further exploration.</summary>
    <published>2023-09-26T16:42:34+00:00</published>
  </entry>
</feed>
