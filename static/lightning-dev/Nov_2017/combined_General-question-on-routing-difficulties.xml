<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - General question on routing difficulties</title>
  <updated>2023-06-03T17:45:54.859025+00:00</updated>
  <author>
    <name>Pedro Moreno Sanchez 2017-11-21 15:37:48</name>
  </author>
  <author>
    <name>Pedro Moreno Sanchez 2017-11-23 00:47:44</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2017-11-25 19:09:15</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2017-11-25 19:05:08</name>
  </author>
  <author>
    <name>Pedro Moreno Sanchez 2017-11-30 16:59:35</name>
  </author>
  <author>
    <name>Benjamin Mord 2017-11-17 15:25:16</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2017-12-15 21:46:54</name>
  </author>
  <author>
    <name>Christian Decker 2017-11-23 12:50:44</name>
  </author>
  <author>
    <name>Giovanni Di Stasi 2017-11-22 14:11:45</name>
  </author>
  <author>
    <name>Pedro Moreno Sanchez 2017-11-25 17:13:25</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2017-11-25 19:16:12</name>
  </author>
  <author>
    <name>Rusty Russell 2017-11-28 22:42:44</name>
  </author>
  <author>
    <name>Benjamin Mord 2017-11-17 14:10:48</name>
  </author>
  <author>
    <name>Christian Decker 2017-11-17 14:30:14</name>
  </author>
  <author>
    <name>Christian Decker 2017-11-25 19:33:07</name>
  </author>
  <author>
    <name>Olaoluwa Osuntokun 2017-11-25 19:13:15</name>
  </author>
  <author>
    <name>Ivan Raszl 2017-11-16 14:26:02</name>
  </author>
  <author>
    <name>Benjamin Mord 2017-11-16 16:01:18</name>
  </author>
  <author>
    <name>Christian Decker 2017-11-17 13:04:21</name>
  </author>
  <author>
    <name>Saravanan Vijayakumaran 2017-11-18 01:09:40</name>
  </author>
  <link href="lightning-dev/Nov_2017/000798_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000799_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000803_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000806_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000812_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000792_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Dec_2017/000850_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000800_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000801_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000802_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000804_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000811_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000790_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000791_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000805_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000807_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000787_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000788_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000789_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000793_General-question-on-routing-difficulties.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - General question on routing difficulties</title>
    <updated>2023-06-03T17:45:54.860026+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-November/000798.html" rel="alternate"/>
    <summary>Researchers from Purdue University and the University of Waterloo have developed a new routing algorithm called SpeedyMurmurs for decentralized payment networks such as the Lightning Network. The algorithm assigns coordinates to nodes based on its position within a spanning tree created using Breadth-First Search, and then calculates a path from sender to receiver based on available funds, neighbors' coordinates, and closeness to the receiver. Simulation results show that SpeedyMurmurs finds paths twice as fast, reduces communication overhead by at least half, and maintains a similar or higher payment success ratio compared to other routing algorithms.The Lightning Network team is actively working on finding better solutions to the problem of finding routes across a vast network of millions, if not billions, of nodes. The network can currently scale to about 1 million channels even on very limited devices, and upgrading to another protocol at a later point in time is trivial since none of the routing information is consensus critical. Additionally, SpeedyMurmurs achieves value, sender, and receiver privacy. Rebalancing is possible without off-chain channel rebalancing methods, and transaction fees are greatly reduced since only channel setup/tear down is required.In a discussion between Pedro Moreno-Sanchez and Olaoluwa Osuntokun, they explore the SpeedyMurmurs routing algorithm for decentralized payment networks. Osuntokun suggests that this protocol is better suited to Ripple, as there is no need for a decentralized routing algorithm on Ripple since all the information is continuously updated in the ledger. However, Moreno-Sanchez disagrees, stating that SpeedyMurmurs can be used in different payment networks, including Lightning Network (LN), which faces similar challenges such as bootstrapping and liquidity.Christian Decker and Benjamin Mord have been discussing the routing protocol of the Lightning Network (LN) via email. At present, the current routing protocol is minimal and pushes the entire network's topology to the edges which is not set in stone. They are actively working on finding better solutions to the problem of finding routes across a vast network of millions of nodes. Benjamin suggests cataloging unproven mathematical assumptions and/or cryptographic primitives required by cryptocurrency technologies could help respond faster to cryptanalytic surprises.The Lightning Network could help resolve the problem of centralization in Bitcoin. Although it is economically probable that a small number of liquidity providers will control the flow, off-chain channel rebalancing mechanisms like the proposed "revive" protocol could help resolve this issue. The hub formation seems unlikely due to their high cost. Despite predictions on how the topology will look, we should be careful as nobody can be sure about what will happen.In an email exchange discussing Lightning Network's routing protocol, Christian Decker responds to Benjamin Mord's question regarding cryptographic primitives being used in Lightning and the specific assumptions being made about them. He explains that the minimally viable routing protocol is set in stone for now, but they are actively working on finding better solutions to the problem of finding routes across a vast network of millions, if not billions, of nodes. The Lightning Network team is also building automations to improve network topology without requiring user involvement.The email discusses a paper on coordinate embedding and its use in providing sender+receiver privacy in payment networks. A new routing algorithm called SpeedyMurmurs has been developed for decentralized payment networks such as the Lightning Network, which uses an embedding-based approach to assign meaningful coordinates to nodes that enable efficient and effective discovery of payment paths. The Lightning Network team is working on solving the problem of finding routes across the network.A comment on a Reddit thread discussing the Lightning Network has raised concerns regarding its scalability and potential centralization. In response to Ivan's query on the scalability and decentralization issues with the Lightning Network, Ben refutes the claim that it cannot scale to 100,000 users due to routing difficulties. He suggests that while Bitcoin script is not currently revive-capable, Ethereum is, and therefore, Bitcoin revive could be enabled via two-way pegged sidechain protocol with Ethereum or even better, through a purpose-built.The email is not fully clear, but it seems to suggest that the limit for channel sizes in Lightning Network has been increased to 80k. This may be an important development for participants in the network as it could potentially allow for larger transactions to be conducted through Lightning Network channels. However, more information is needed to fully understand the implications of this change.</summary>
    <published>2017-11-21T15:37:48+00:00</published>
  </entry>
</feed>
