<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lightning-dev Digest, Vol 27, Issue 2</title>
  <updated>2023-06-02T01:17:26.931222+00:00</updated>
  <author>
    <name>Rusty Russell 2017-11-09 23:29:52</name>
  </author>
  <author>
    <name>Louis Willcock 2017-11-03 22:18:23</name>
  </author>
  <link href="lightning-dev/Nov_2017/000775_Lightning-dev-Digest-Vol-27-Issue-2.xml" rel="alternate"/>
  <link href="lightning-dev/Nov_2017/000771_Lightning-dev-Digest-Vol-27-Issue-2.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lightning-dev Digest, Vol 27, Issue 2</title>
    <updated>2023-06-02T01:17:26.931222+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2017-November/000775.html" rel="alternate"/>
    <summary>Louis Willcock approached Rusty Russell to inquire about the low usage of BIP70, especially in reference to the BIP 70-72 collection. Rusty believes that the reason for its lack of adoption is due to the fact that it does not offer significant advantages over existing Bitcoin addresses. On the other hand, Lightning Network required a unique format which justified the creation of a dedicated format. In a Lightning-dev mailing list, Rusty Russell answered some questions about the Lightning Network's payment protocol. One way to handle payments from users who do not use LN is by using a BOLT 11 QR code which can contain a fallback address. However, this still requires their app to understand BOLT11 enough to extract the information. Alternatively, the BIP70 payment protocol could include an alternate payment mechanism, but no one seems to be using it.Another question was raised regarding payment delays caused by someone in the middle not cooperating fast enough. If the payment has failed, users can either wait or try again with a new invoice. For version 1.1, users would be able to reuse the same invoice safely, as long as the merchant was honest if it received two payments and rejects the second. If the payment has not failed yet, users will still receive their goods and do not have to worry about the money being deducted.Rusty also discussed the decremental time lock, which is strongly related to block confirmation time. Even if there were a currency with very fast confirmation times (like 5 seconds), the time lock period couldn't be too short because there still needs to be a margin to turn around payments. However, in practice, if payments are so unreliable that you have to worry about this case, then something is wrong.</summary>
    <published>2017-11-09T23:29:52+00:00</published>
  </entry>
</feed>
