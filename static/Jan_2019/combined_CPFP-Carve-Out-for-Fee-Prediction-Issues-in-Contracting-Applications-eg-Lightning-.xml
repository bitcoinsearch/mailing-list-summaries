<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2019-January-016608</id>
  <title>Combined summary - CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
  <updated>2023-05-09T22:34:19.130342+00:00</updated>
  <author>
    <name>Matt Corallo</name>
  </author>
  <author>
    <name>Matt Corallo</name>
  </author>
  <link href="Jan_2019/016608_CPFP-Carve-Out-for-Fee-Prediction-Issues-in-Contracting-Applications-eg-Lightning-.xml" rel="alternate"/>
  <link href="Jan_2019/016610_CPFP-Carve-Out-for-Fee-Prediction-Issues-in-Contracting-Applications-eg-Lightning-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>mailing-list-bitcoin-2019-January-016608</id>
    <title>Combined summary - CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
    <updated>2023-05-09T22:34:19.130342+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-January/016608.html" rel="alternate"/>
    <summary>The discussion is about solving the RBF-pinning problem by allowing transactors to mark their transactions as "likely-to-be-RBF'ed", which could enable a relay policy where children of such transactions would be rejected unless the resulting package would be "near the top of the mempool". This proposal is incentive-compatible, and it reduces the problem that the current lightning proposal adds to the UTXO set with two anyone-can-spend txs for 1000 satoshis. However, defining a "near the top of the mempool" criteria is fraught with issues because Lightning's requirements are very different from large batched transactions. Lightning operators want certainty that the transaction will confirm by some deadline and not just a high probability that it will confirm "soon," which can lead to sudden spikes in transaction volume. Moreover, the proposal doesn't guarantee the ability to RBF as fees change. Even steady-state mempool growth wouldn't hold up the criteria because of block time variance. The attack against this proposal is to make a 100k package, which would just get into the "top," then push it out with a separate tx at slightly higher fee, then repeat.</summary>
    <published>2019-01-07T15:18:52+00:00</published>
  </entry>
</feed>
