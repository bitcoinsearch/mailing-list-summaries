<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2019-January-016610</id>
  <title>CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
  <updated>2023-05-04T21:16:24.110116+00:00</updated>
  <author>
    <name>Matt Corallo</name>
  </author>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-January/016610.html" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-January/016610.html</id>
    <title>CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
    <updated>2023-05-04T21:16:24.110116+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-January/016610.html" rel="alternate"/>
    <summary>The conversation is about an alternative proposal that does not guarantee the ability to RBF as fees change. The issue of a counterparty announcing a bogus package and leaving the user unable to add a new transaction is still present, but it may be significantly more expensive to do so. Defining a "near the top of the mempool" criteria is problematic, especially for lightning operators who need certainty that transactions will confirm by some deadline. Even if you imagine a steady-state mempool growth, the "top of the next block" criteria is not incentive-compatible due to block time variance. An attacker could make a 100k package that would get into the "top," then push it out with a separate tx at slightly higher fee, then repeat. However, whatever is simplest to implement should win, and the speaker is not in a position to judge accurately.</summary>
    <published>2019-01-08T14:46:45+00:00</published>
  </entry>
</feed>
