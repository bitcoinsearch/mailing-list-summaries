<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2019-January-016640</id>
  <title>Safer NOINPUT with output tagging</title>
  <updated>2023-05-04T21:16:13.394080+00:00</updated>
  <author>
    <name>Anthony Towns</name>
  </author>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-January/016640.html" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-January/016640.html</id>
    <title>Safer NOINPUT with output tagging</title>
    <updated>2023-05-04T21:16:13.394080+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-January/016640.html" rel="alternate"/>
    <summary>In a Bitcoin-dev discussion, it was suggested that a boutique protocol could reduce the number of onchain wallets integrated in user interfaces. A proposal was made for using PSBT as a sufficient protocol. The proposed process involves the lightning node generating a PSBT for a new channel with no inputs and a single output of the 2-of-2 address. The wallet funds the PSBT but doesn't sign it, adding a change address if necessary, and can combine with other transactions similar to Bustapay style. Lightning determines the txid from PSBT and creates update/settlement tx's for funding tx so funds can be recovered. Then, the wallet signs and publishes the PSBT, and lightning sees the tx on chain and channel is open. Though this method is more complicated than the previous method, it avoids letting users get into the habit of passing NOINPUT addresses around or the risk of a user typo'ing the value and losing money immediately. It also has the benefit that the wallet can tweak the value if (eg) that avoids a change address or enhances privacy.</summary>
    <published>2019-01-31T06:04:05+00:00</published>
  </entry>
</feed>
