<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2019-January-016608</id>
  <title>CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
  <updated>2023-05-09T22:33:53.403645+00:00</updated>
  <author>
    <name>Matt Corallo</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>mailing-list-bitcoin-2019-January-016608</id>
    <title>CPFP Carve-Out for Fee-Prediction Issues in Contracting Applications (eg Lightning)</title>
    <updated>2023-05-09T22:33:53.403645+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2019-January/016608.html" rel="alternate"/>
    <summary>In this conversation, Matt Corallo proposed an alternative to the RBF-pinning proposal by allowing transactors to mark their transactions as "likely-to-be-RBF'ed", which could enable a relay policy where children of such transactions would be rejected unless the resulting package would be "near the top of the mempool". Although it theoretically implies that such attacks are not possible to pull off consistently, Rusty Russell pointed out that defining a "near the top of the mempool" criteria is fraught with issues and may not work for Lightning's requirements. Furthermore, if the "near the top of the mempool" criteria is not "near the top of the next block", there is a high probability that the transaction in question may not confirm within a handful of blocks given block time variance. Additionally, giving up the ability to RBF/CPFP more than once in case the fee moves away from us seems to be a rather significant restriction. Rusty Russell liked the idea of the RBF-pinning proposal because it is incentive-compatible and reduces the problem that the current lightning proposal adds to the UTXO set with two anyone-can-spend txs for 1000 satoshis. However, he suggested that package relay may come with its own challenges, but this could be done client-side.</summary>
    <published>2019-01-07T15:18:52+00:00</published>
  </entry>
</feed>
