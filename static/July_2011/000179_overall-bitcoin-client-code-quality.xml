<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>overall bitcoin client code quality</title>
  <updated>2023-05-15T18:35:31.870975+00:00</updated>
  <author>
    <name>Gregory Maxwell</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>overall bitcoin client code quality</title>
    <updated>2023-05-15T18:35:31.870975+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000179.html" rel="alternate"/>
    <summary>In an email exchange regarding coding practices, Michael Offel expressed the belief that every class should be able to stand on its own for easier reuse in other projects or situations. However, the other party, while acknowledging the value of ideas, noted that opinions have no weight without actual coding work. They suggested that modern SCM systems have no major issues with merge conflicts due to shared files and that Bitcoin's small size made aesthetic discussions pointless. They agreed with the proposal to reimplement parts as libraries and switch to them after validation, but emphasized the importance of blockchain validation logic and script functionality testing. They believed that new, clean, secondary implementations of this logic were needed, along with good automatic testing shims to find inconsistencies between implementations. Testing rigs were suggested as an excellent area for new project contributors.</summary>
    <published>2011-07-12T23:40:46+00:00</published>
  </entry>
</feed>
