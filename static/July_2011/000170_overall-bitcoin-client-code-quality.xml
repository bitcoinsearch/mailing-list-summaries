<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>overall bitcoin client code quality</title>
  <updated>2023-05-12T04:44:34.740679+00:00</updated>
  <author>
    <name>Matt Corallo</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>overall bitcoin client code quality</title>
    <updated>2023-05-12T04:44:34.740679+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000170.html" rel="alternate"/>
    <summary>In an email thread dated July 11, 2011, Michael Offel sought to start a discussion about code quality for Bitcoin and create a cleanup plan. He listed several points he had observed while reading the codebase, including nearly no code documentation, poor use of threads, and hardcoded values for the official and testnet block chains. Offel suggested that the codebase would benefit from well-defined interfaces between modules, more readable style guidelines, and moving all chain-related settings to a chain description file. Although he acknowledged that the code was functional, he believed it was prone to bugs and needed a complete rewrite inspired by the old code, with extra attention given to ensuring cleanliness and documentation. Matt Corallo responded, stating that although the code was messy in terms of global usage and poorly-implemented RPC/net/etc., most of the code was fine and could be improved through clearly defined methods and classes. He also noted that cleaning up the code was a higher priority than commenting it better.</summary>
    <published>2011-07-10T23:36:53+00:00</published>
  </entry>
</feed>
