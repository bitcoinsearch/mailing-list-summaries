<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Version bytes</title>
  <updated>2023-05-15T18:51:39.645027+00:00</updated>
  <author>
    <name>Pieter Wuille 2011-07-07 11:15:58</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-07-08 09:25:07</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-07-07 19:40:08</name>
  </author>
  <link href="July_2011/000144_Version-bytes.xml" rel="alternate"/>
  <link href="July_2011/000156_Version-bytes.xml" rel="alternate"/>
  <link href="July_2011/000152_Version-bytes.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Version bytes</title>
    <updated>2023-05-15T18:51:39.645027+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000144.html" rel="alternate"/>
    <summary>Pieter Wuille, a member of the Bitcoin community, suggested standardizing the version bytes used by Bitcoin for several applications. He proposed three components that seemed meaningful: network (realnet, testnet, alternate chains?), data class (address, private key, master key, ...?), and version (real version, per data class defined). There was no technical reason why different networks and different data classes would need separate version bytes, but it is advisable to keep them from colliding. The proposal set bit 16 in the version byte for "alternate chain" to reserve one actually used alternate chain, namely Namecoin, which uses version byte 52 for addresses. The proposal also dealt with testnets that already use version 111, which is not a single bit. The trick used was to choose bit 1 for testnet, and if bit 1 is set, XOR the rest of the version number with 111. Otherwise, they could reset testnet and state odd=testnet, even=realnet. Six more bits were left to play with, namely 128,64,32 and 8,4,2. As 128 is already used for private keys, (128,64,32) were used for data classes, and (8,4,2) for versions.In full, bits 128/64/32 define data class; Bit 16 defines "private"; Bits 8/4/2 define version number, and Bit 1 defines testnet. This whole discussion started when Stefan wanted to define a format for master keys from which to derive deterministic wallet keys. Pieter suggested using data class 192 for that, leaving the lower numbers for more basic data, like public keys.</summary>
    <published>2011-07-07T11:15:58+00:00</published>
  </entry>
</feed>
