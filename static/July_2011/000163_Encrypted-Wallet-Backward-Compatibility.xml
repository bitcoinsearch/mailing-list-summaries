<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Encrypted Wallet Backward Compatibility</title>
  <updated>2023-05-12T04:41:26.517409+00:00</updated>
  <author>
    <name>Pieter Wuille</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Encrypted Wallet Backward Compatibility</title>
    <updated>2023-05-12T04:41:26.517409+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000163.html" rel="alternate"/>
    <summary>In 2011, Matt Corallo found a data structure in wallet settings that would cause all versions of Bitcoin to crash on load. He put an empty object in addrIncoming, which was not used anywhere in the code aside from its definition, to prevent creating an empty wallet and letting the user wonder where their wallet went. This way, the system fails soon and does not get a corrupt wallet. The commit for this solution can be found at https://github.com/TheBlueMatt/bitcoin/commit/2e8383469d7e12a495b3a1dbd41a8d211ff34fe8. Pieter provided an ACK on newenc, thanking Matt for all the work he had put into it already. The only remaining issue was the invalid mlock calculations, which Matt planned to fix.</summary>
    <published>2011-07-10T19:10:07+00:00</published>
  </entry>
</feed>
