<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Encrypted Wallet Backward Compatibility</title>
  <updated>2023-05-11T15:57:50.186769+00:00</updated>
  <author>
    <name>Pieter Wuille</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Encrypted Wallet Backward Compatibility</title>
    <updated>2023-05-11T15:57:50.186769+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000163.html" rel="alternate"/>
    <summary>In a message posted on Github, Matt Corallo reported that he had found a data structure in wallet settings which would cause all versions of Bitcoin to crash on load. To fix this issue, Corallo added an empty object in addrIncoming, which did not affect the code in any way except for its definition. Although this solution may give an incomprehensible error message to the user, it is still better than creating an empty wallet and letting the user wonder where their wallet went. Corallo believes that this way, the system fails soon and does not result in a corrupt wallet. Corallo also mentioned that aside from the invalid mlock calculations, there were no remaining suggestions or blockers on newenc and asked for final ACKs on it.</summary>
    <published>2011-07-10T19:10:07+00:00</published>
  </entry>
</feed>
