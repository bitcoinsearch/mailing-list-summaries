<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Notifications from client/wallet</title>
  <updated>2023-05-12T04:45:26.173221+00:00</updated>
  <author>
    <name>Matt Corallo 2011-07-14 14:13:04</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-07-14 09:10:42</name>
  </author>
  <link href="July_2011/000188_Notifications-from-client-wallet.xml" rel="alternate"/>
  <link href="July_2011/000187_Notifications-from-client-wallet.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Notifications from client/wallet</title>
    <updated>2023-05-12T04:45:26.173221+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-July/000188.html" rel="alternate"/>
    <summary>The discussion is about adding notifications to the client and wallet to decouple UI and core communication. The proposal suggests using the boost::signal mechanism, which allows decoupled delivery of 'signals' from an object, with multiple other objects listening on an event without the emitting object having to care. The proposed notifications for Wallet include balanceChanged, transactionAdded, transactionUpdated, transactionRemoved, addressAdded, addressUpdated, addressRemoved, notification, and askFee. For Network client, it includes numConnectionsChanged, numBlocksChanged, and notification. The discussion also mentions a central notification interface that all components communicate with, allowing for clean separation of pieces and large-scale rewrites without touching anything but the parts being redone. This would also allow cool programs to use Bitcoin as a library efficiently.</summary>
    <published>2011-07-14T14:13:04+00:00</published>
  </entry>
</feed>
