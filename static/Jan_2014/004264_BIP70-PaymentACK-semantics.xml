<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2014-January-004264</id>
  <title>BIP70: PaymentACK semantics</title>
  <updated>2023-05-04T21:11:51.845844+00:00</updated>
  <author>
    <name>Pieter Wuille</name>
  </author>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004264.html" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004264.html</id>
    <title>BIP70: PaymentACK semantics</title>
    <updated>2023-05-04T21:11:51.845844+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004264.html" rel="alternate"/>
    <summary>In a discussion about the payment protocol in Bitcoin Core, there was debate over whether wallets should broadcast transactions as soon as possible or wait for merchants to respond with a PaymentACK. Gavin Andresen proposed letting wallets experiment with different methods to see what works best in practice. However, another issue was raised regarding the bidirectional nature of the payment protocol. If a merchant wants to use the refund or memo feature, they need an alternative route for delivery before the transaction is made, as sending it may result in funds being transferred without knowing what to do with them. Pieter's suggestion was to add requirements to the specification, such as attempting to send the payment to the specified payment_uri and making a reasonable attempt to deliver the payment even if the transaction is broadcasted without payment.</summary>
    <published>2014-01-30T15:16:54+00:00</published>
  </entry>
</feed>
