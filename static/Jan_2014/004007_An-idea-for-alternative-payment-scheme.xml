<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2014-January-004007</id>
  <title>An idea for alternative payment scheme</title>
  <updated>2023-05-09T22:22:43.145659+00:00</updated>
  <author>
    <name>Gregory Maxwell</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>mailing-list-bitcoin-2014-January-004007</id>
    <title>An idea for alternative payment scheme</title>
    <updated>2023-05-09T22:22:43.145659+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004007.html" rel="alternate"/>
    <summary>In an email conversation dating back to January 3, 2014, Nadav Ivgi suggested a payment scheme where the payer would derive addresses instead of the payee. The proposed system involves the payee publishing their master public key, and the payer generating a random receipt number to derive an address from the public key and make a payment using it. The payer then sends the receipt to the payee, who derives a private key with that receipt and adds it to their wallet. However, another idea was introduced in the email chain where the payee publishes two public keys PP and PP2, and the payer multiplies PP2 by a chosen k value. They then pay to the pubkey PP+n with r in their first signature or in an optional OP_RETURN additional output if none of the txins are ECDSA signed. The payer then advises the payee that PP+(pp2_secret*r) is something they can redeem. Though this scheme has a downside, it offers the advantage that if the payer loses their computer after making the payment, the funds are not lost but remain confidential. These schemes offer an advantage over plain payment protocols as they allow for the first round of communication to be broadcast while still preserving privacy.</summary>
    <published>2014-01-03T18:30:38+00:00</published>
  </entry>
</feed>
