<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2014-January-004240</id>
  <title>BIP70: PaymentACK semantics</title>
  <updated>2023-05-09T22:23:36.479341+00:00</updated>
  <author>
    <name>Pieter Wuille</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>mailing-list-bitcoin-2014-January-004240</id>
    <title>BIP70: PaymentACK semantics</title>
    <updated>2023-05-09T22:23:36.479341+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2014-January/004240.html" rel="alternate"/>
    <summary>In an email exchange between Gavin Andresen and Mike Hearn in 2014, they discussed the issue of broadcasting transactions and the use of PaymentACK. If a wallet is doing automatic CoinJoin, then other participants will typically broadcast the transaction as soon as it's complete. However, if the specification says that wallets must not broadcast until they receive a PaymentACK, then this would violate the spec to do CoinJoin. It was suggested that not broadcasting if a payment_uri is present could minimize the risk of unreliable memo and refund addresses, but there are enough cases where this cannot be enforced. If a payment_url is unavailable, it's recommended to retry and even if you don't care about CoinJoin, not broadcasting the transaction as soon as the inputs are signed adds implementation complexity.</summary>
    <published>2014-01-28T13:09:28+00:00</published>
  </entry>
</feed>
