<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Stats on compact block reconstructions</title>
  <updated>2024-08-07T02:10:42.496070+00:00</updated>
  <author>
    <name>Crypt-iQ 2024-08-06 13:41:52.443000+00:00</name>
  </author>
  <author>
    <name>xBC  . 2024-08-04 15:45:21.037000+00:00</name>
  </author>
  <author>
    <name>xBC  . 2024-08-02 12:08:52.409000+00:00</name>
  </author>
  <link href="delvingbitcoin/Aug_2024/2920_Stats-on-compact-block-reconstructions.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/2913_Stats-on-compact-block-reconstructions.xml" rel="alternate"/>
  <link href="delvingbitcoin/Aug_2024/2911_Stats-on-compact-block-reconstructions.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Stats on compact block reconstructions</title>
    <updated>2024-08-07T02:10:42.496116+00:00</updated>
    <link href="https://delvingbitcoin.org/t/stats-on-compact-block-reconstructions/1052/3" rel="alternate"/>
    <summary>The discussion on the impact of extra pool sizes on block reconstruction delves into several key areas concerning compact block reconstructions, particularly focusing on how these are affected by different mempool sizes and the operational differences between low-bandwidth and high-bandwidth modes. The analysis points out that most compact blocks are transmitted via high-bandwidth mode, which is responsible for around 75% of deliveries. This mode allows for the preemptive sending of a `cmpctblock` message prior to block validation, unlike the low-bandwidth mode which requires a sequence of message exchanges starting with an `inv`/`headers` message. It's observed that blocks received through high-bandwidth mode generally require fewer additional transaction requests for reconstruction, indicating a more streamlined process compared to low-bandwidth mode. Further optimization potential is noted in the low-bandwidth mode's handling of transactions that were not previously known, suggesting enhancements could reduce the need for further transaction requests.

Exploring the nuances of compact block reconstructions reveals insights into their efficiency within the Bitcoin network. Through the use of `debug=cmpctblock` logging, the study examines several aspects including the frequency of needing additional `getblocktxn` -&gt; `blocktxn` round-trips, the composition of transactions in compact blocks, and the effects of node configuration changes on block reconstruction performance. Notably, shifts in node settings, such as increasing maximum connections or adopting full-RBF (Replace-By-Fee) policies, have shown to significantly influence the reconstruction process. Observations during periods of heightened mempool activity illustrate the detrimental effect of network congestion on reconstruction efficiency, with certain adjustments proving effective in mitigating these impacts.

The analysis also highlights the forthcoming update to Bitcoin Core v28.0, which will introduce full-RBF by default, presenting an opportune moment to reevaluate the dynamics between low- and high-bandwidth modes and potentially implement improvements. Additionally, the examination of block reconstruction times, based on whether additional transaction information was required, provides evidence of significant variances influenced by node connectivity and hardware capabilities. This exploration raises pertinent questions about the balance of transaction needs in different bandwidth modes, the role of extra pool sizes in reconstruction efficiency, and the broader implications for network-wide policy adjustments, such as enabling `mempoolfullrbf` by default to improve block propagation times.</summary>
    <published>2024-08-06T13:41:52.443000+00:00</published>
  </entry>
</feed>
