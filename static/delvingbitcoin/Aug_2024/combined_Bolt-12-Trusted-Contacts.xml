<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Bolt 12 Trusted Contacts</title>
  <updated>2024-08-06T02:07:23.770029+00:00</updated>
  <author>
    <name>David Harding 2024-08-05 20:53:19.731000+00:00</name>
  </author>
  <author>
    <name>tbast  . 2024-07-30 15:12:09.428000+00:00</name>
  </author>
  <link href="delvingbitcoin/Aug_2024/2917_Bolt-12-Trusted-Contacts.xml" rel="alternate"/>
  <link href="delvingbitcoin/July_2024/2905_Bolt-12-Trusted-Contacts.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Bolt 12 Trusted Contacts</title>
    <updated>2024-08-06T02:07:23.770069+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bolt-12-trusted-contacts/1046/2" rel="alternate"/>
    <summary>In the realm of digital transactions, particularly when dealing with personal transfers between friends and family, the aspect of mutual authentication emerges as a critical concern. Users desire a system that not only facilitates the transfer of funds but also ensures that the recipient can verify the sender's identity. This scenario raises pertinent questions about the necessity and methods of incorporating cryptographic solutions to authenticate the sender's identity effectively. A proposed solution involves adding a simple text field indicating the sender's name within the encrypted transaction data. While this approach appears straightforward, it potentially opens up risks such as impersonation, where an individual could falsely claim to be someone else during the transaction. Despite these concerns, the flexibility to make payments on behalf of others is recognized as a beneficial feature in certain situations, such as making purchases intended for someone else.

Bolt 12 introduces an innovative approach aimed at enhancing the user experience in lightning wallets by mimicking traditional payment applications. It achieves this through the attachment of offers to metadata, enabling users to maintain a contacts list and execute payments without the need for manually sharing Bolt 11 invoices. This development addresses the challenge of ensuring mutual authentication while safeguarding the privacy of both parties involved in the transaction. The proposal outlines two distinct methods for distributing keys necessary for this process. The first method suggests incorporating a new TLV field within Bolt 12 offers, facilitating integration with current lightning solutions but potentially leading to redundancy issues. Alternatively, the second method recommends utilizing an optional query parameter in BIP21 URIs, drawing upon Matt Coral's enhancement proposal. This aims to reduce duplication but might result in larger QR codes and necessitates the adoption of BIP21 URIs over plain offers.

In striving for mutual authentication, several strategies are explored. These include directly utilizing the `invreq_payer_id` field, deriving unique identifiers per contact, or employing bLIP-31 for mutual message authentication. Each option presents its own set of advantages and drawbacks, ranging from simplicity and potential privacy concerns to complexity and limitations in scalability and compatibility. The discussion culminates in a call for feedback from developers and implementers on selecting the most effective method for enabling selective identity revelation in Bolt 12 payments. The ultimate aim is to refine [bLIP 42](https://github.com/lightning/blips/pull/42) based on community insights, fostering a standard that optimizes the user experience while upholding the principles of privacy and security.</summary>
    <published>2024-08-05T20:53:19.731000+00:00</published>
  </entry>
</feed>
