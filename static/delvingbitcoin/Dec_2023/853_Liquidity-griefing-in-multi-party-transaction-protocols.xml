<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Liquidity griefing in multi-party transaction protocols</title>
  <updated>2023-12-29T19:43:58.860140+00:00</updated>
  <author>
    <name>morehouse 2023-12-22 21:52:24.874000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Liquidity griefing in multi-party transaction protocols</title>
    <updated>2023-12-29T19:43:58.860140+00:00</updated>
    <link href="https://delvingbitcoin.org/t/liquidity-griefing-in-multi-party-transaction-protocols/264/8" rel="alternate"/>
    <summary>The envisioned post-cluster mempool scheme aims to mitigate pinning attacks and witness inflation by implementing a requirement where transactions must be in the top block to enter the mempool. This approach would facilitate batch Child Pays for Parent (CPFP) without the necessity of having no unconfirmed ancestors and enhance the safety of ANYONECANPAY transactions, such as those used in Hash Time Locked Contracts (HTLCs). 

However, despite these improvements, issues with conflicting transactions remain. These transactions could bypass opt-in rules by broadcasting a low feerate transaction that opts out of the top block policy and then using low feerate descendants to reach the cluster limit. Such strategies could lead to mempool partitioning where victims are unaware of conflicts, thus preventing the propagation of honest joint transactions. In extreme cases, this could result in liquidity being locked until the conflicting transaction is confirmed. If confirmation delays occur, victims might unlock UTXOs but will still face a lockup until the timeout. Additionally, a small Replace-By-Fee (RBF) penalty may be required to include any double-spend transaction in the victim's mempool if the conflict has not yet been confirmed.

This problem parallels the current challenges with opt-in RBF, whose eventual resolution is leaning towards mandatory RBF (full RBF). However, it's unclear whether a similar path should be taken regarding the top block policy due to the potential implications.</summary>
    <published>2023-12-22T21:52:24.874000+00:00</published>
  </entry>
</feed>
