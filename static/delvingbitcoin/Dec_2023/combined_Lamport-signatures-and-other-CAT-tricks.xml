<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lamport signatures and other CAT tricks</title>
  <updated>2024-02-12T01:55:17.548611+00:00</updated>
  <author>
    <name>cguida 2024-02-11 22:49:38.527000+00:00</name>
  </author>
  <author>
    <name>moonsettler 2024-02-11 22:04:22.542000+00:00</name>
  </author>
  <author>
    <name>harding 2024-02-11 19:03:26.496000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2024-02-09 11:24:28.710000+00:00</name>
  </author>
  <author>
    <name>harding  . 2024-02-09 03:13:23.990000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2024-02-08 22:19:48.787000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-05 15:06:11.870000+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj  . 2023-12-05 12:33:44.469000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-03 15:52:18.925000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-03 15:24:03.158000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2023-12-03 15:09:21.396000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-03 14:55:34.004000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2023-12-03 12:14:11.259000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-03 10:33:10.074000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2023-12-03 07:39:02.642000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-03 00:47:43.909000+00:00</name>
  </author>
  <link href="delvingbitcoin/Feb_2024/1513_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1512_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1511_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1497_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1494_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1492_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/619_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/615_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/554_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/553_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/552_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/551_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/550_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/549_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/548_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/546_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lamport signatures and other CAT tricks</title>
    <updated>2024-02-12T01:55:17.548725+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lamport-signatures-and-other-cat-tricks/236/16" rel="alternate"/>
    <summary>Recent discussions among programmers have focused on advanced blockchain technology, particularly involving the Lightning Network and Bitcoin scripting. These conversations have addressed the movement of channel coins in off-chain transactions, emphasizing the need for detailed information like settlement transaction data to maintain smooth operations. The integrity of channel state is maintained through parameters such as `nLockTime` and multiple hashes representing different contract states. There is a suggestion to secure state transitions by adding an SHA256 layer to CheckTemplateVerify (CTV) template hashes and possibly reintroducing a restricted `OP_CAT` operation.

In terms of Bitcoin scripting enhancements, there is a proposal for a soft fork introducing Pay to X Script Hash (P2XSH), which would use `OP_HASH256 OP_EQUAL` to support complex scripts and provide quantum resistance. Versioning scripts as tapleaf structures could further extend script capabilities. However, there is skepticism about the practicality of implementing certain features, like CAT via soft-fork, within Bitcoin's existing structure.

Security discussions have included proposals for mandatory disclosures to strengthen validation processes and concerns over keyspends being targeted by attackers, suggesting a 'quantum proof exit hatch' for treasuries. The resilience of script path spends is considered reliable as long as SHA256 remains preimage resistant. The community is debating verification methods for keyspend operations, recognizing potential exploitations by adversaries, and considering enforcing script-only transactions while retaining current address formats.

Finally, there is concern over the discrete logarithm problem potentially compromising transaction privacy, underscoring the necessity for robust cryptographic practices. Proposals include enhancing taproot security with a soft-fork to mitigate quantum vulnerabilities, establishing quantum-resistant Pay-to-Taproot (P2TR) outputs, and using a Nothing-Up-My-Sleeve (NUMS) point as a quantum-safe placeholder.

Technical insights into optimizing Merkle tree scripting involve single-use public keys generated from commitments linked to nonces and bytes. Optimizations may include a `DIVMOD` operation for stack computations and an `OP_STR_LESSTHAN` operation for byte vector comparisons. A blockchain-based script designed for signature data around 4-5KB discussed its application on an Inquisition signet, handling elements like hashes, merkle control bytes, and sighash bytes with a sophisticated verification system. The viability of integrating quantum-resistant signatures within P2TR outputs and updating taproot via a soft fork is also examined. This involves a cryptographic procedure using an alt-stack, concatenation, hashing, and swapping to validate a Merkle tree, ensuring transaction compliance and maintaining user privacy with deterministic public keys.</summary>
    <published>2024-02-11T22:49:38.527000+00:00</published>
  </entry>
</feed>
