<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merging incomparable linearizations</title>
  <updated>2023-12-29T19:10:37.940133+00:00</updated>
  <author>
    <name>ajtowns 2023-12-04 08:44:31.802000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merging incomparable linearizations</title>
    <updated>2023-12-29T19:10:37.940133+00:00</updated>
    <link href="https://delvingbitcoin.org/t/merging-incomparable-linearizations/209/40" rel="alternate"/>
    <summary>In the process of optimizing transaction ordering within a block, a programmer explores a scenario where post-processing may not improve transaction selection. The example includes six transactions, labeled A through E, and an additional parent transaction P. These transactions vary in size and fee rate, with P being 100vB at 0 sat/vb and the others being 10kvB each, with fee rates of 50, 30, 10, 80, and 0 sat/vb respectively. Transactions A and D are dependent on the output from P.

The programmer outlines a series of steps to illustrate that despite post-processing efforts, the optimal order of transactions is not achieved. Initially, two lists, L1 and L2, are created to simulate different transaction sequences, with associated chunks and their corresponding fee rates. In both arrangements, transaction P is prioritized due to its dependency linkage with A and D. Through a comparison between the two lists, it's observed that when repeating the process by prioritizing transactions with equal fee rates, the result is an inefficient sequencing of transactions.

The following sequence L=PADBCE results after several iterations, where transactions are compared and ordered based on their fee rates and dependencies. Throughout this example, the post-processing steps marked with asterisks demonstrate an attempt to reorganize the transaction sequences for better optimization. Despite these efforts, the issue remains that a low-fee parent transaction can impact the ordering significantly, leading to a suboptimal outcome even after post-processing. This example serves as a critical analysis of the limitations inherent in certain post-processing strategies within transaction selection algorithms.</summary>
    <published>2023-12-04T08:44:31.802000+00:00</published>
  </entry>
</feed>
