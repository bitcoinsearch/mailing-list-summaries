<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lamport signatures and other CAT tricks</title>
  <updated>2023-12-30T10:30:39.276511+00:00</updated>
  <author>
    <name>sipa 2023-12-03 15:09:21.396000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lamport signatures and other CAT tricks</title>
    <updated>2023-12-30T10:30:39.276511+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lamport-signatures-and-other-cat-tricks/236/6" rel="alternate"/>
    <summary>The discussion focuses on the robustness of key path spends in a scenario where the Discrete Logarithm (DL) problem is no longer considered computationally hard. Key path spends are acknowledged as simply BIP340 signatures that correspond to the key present in the output, which is generally a tweaked version of the original key. The inherent risk of relying on the hardness of the DL problem for security is highlighted, emphasizing that if this assumption fails, the only recourse would be to disable key path spends altogether.

The resilience of script path spends against potential cryptographic vulnerabilities in the context of the DL problem is also examined. It is pointed out that script path spends maintain their security on the condition that SHA256 continues to be preimage resistant. However, this statement comes with a crucial caveat: the security assurance is valid only if the script itself does not contain any weaknesses that could be exploited through a breakthrough in solving the DL problem. This underscores the importance of having secure scripts in conjunction with reliable cryptographic functions to ensure overall system security.</summary>
    <published>2023-12-03T15:09:21.396000+00:00</published>
  </entry>
</feed>
