<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>A High-Privacy Key-Value Store</title>
  <updated>2023-12-30T10:44:00.866392+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-12-05 14:25:53.350000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>A High-Privacy Key-Value Store</title>
    <updated>2023-12-30T10:44:00.866392+00:00</updated>
    <link href="https://delvingbitcoin.org/t/a-high-privacy-key-value-store/253" rel="alternate"/>
    <summary>The development of a privacy-centric remote storage system is being investigated, with a focus on using cryptographic techniques to limit the service provider's knowledge about its clients. The system would employ a client-server architecture, where public keys act as identifiers for fixed-size encrypted data blocks stored in a key-value fashion. Clients have the ability to add or delete data after proving ownership and can retrieve their information. To avoid unauthorized access, the data blobs are encrypted. 

A financial model based on Chaumian-bank-like tokens has been proposed to fund the service while maintaining user privacy. These tokens are used by clients to execute operations such as inserting or deleting data. WabiSabi credentials are suggested to manage token values, enabling transfers and providing better privacy than traditional systems. Additionally, an epoch-based mechanism is designed to manage the invalidation and reissuance of spent tokens, thus limiting the server's burden of retaining obsolete tokens.

The storage system includes a "break glass" option for emergency data recovery, allowing clients to regain access to their data using their root private key. This recovery store is more expensive and has an automatic deletion feature to discourage misuse. In terms of client operation, unique public keys derived from a root private key can be created for individual pieces of data. For instance, in the c-lightning implementation, `db_write` hooks with a counter allow for a sequence of linked data batches, which facilitates data restoration. The LDK employs individual channel counters to keep track of lightning network channel updates. This concept is adaptable and could support various data storage structures, leading to potential key-value stores built upon this system.

To ensure anonymity at the transport level, direct TCP connections are considered inadequate due to the risk of traffic analysis. Alternatives like Tor are mentioned, but they require clients to use new circuits for each request to prevent correlation. Lightning Network Onion Messages (LN OM) are suggested as a viable method due to their request-response structure, which lowers the likelihood of clients being identified by their access patterns.

Additionally, advancements in Lightning Network client capabilities reveal how LN key-value store services can improve client privacy through multiple circuit creation to the service, which helps avoid behavioral profiling. This is exemplified by an LN client's ability to send onion messages via various nodes to conceal their actions. Despite these benefits, concerns exist regarding LN OM's capacity to handle BOLT12 invoice requests due to potential bandwidth issues. LN OM is favored over OHTTPâ€™s single-hop approach and Tor's persistent TCP tunnels for its enhanced privacy features. However, accommodating increased bandwidth within LN without sacrificing privacy remains a challenge that requires further exploration.</summary>
    <published>2023-12-05T14:25:53.350000+00:00</published>
  </entry>
</feed>
