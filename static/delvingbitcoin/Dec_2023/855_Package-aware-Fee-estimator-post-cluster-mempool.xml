<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Package aware Fee estimator post cluster mempool</title>
  <updated>2023-12-29T19:42:26.085796+00:00</updated>
  <author>
    <name>ismaelsadeeq 2023-12-23 11:10:35.539000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Package aware Fee estimator post cluster mempool</title>
    <updated>2023-12-29T19:42:26.085796+00:00</updated>
    <link href="https://delvingbitcoin.org/t/package-aware-fee-estimator-post-cluster-mempool/312/4" rel="alternate"/>
    <summary>In the process of managing transaction chunks within a blockchain network, it is advisable to consider both individual transactions and collections of transactions as chunks. Upon the arrival of a new block, the recommended procedure is to linearize said block in order to obtain a sequential arrangement of chunks. A successful match occurs when there's concordance between a chunkâ€™s transactions and its fee rate. In such cases, the matched chunk is then removed from consideration.

When an exact match is not found, the corresponding transactions should be eliminated from the fee estimator mapMempoolTxs as well as the blockIndex. It becomes pertinent for the mempool to communicate with the fee estimator regarding new chunks, updated chunks, and the eviction of chunks. Discrepancies in fee rates may arise due to several reasons, including variances in mempool compositions, differences in the linearization algorithms used, or partial mining of a transaction package.

To maintain system integrity, it is suggested that mismatches in fee rates attributable to these reasons be overlooked. This approach ensures reliance on the local mempool data, echoing sentiments previously expressed by developer 'sipa'. The strategy aims at minimizing potential errors and aligning with established best practices for handling transaction chunks within the blockchain space.</summary>
    <published>2023-12-23T11:10:35.539000+00:00</published>
  </entry>
</feed>
