<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Group Penalty Channels</title>
  <updated>2023-12-22T19:18:48.341761+00:00</updated>
  <author>
    <name>aakselrod 2023-12-20 05:29:17.014000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Group Penalty Channels</title>
    <updated>2023-12-22T19:18:48.341761+00:00</updated>
    <link href="https://delvingbitcoin.org/t/group-penalty-channels/309" rel="alternate"/>
    <summary>The discourse on group penalty channels suggests an innovative approach to multi-party channel structures that deviate from the traditional requirement of unilateral, non-interactive, individual exits to layer 1 in blockchain networks. The proposition revolves around designing systems where groups such as unions, co-ops, or family budgets operate under the principle of collective ownership, requiring members to trust and cooperate with one another to prevent Sybil attacks. These systems are envisioned to make joint budgetary decisions in a democratic manner, possibly delegating funds to subgroups based on their roles or priorities. Liquidity provision across different groups or channel types could be facilitated by liquidity providers who bridge trust gaps.

The proposed designs emphasize the use of threshold signatures to enforce spending policies within these group structures. Thresholds are calibrated to ensure that smaller subgroups delegate less trust and rely more on the consensus of the larger group. Furthermore, the current design leverages off-chain pre-signed transactions as a replacement for covenants, although it recognizes that on-chain covenants could potentially enhance efficiency and are still relevant for nested channels within group penalty channels.

A core element of the design is the On-chain Time-Decay Threshold (TDT) output, which initiates a timer to agree on fund distribution upon confirmation of a transaction containing it. This output has a P2TR format with an internal key representing the maximum required threshold for immediate spend. Different redemption options are available through tapleaves, with the spend threshold decreasing as the CSV delay increases. Specifically, disaster recovery tapleaves permit thresholds below 50% but entail very long CSV delays.

Another vital component is the Revocable Off-Chain Time Decay Threshold (RTDT) output designed for single-group contexts. It functions similarly to TDT outputs but exists within off-chain transactions for either the top-level group or subgroups. These outputs facilitate replaceable transactions and money allocation between subgroups. A signed `tlCommit` script path, redeemable after a CSV revocation delay, commits to a state where the output is valid. To revoke a state, the group co-signs a key path spend leading to a transaction with a TDT output, creating a "group penalty" whereby the entire balance of the revoked output is subject to a democratic decision-making process.

The concept also extends to dual-group modified Taproot channels, allowing for TDT outputs in a channel between two groups. Various outputs are utilized for different purposes: local delays, revocations, HTLC success, and HTLC timeout, all incorporating threshold keys and NUMS points to address potential nesting issues. This system ensures that even in case of breaches, the remote party can access the TDT outputs due to the absence of reliance on private keys for the taproot internal key.

Finally, the email acknowledges contributions from various reviewers and discussants, indicating a collaborative effort in refining the ideas presented.</summary>
    <published>2023-12-20T05:29:17.014000+00:00</published>
  </entry>
</feed>
