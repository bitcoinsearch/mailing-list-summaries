<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Quick peer gossip catchup protocol</title>
  <updated>2023-12-30T10:40:53.741705+00:00</updated>
  <author>
    <name>rustyrussell 2023-12-06 05:06:18.586000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Quick peer gossip catchup protocol</title>
    <updated>2023-12-30T10:40:53.741705+00:00</updated>
    <link href="https://delvingbitcoin.org/t/quick-peer-gossip-catchup-protocol/251/3" rel="alternate"/>
    <summary>The latest discussion revolves around the intricacies of enhancing network protocols with a focus on the gossip protocol version 1.5, which is essential for implementing 'minisketch', a library for set reconciliation. The conversation notes that even with a limited number of peers – potentially as few as one – this upgrade may be beneficial during the process of 'catching up' with network states.

In analyzing a separate suggestion related to timestamp filtering, it's revealed that there's an alternative approach based on the time at which gossip data is committed rather than the timestamps themselves. By logging the time when gossip information is recorded and considering a standard 60-second relay time, the system can estimate quite accurately when a peer last received new gossip by subtracting 120 seconds from the current time.

Furthermore, the existing infrastructure already contains a "timestamp" field within the gossip_store header. This field, initially a duplicate of the update timestamp, was previously utilized for timestamp filtering, a feature no longer supported. It is highlighted that this field can now be repurposed without necessitating a format change.

Finally, the correspondence suggests the necessity of maintaining offset markers to prevent the need for sweeping the entire file when searching for specific time-related data. This proposal is deemed as not only feasible but also extremely implementable, suggesting potential improvements in the efficiency of processing gossip data.</summary>
    <published>2023-12-06T05:06:18.586000+00:00</published>
  </entry>
</feed>
