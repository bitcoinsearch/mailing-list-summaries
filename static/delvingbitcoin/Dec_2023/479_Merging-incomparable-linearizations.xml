<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merging incomparable linearizations</title>
  <updated>2023-12-29T19:12:29.293963+00:00</updated>
  <author>
    <name>sipa 2023-12-02 22:12:48.137000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merging incomparable linearizations</title>
    <updated>2023-12-29T19:12:29.293963+00:00</updated>
    <link href="https://delvingbitcoin.org/t/merging-incomparable-linearizations/209/10" rel="alternate"/>
    <summary>In the domain of optimizing transaction ordering for blockchains, specifically Bitcoin, a new approach to merging linearizations has been proposed and is under scrutiny. The concept revolves around manipulating transactions within blocks to create more efficient structures without decreasing the overall feerateâ€”a measure of the transaction fee relative to its size. A proof sketch suggests that it's possible to improve or, at least, not worsen the organization of transactions by adopting a prefix-intersection merging algorithm.

This algorithm operates by comparing two sequences of transactions, known as linearizations. It identifies common transactions at the beginning of these sequences and reorganizes them in a way that either maintains or improves the feerate efficiency. The restructuring involves moving certain transactions forward in the sequence to form a new group, or "chunk," while ensuring that this new chunk has a feerate greater than or equal to the first chunk's feerate in any given linearization. This condition is critical because it ensures that the economic incentives for miners are preserved or enhanced.

The algorithm also assumes that rearranging transactions within an individual chunk does not negatively impact the feerate; at worst, the outcome remains unchanged, and at best, it further subdivides into more chunks, potentially increasing efficiency. Each step in this iterative process is designed to move some transactions to the front of both linearizations being merged without degrading their respective feerate diagrams.

The core logic of the algorithm dictates that if the intersection of transactions is found in the first chunk of one linearization, then those transactions can be reordered according to the second linearization without any negative consequences. If a new chunk is moved to the front of the second linearization with a higher or equal feerate compared to its original first chunk, the order within the moved and non-moved transactions is maintained, validating the process.

As the algorithm progresses, the linearizations gradually become identical by consistently moving the intersecting transactions to the front. Consequently, the final linearization resulting from this algorithm is theorized to be more efficient than or at least equivalent to the original sequences. Further details and a formal proof of this concept are available for scrutiny and discussion within the community [here](https://delvingbitcoin.org/t/merging-incomparable-linearizations/209/28).</summary>
    <published>2023-12-02T22:12:48.137000+00:00</published>
  </entry>
</feed>
