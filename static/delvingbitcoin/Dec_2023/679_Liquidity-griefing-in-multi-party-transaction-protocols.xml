<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Liquidity griefing in multi-party transaction protocols</title>
  <updated>2023-12-30T10:48:50.742493+00:00</updated>
  <author>
    <name>instagibbs 2023-12-07 14:35:49.640000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Liquidity griefing in multi-party transaction protocols</title>
    <updated>2023-12-30T10:48:50.742493+00:00</updated>
    <link href="https://delvingbitcoin.org/t/liquidity-griefing-in-multi-party-transaction-protocols/264/3" rel="alternate"/>
    <summary>The recent Lightning specification meeting raised concerns regarding the use of p2tr (Pay to Taproot) as a viable input type for Lightning transactions, specifically when accompanied by a proof that restricts spending to key-path spends. The risk identified involves the potential for witness size inflation through the annex field, which is currently not standardized across Bitcoin implementations due to this security concern. It is crucial that any standardization of the annex relay prevents such exploitation.

Active research in the Bitcoin community is addressing these and other related issues, focusing on developments like package relay, version 3 (v3) transactions, ephemeral anchors, and cluster mempool. The initial approach targets commitment transaction styles exclusively. Looking ahead, there are two possible pathways for further development: one where v3 transactions become widely adopted, leading to the implementation of ad-hoc rules and additional bits to aid with specific situations like dual funding, splicing, and HTLCs (Hashed Time-Locked Contracts). Alternatively, post-cluster mempool innovations could lead to a more generalized opt-in method that would allow for the relaxation of v3 constraints. This would facilitate safer dual-funding and splicing scenarios, while existing users employing the new bit would maintain their current operations.</summary>
    <published>2023-12-07T14:35:49.640000+00:00</published>
  </entry>
</feed>
