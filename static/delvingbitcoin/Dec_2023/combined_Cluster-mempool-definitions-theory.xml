<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Cluster mempool definitions &amp; theory</title>
  <updated>2023-12-30T11:19:29.538134+00:00</updated>
  <author>
    <name>sipa  . 2023-12-24 01:51:21.033000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2023-12-18 18:11:47.314000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-12-12 13:52:13.491000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-12-11 04:57:05.856000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2023-12-11 01:16:32.565000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-12-10 23:42:27.306000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2023-12-10 22:11:26.577000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-12-10 18:20:05.944000+00:00</name>
  </author>
  <author>
    <name>murch 2023-12-10 15:26:45.964000+00:00</name>
  </author>
  <link href="delvingbitcoin/Dec_2023/859_Cluster-mempool-definitions-theory.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/434_Cluster-mempool-definitions-theory.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/717_Cluster-mempool-definitions-theory.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/708_Cluster-mempool-definitions-theory.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/707_Cluster-mempool-definitions-theory.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/706_Cluster-mempool-definitions-theory.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/705_Cluster-mempool-definitions-theory.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/704_Cluster-mempool-definitions-theory.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/702_Cluster-mempool-definitions-theory.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Cluster mempool definitions &amp; theory</title>
    <updated>2023-12-30T11:19:29.538134+00:00</updated>
    <link href="https://delvingbitcoin.org/t/cluster-mempool-definitions-theory/202/9" rel="alternate"/>
    <summary>Recent developments in directed set theory have significantly advanced our understanding of transaction graph linearizations, showing their optimality within the framework. Directed sets help establish order in systems, leading to a merging algorithm that simplifies the proof of optimality for the function $\operatorname{opt}(G)$, marking progress in this field.

In cluster mempool theory, transaction graphs are seen as directed acyclic graphs (DAGs) where vertices represent transactions and edges denote dependencies. These graphs are clustered for bidirectional traversal, with an emphasis on calculating feerates based on cumulative fees and sizes. Linearization involves arranging transactions in a topologically sorted manner, while chunking divides them into ordered segments with declining feerates. The aim is to find optimal linearizations or chunkings that surpass or match all others for a given graph, using feerate diagrams for comparison. Optimal configurations preserve topological order and do not degrade feerate diagrams, with merging functions combining and potentially improving linearizations based on feerates.

The discussion also explores the possibility that prioritizing smaller chunks at the end of a block might enhance selection processes, although this advantage is uncertain. It acknowledges scenarios where no unique 'perfect' linearization exists due to equally valid alternatives, necessitating arbitrary decisions. Proving the uniqueness and existence of an optimal linearization can involve counting superior linearizations or using maximal elements among valid ones, yet sometimes merging complicates these proofs.

Moreover, there's consideration of redefining optimality to favor breaking chunks into smaller, equal-feerate subsets. This redefinition could lead to a stricter concept of 'perfect linearization,' which would consider the validity of topology at chunk borders and the internal order within chunks. The aim is to refine optimality definitions in light of factors like chunk sizes and feerates.

In geometric terms, chunking for a graph is defined as a list of transaction sets forming a partition with monotonically decreasing feerates and proper topological ordering. A correspondence theorem relates each linearization to a unique chunking, independent of merge order, and a chunk reordering theorem suggests intra-chunk reordering improves linearization quality.

Debate continues over the optimal chunk definition, considering whether it should only include connected components with identical feerates or extend to disconnected components as well. To ensure precision, it may be necessary to clarify that the topology should be valid within chunks, not just at borders. A more robust concept of very-optimality might account for both the diagram configuration and the topological validity of sub-chunk feerates, implying chunks in an optimal linearization should not be further divisible without changing feerates.</summary>
    <published>2023-12-24T01:51:21.033000+00:00</published>
  </entry>
</feed>
