<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merging incomparable linearizations</title>
  <updated>2023-12-29T19:11:00.696836+00:00</updated>
  <author>
    <name>ajtowns 2023-12-04 06:45:08.147000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merging incomparable linearizations</title>
    <updated>2023-12-29T19:11:00.696836+00:00</updated>
    <link href="https://delvingbitcoin.org/t/merging-incomparable-linearizations/209/39" rel="alternate"/>
    <summary>When working with two lists, L1 and L2, which are [5,3,1,8,0] and [0,8,1,3,5] respectively, the algorithm bestPi is utilized to merge these lists by taking into consideration the common elements and their respective chunk feerates. In this case, L1 has chunk feerates of 5, 4, and 0, and L2 has chunk feerates of 4 and 3. Following the methodology of bestPi, starting with the intersection of L2 and the singleton list containing the element 5, results in an output list of [5,8,3,1,0]. This approach might differ from an alternative method where $C_1$ and $C_2$ are calculated and compared, which would yield a different result: [8,5,3,1,0].

Furthermore, it's suggested that even if there are discrepancies in the output, post-processing techniques as discussed in a linked forum thread on linearization and chunking may resolve inconsistencies for simpler cases. The underlying principle is that as long as the merging process yields a result that is at least as optimal as the original lists, the efficiency and cost-effectiveness of the process take precedence over absolute accuracy. This practical approach prioritizes speed and reduced computational expense over perfection in the merging process.</summary>
    <published>2023-12-04T06:45:08.147000+00:00</published>
  </entry>
</feed>
