<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merging incomparable linearizations</title>
  <updated>2023-12-29T19:11:59.924360+00:00</updated>
  <author>
    <name>sipa 2023-12-03 18:44:47.046000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merging incomparable linearizations</title>
    <updated>2023-12-29T19:11:59.924360+00:00</updated>
    <link href="https://delvingbitcoin.org/t/merging-incomparable-linearizations/209/37" rel="alternate"/>
    <summary>The concept of prefix-intersection merging in the context of linearizations presents an intriguing characteristic: it is not associative. When working with three distinct linearizations—denoted as A, B, and C—of a specific cluster, the process of combining them does not yield a uniform result. The different ways to merge these linearizations illustrate this non-associativity:

1. When A and B are merged first, followed by the merger with C.
2. When A and C are merged initially, and then combined with B.
3. When B and C are merged together first, and subsequently merged with A.

This phenomenon persists regardless of whether any post-processing is applied to the inputs, intermediary results, or final outputs. The term "post-processing" here refers to the techniques that may be employed after the initial merging process, which can include advanced methods such as those detailed in discussions about [linearization post-processing](https://delvingbitcoin.org/t/linearization-post-processing-o-n-2-fancy-chunking/201). These methods aim to refine or enhance the resulting merged linearization but do not alter the fundamental non-associative property observed in prefix-intersection merging.</summary>
    <published>2023-12-03T18:44:47.046000+00:00</published>
  </entry>
</feed>
