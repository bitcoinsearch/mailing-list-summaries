<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merging incomparable linearizations</title>
  <updated>2023-12-29T19:09:19.188450+00:00</updated>
  <author>
    <name>sipa 2023-12-04 21:36:19.239000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merging incomparable linearizations</title>
    <updated>2023-12-29T19:09:19.188450+00:00</updated>
    <link href="https://delvingbitcoin.org/t/merging-incomparable-linearizations/209" rel="alternate"/>
    <summary>In the field of blockchain transaction processing, developing optimal linearizations for clusters is a critical task for improving efficiency. An interesting challenge arises when one has an existing linearization and then receives another from a peer. The key question is how to combine these two potentially different solutions to create a superior linearization. Optimal linearizations are characterized by their fee-size diagrams, which plot cumulative (size, fee) points as segmented lines; a linearization is deemed better if its diagram is above that of another.

The simplest merging technique known thus far involves comparing prefixes of unprocessed transactions from two linearizations and including the higher-fee rate transactions in the new sequence. This best-chunk merging algorithm is straightforward but computationally expensive with a quadratic time complexity, and it does not guarantee a resultant linearization better than both inputs. In practice, this can result in an output that is no better than choosing one of the input linearizations.

An extension of this method includes checking for intersections between the highest-fee rate prefixes of both linearizations. While this intersection merging algorithm maintains the same computational complexity, it still fails to consistently yield a better solution.

To address these shortcomings, a more comprehensive approach called prefix-intersection merging has been proposed. This advanced technique examines all possible intersections between prefixes of the two input linearizations, specifically focusing on those involving the best chunk of either input. By incrementally computing intersections and retaining the best set of transactions, this method promises to find a linearization that is strictly better than both given inputs if they are incomparable, or at least as good as the better input if they are comparable, without requiring the inputs to adhere to certain quality standards or connected chunks. Although this approach seems promising, it currently lacks formal proof of its efficacy. Further details and discussion on the topic can be found on the dedicated [linearization post-processing thread](https://delvingbitcoin.org/t/linearization-post-processing-o-n-2-fancy-chunking/201/6).</summary>
    <published>2023-12-04T21:36:19.239000+00:00</published>
  </entry>
</feed>
