<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Quick peer gossip catchup protocol</title>
  <updated>2023-12-30T10:41:13.697798+00:00</updated>
  <author>
    <name>MattCorallo 2023-12-05 05:49:50.566000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Quick peer gossip catchup protocol</title>
    <updated>2023-12-30T10:41:13.697798+00:00</updated>
    <link href="https://delvingbitcoin.org/t/quick-peer-gossip-catchup-protocol/251/2" rel="alternate"/>
    <summary>The communication touches upon the challenges faced in maintaining an efficient and updated gossip protocol within a peer-to-peer network. The sender expresses concerns over the current methodology of tracking and storing gossip messages, especially considering the limitations of only keeping track for channel announcements and not updates. The sender proposes a hypothetical solution that would enable peers to identify new gossip messages by referencing the last known block header or timestamp from when they were online. This approach assumes that peers are capable of tracking the receipt time of all gossip messages, which is not currently the case.

The email suggests a shift away from continuously patching the existing gossip system with temporary fixes, hinting at potential inefficiencies and a preference for a more robust and long-term solution. The proposed alternative is to implement Minisketch, a reconciliation algorithm designed to efficiently synchronize set differences between nodes within a network. This technology promises to streamline the process by eliminating the need to maintain per-peer storage for tracking gossip message history, addressing the problem at its core rather than layering on short-term solutions.

Overall, the sender advocates for the adoption of Minisketch as a means to advance beyond the current limitations of the gossip protocol. By doing so, there is an implication that the peer-to-peer network could enhance its performance, reduce storage requirements, and simplify the process of managing and disseminating updates across the network.</summary>
    <published>2023-12-05T05:49:50.566000+00:00</published>
  </entry>
</feed>
