<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Cluster Mempool RBF Thoughts</title>
  <updated>2023-12-29T18:59:05.165605+00:00</updated>
  <author>
    <name>instagibbs 2023-12-05 19:00:58.515000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Cluster Mempool RBF Thoughts</title>
    <updated>2023-12-29T18:59:05.165605+00:00</updated>
    <link href="https://delvingbitcoin.org/t/cluster-mempool-rbf-thoughts/156/15" rel="alternate"/>
    <summary>The email content addresses a technical challenge concerning the Replace-by-Fee (RBF) policy in the context of transaction management, specifically dealing with cluster merging and path dependency issues. In scenarios where clusters C2 to C5 are not visible but P11 to P99 are, a direct RBF from C1 to C6 would incorrectly appear as if it's merging an excessively high number of clusters, surpassing the allowed limit. This highlights the problematic nature of the current system, which is overly dependent on the order of operations and can be affected without any malicious interference.

To refine the process and manage its complexity, a new metric is proposed. Instead of focusing on the number of affected clusters, the suggestion is to consider the total number of transactions within these clusters. The criterion for evaluating an RBF could be whether the number of affected transactions remains under 2,500. This adjustment aims to accommodate straightforward Child-Pays-For-Parent (CPFP) patterns up to the cluster limits while maintaining a check on the scope of diagramming required for assessment.

However, even with this proposed metric, there remains a risk in adversarial scenarios. A potential attacker could exploit the RBF/CPFP mechanism by manipulating around 25 separate clusters, assuming each bumped transaction is part of a cluster at maximum capacity. This leaves room for further contemplation on how to secure the transaction process against such vulnerabilities.</summary>
    <published>2023-12-05T19:00:58.515000+00:00</published>
  </entry>
</feed>
