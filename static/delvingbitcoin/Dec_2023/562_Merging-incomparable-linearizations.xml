<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merging incomparable linearizations</title>
  <updated>2023-12-29T19:08:37.028857+00:00</updated>
  <author>
    <name>sipa 2023-12-05 19:47:48.383000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merging incomparable linearizations</title>
    <updated>2023-12-29T19:08:37.028857+00:00</updated>
    <link href="https://delvingbitcoin.org/t/merging-incomparable-linearizations/209/44" rel="alternate"/>
    <summary>The discussion revolves around the comparison of two linearization algorithms, bestPi and the original PiMerge, in terms of their performance and output. The sender leans toward using the original PiMerge algorithm since the performance difference between the two is not substantial enough to warrant a change. Moreover, the sender highlights that merging processes are not necessarily commutative; this characteristic becomes apparent when dealing with linearizations that have different initial chunks at equal feerates.

A specific example is provided to illustrate this point. Five transactions labeled A through E, all the same size but having different fees, are processed through both linearizations resulting in varied outcomes. Two different chunked sequences are generated from each linearization algorithm (L1 and L2). When merged, each pair (L1 with L2, and L2 with L1) produces a distinct sequence and chunking. This supports the argument that the choice of linearization can influence the outcome even if the subsets have the same feerate.

The sender initially suggests that selecting smaller sizes as a tie-breaker when equal-feerate chunks are encountered could be beneficial within the algorithms, as it might prevent the accidental merging of such subsets. However, a counterexample is then edited into the message, demonstrating a scenario where the chosen tie-breaker indeed affects the fee-size diagram. The counterexample clearly shows how different merging orders (Merge(L1,L2) versus Merge(L2,L1)) lead to distinct chunkings, implying that the choice of tie-breaker in this context does matter. This insight may influence future considerations on how to handle equal-feerate situations within linearization algorithms.</summary>
    <published>2023-12-05T19:47:48.383000+00:00</published>
  </entry>
</feed>
