<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>LN OM-mixer services</title>
  <updated>2023-12-30T10:27:29.751624+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-12-01 14:44:59.078000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>LN OM-mixer services</title>
    <updated>2023-12-30T10:27:29.751624+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ln-om-mixer-services/228" rel="alternate"/>
    <summary>The Lightning Network's onion messaging (OM) system is designed as a rate-limited and potentially backpressured communication method, with the characteristic of dropped messages under high load being an acceptable part of its design. Unlike Tor, which correlates messages within a single TCP tunnel, the OM system benefits from less correlatable messages due to the possibility of utilizing multiple paths for sending and receiving—each message can travel independently, enhancing privacy. This decentralization of message paths becomes particularly beneficial in request-response protocols where different circuits can be used for each direction of communication.

However, issues arise when considering the relationship between clients and Lightning Service Providers (LSPs). Clients typically have limited channels—direct connections or commitments—to their LSP, which handles liquidity management. This restricted network topology can lead to challenges in both sending OMs due to rate-limiting by other nodes and receiving them since they cannot use arbitrary nodes for reception. If clients depend solely on their LSP for sending OMs, the LSP could potentially correlate the timing of these messages with other client activities, posing privacy concerns.

To address this, the concept of OM-mixer services provided by random routing nodes is proposed. These services would allow clients to send OMs through different routing nodes that possess sufficient bandwidth for OM forwarding. By using a WabiSabi credential system, clients could exchange funds for tokens to facilitate the sending and receiving of messages. The OM-mixer could also guide clients towards underutilized SCIDs (short-lived synthetic channel IDs) for improved message delivery chances and response path creation, further mitigating rate-limiting problems.

These enhancements aim to broaden the application scope of the OM system beyond BOLT12 to possibly include services with higher messaging rates, such as watchtowers or dynamic channel state backup servers like CLN VLS or LDK VSS. The introduction of OM-mixers could represent a significant step forward in ensuring reliable and private communication within the Lightning Network ecosystem.</summary>
    <published>2023-12-01T14:44:59.078000+00:00</published>
  </entry>
</feed>
