<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Unspendable keys in descriptors</title>
  <updated>2023-12-22T19:10:37.584274+00:00</updated>
  <author>
    <name>sipa 2023-12-19 15:26:33.367000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Unspendable keys in descriptors</title>
    <updated>2023-12-22T19:10:37.584274+00:00</updated>
    <link href="https://delvingbitcoin.org/t/unspendable-keys-in-descriptors/304/12" rel="alternate"/>
    <summary>The discussion revolves around the challenges in creating Bitcoin addresses using partial descriptors, a topic raised within the Bitcoin development community. These descriptors are essential for generating addresses but require off-chain information to be complete. The preference within the developer community leans towards a method where all necessary entropy, or randomness, is contained within the descriptor itself. This approach simplifies the process as it does not rely on external data, ensuring that everything needed to create an address is available within the descriptor. 

This concept is significant because it touches on the core principles of security and autonomy in cryptocurrency systems. By containing all required information within the descriptor, developers aim to maintain the decentralized ethos of Bitcoin, reducing reliance on external sources that could potentially compromise security or introduce dependencies. The implications of this preference are substantial for the ongoing development and enhancement of Bitcoin's technical infrastructure.</summary>
    <published>2023-12-19T15:26:33.367000+00:00</published>
  </entry>
</feed>
