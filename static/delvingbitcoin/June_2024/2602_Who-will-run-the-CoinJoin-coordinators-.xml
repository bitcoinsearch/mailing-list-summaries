<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Who will run the CoinJoin coordinators?</title>
  <updated>2024-06-03T02:07:25.683253+00:00</updated>
  <author>
    <name>1440000bytes 2024-06-02 15:23:09.812000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Who will run the CoinJoin coordinators?</title>
    <updated>2024-06-03T02:07:25.683282+00:00</updated>
    <link href="https://delvingbitcoin.org/t/who-will-run-the-coinjoin-coordinators/934/2" rel="alternate"/>
    <summary>In the domain of cryptocurrency transactions, privacy and security are paramount. JoinMarket with Jam emerges as a notable solution, enhancing user experience without relying on a central coordinator. Its approach is detailed at [JamDocs](https://jamdocs.org/philosophy/03-joinmarket/), where it's explained that despite offering an improved interface, it requires a more intricate setup process compared to other options.

For those seeking alternatives that are less complex to implement, [joinstr.xyz](https://joinstr.xyz) presents itself as an accessible choice. The distinctive feature of joinstr lies in its utilization of existing nostr relays for peer communication, eliminating the need for a dedicated coordinator. This method diverges from conventional coinjoin mechanisms, such as wabisabi and whirlpool, by using relays primarily for the public dissemination of pool information and the encrypted exchange of Partially Signed Bitcoin Transactions (PSBT). The technical specifics and philosophies underpinning joinstr can be explored further through its Network Improvement Proposal (NIP), available at [GitLab](https://gitlab.com/1440000bytes/joinstr/-/blob/main/NIP.md).</summary>
    <published>2024-06-02T15:23:09.812000+00:00</published>
  </entry>
</feed>
