<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP352: PSBT support</title>
  <updated>2024-06-15T02:01:00.278675+00:00</updated>
  <author>
    <name>andrewtoth 2024-06-14 23:48:23.139000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP352: PSBT support</title>
    <updated>2024-06-15T02:01:00.278714+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bip352-psbt-support/877/17" rel="alternate"/>
    <summary>The discussion raises an important consideration regarding the handling of inputs in a system where their order can be modified. The primary concern is that relying on the fixed ordering of inputs could lead to issues, particularly if a list of indexes is used and inputs are added incorrectly by someone unfamiliar with the correct process. This problem is highlighted in the context of adding silent payment outputs, suggesting that such additions should only be possible when Inputs Modifiable is not enabled to avoid complications.

Further examining the implications of input modifiability, there's an acknowledgment of the potential benefits of optimizing for scenarios where a wallet might want to consolidate multiple small unspent transaction outputs (utxos) into a single payment to a silent payment address. In the absence of consolidation, the requirement for a hardware wallet signer to compute shares and proofs would increase significantlyâ€”by tenfold in the given example of a wallet seeking to use 10 small utxos. This underlines the necessity of considering how inputs are managed and the potential impact on transaction processing efficiency and security.</summary>
    <published>2024-06-14T23:48:23.139000+00:00</published>
  </entry>
</feed>
