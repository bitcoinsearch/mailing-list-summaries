<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP352: PSBT support</title>
  <updated>2024-06-03T02:05:28.952800+00:00</updated>
  <author>
    <name>josibake 2024-06-02 08:44:37.010000+00:00</name>
  </author>
  <author>
    <name>andrewtoth 2024-06-02 01:44:13.210000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-06-01 18:04:52.150000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-05-29 13:51:12.405000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-05-28 12:16:55.572000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-05-27 22:13:47.258000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-05-27 00:34:44.509000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-05-20 17:56:49.967000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-05-20 12:01:29.956000+00:00</name>
  </author>
  <author>
    <name>Sosthene  . 2024-05-19 17:32:48.113000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-05-17 11:51:04.620000+00:00</name>
  </author>
  <link href="delvingbitcoin/June_2024/2596_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2024/2595_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/June_2024/2594_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2562_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2553_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2548_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2539_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2478_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2462_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2458_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2441_BIP352-PSBT-support.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP352: PSBT support</title>
    <updated>2024-06-03T02:05:28.952970+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bip352-psbt-support/877/11" rel="alternate"/>
    <summary>The discussion opens with an exploration of the computational and verification necessities for managing cryptographic proofs within blockchain transactions, specifically focusing on the Partially Signed Bitcoin Transactions (PSBT) framework. It highlights a significant departure from generating individual proofs for each transaction output to a more streamlined approach concentrated on validating the authenticity of transaction inputs. This method emphasizes the use of a proof for each input, demonstrating that the secret key responsible for creating an Elliptic Curve Diffie-Hellman (ECDH) share matches the key used in the transaction. Such an approach mitigates the data requirements for proofs and simplifies the verification process for transaction outputs. Furthermore, it suggests an optimization for scenarios where a single signer controls all relevant keys, allowing for a comprehensive proof covering the entire transaction, thereby streamlining the verification process even further.

The conversation then shifts to the Musig2 PSBT BIP draft, which delves into the nuances of spending support in transactions with multiple inputs and outputs. It outlines several scenarios based on the signerâ€™s access to private keys and the trust level of the wallet, leading to different workflows for generating output scripts and calculating ECDH sums and proofs. This segment underscores the need for adaptability in transactions involving multiple signers and varying degrees of trust, aiming to maintain security through the verification of silent payment outputs.

A theoretical proposition is introduced, focusing on reducing the necessity for the `OutputGenerator` to access private keys directly. Instead, leveraging an ECDH share allows participants to contribute parts of their private keys, theoretically enhancing security by avoiding full disclosure of private keys. However, this introduces complexities in ensuring accurate contributions to the ECDH sum for each transaction output, alongside concerns regarding the operational efficiency and security implications of such an approach.

The draft BIP's recent update includes the DLEQ proof, marking a pivotal enhancement aimed at bolstering the proposal's security and efficiency. This update, sourced from RubenSomsen's work, signifies a commitment to integrating advanced cryptographic techniques, reflecting a broader effort to adhere to high security and reliability standards within the domain.

Lastly, the email discusses the implementation challenges and considerations for enabling silent payments within the PSBT framework. This encompasses technical details for spending from silent payment outputs, including a proprietary method for tweaking the spend private key during the signing phase. It also addresses the complexities involved in sending silent payments, particularly the dependencies between outputs and inputs and the necessity for secure collaboration without full key disclosure. The potential for integrating silent payment features into coinjoin wallets is mentioned, alongside the importance of addressing security concerns in collaboration with cryptography experts. A proposed draft BIP by delvingless andrewtoth offers a promising solution by introducing an `OutputGenerator` role, potentially streamlining the integration of silent payments into existing systems. This solution, however, comes with caveats regarding its security, emphasizing the delicate balance between advancing privacy features and ensuring robust security measures.</summary>
    <published>2024-06-02T08:44:37.010000+00:00</published>
  </entry>
</feed>
