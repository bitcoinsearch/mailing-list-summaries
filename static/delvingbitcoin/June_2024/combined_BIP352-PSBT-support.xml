<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP352: PSBT support</title>
  <updated>2024-06-02T02:03:45.880648+00:00</updated>
  <author>
    <name>josibake 2024-06-01 18:04:52.150000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-05-29 13:51:12.405000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-05-28 12:16:55.572000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-05-27 22:13:47.258000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-05-27 00:34:44.509000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-05-20 17:56:49.967000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-05-20 12:01:29.956000+00:00</name>
  </author>
  <author>
    <name>Sosthene  . 2024-05-19 17:32:48.113000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-05-17 11:51:04.620000+00:00</name>
  </author>
  <link href="delvingbitcoin/June_2024/2594_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2562_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2553_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2548_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2539_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2478_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2462_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2458_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2441_BIP352-PSBT-support.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP352: PSBT support</title>
    <updated>2024-06-02T02:03:45.880725+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bip352-psbt-support/877/9" rel="alternate"/>
    <summary>The dialogue on the optimization and security of Partially Signed Bitcoin Transactions (PSBT) with silent payments delves into several technical enhancements and theoretical frameworks aimed at improving the efficiency and reliability of cryptocurrency transactions. A primary focus is on the feasibility of maintaining a running sum of Discrete Logarithm Equality (DLEQ) proofs to streamline the storage of proofs in transactions, especially addressing the challenges posed by transactions with numerous inputs and outputs, such as coinjoins. The proposal suggests an alternative to individual input and output proofs by considering a transaction-level proof for inputs that could potentially reduce the data required for proofs, thereby accommodating the constraints of regular and complex transaction types.

The Musig2 PSBT BIP draft introduces specific fields for inputs to support spending activities, reflecting on scenarios where signers possess different levels of access to private keys and varying degrees of trust from wallets. This draft outlines workflows for generating output scripts and completing the signing process, contingent upon the signer's access to private keys and the wallet's trust level. For transactions involving silent payments, the draft proposes methods to ensure transaction integrity and security through ECDH sums and proofs, addressing the technical complexities of verifying silent payment outputs and managing signers' contributions in a multi-signer environment.

Furthermore, the discussion explores the concept of leveraging "ECDH shares" instead of direct access to private keys, aiming to enhance security in cryptographic operations. This proposition suggests a shift towards a more secure and privacy-preserving approach to handling cryptographic signatures, albeit acknowledging the challenges in validating each contribution's correctness without compromising private key confidentiality.

An update to the draft BIP includes the DLEQ proof, based on insights from [RubenSomsen's gist](https://gist.github.com/RubenSomsen/be7a4760dd4596d06963d67baf140406), marking a significant enhancement in the proposal's cryptographic rigor. This addition aims to align the BIP with best practices and peer-reviewed innovations in the field, highlighting a commitment to advancing security and efficiency in PSBTs.

The email also reflects on the implementation nuances of silent payments within the PSBT framework, suggesting amendments to ensure compatibility and adherence to transaction parameters without compromising security. It discusses the creation of a basic PSBT workflow for a donation wallet, detailing the process for spending from silent payment outputs and the challenges associated with managing taproot script inputs. The potential for incorporating silent payment features into coinjoin wallets is mentioned, alongside the importance of consulting cryptography experts to address security concerns comprehensively.

Lastly, the conversation touches on the capabilities and future directions for sending and spending silent payment outputs in PSBTs. It presents immediate methods and the possibility of introducing new fields for streamlined operations, referencing a draft BIP by delvingless and andrewtoth ([draft BIP](https://gist.github.com/andrewtoth/dc26f683010cd53aca8e477504c49260)) that proposes an `OutputGenerator` role to facilitate silent payment logic integration. This role, conceived to minimize the need for significant changes in existing systems, underscores an innovative approach to secure cooperation without full key disclosure, although it cautions against unproven security methods and highlights the need for careful consideration of advanced features' security implications.</summary>
    <published>2024-06-01T18:04:52.150000+00:00</published>
  </entry>
</feed>
