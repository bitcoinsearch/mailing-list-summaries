<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP352: PSBT support</title>
  <updated>2024-06-15T02:01:08.987635+00:00</updated>
  <author>
    <name>andrewtoth 2024-06-14 23:45:29.411000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP352: PSBT support</title>
    <updated>2024-06-15T02:01:08.987667+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bip352-psbt-support/877/18" rel="alternate"/>
    <summary>The discussion around the use of SIGHASH_ALL in conjunction with ANYONECANPAY inputs within Bitcoin transactions raises several technical considerations. The primary concern is whether an input marked with ANYONECANPAY, when paired with SIGHASH_ALL, presents a vulnerability or not. The theoretical scenario posited involves a fully signed transaction that includes at least one ANYONECANPAY input, which covers the amount of the inputs it signs for, even when combined with SIGHASH_ALL. The issue identified is the potential for an external party to modify such a transaction by removing other inputs and rebroadcasting it. Since the modified transaction would still fulfill the necessary conditions for validity, there's a risk that the outputs originally intended as silent payments could become invalidated through this process. This situation underscores a nuanced aspect of Bitcoin's transaction mechanism, highlighting the complexities involved in ensuring transaction integrity while providing flexibility in signing options.</summary>
    <published>2024-06-14T23:45:29.411000+00:00</published>
  </entry>
</feed>
