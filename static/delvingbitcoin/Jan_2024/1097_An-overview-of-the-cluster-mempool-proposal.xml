<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An overview of the cluster mempool proposal</title>
  <updated>2024-01-13T01:59:19.716474+00:00</updated>
  <author>
    <name>sdaftuar 2024-01-12 19:27:17.249000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An overview of the cluster mempool proposal</title>
    <updated>2024-01-13T01:59:19.716511+00:00</updated>
    <link href="https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393/7" rel="alternate"/>
    <summary>The email presents a discussion on refining the rules that define a 'carveout' as utilized by Lightning Network (LN). The proposed reformulation of the carveout rules include four distinct criteria. Firstly, a carveout must not exceed 1,000 virtual bytes. Secondly, it should have only one unconfirmed ancestor, which is its parent transaction. Thirdly, the parent transaction of a carveout should not have any unconfirmed ancestors of its own. Lastly, a carveout should either be the first or second spent output of a transaction, with the condition that no more than two outputs of that transaction have been spent.

The correspondence highlights a discrepancy between the current LN anchor outputs and the proposed rules by pointing out that, despite anchors having two spendable outputs, there are no restrictions on how these outputs may be spent within the transaction graph. The topology of the transaction graph is crucial because rules two, three, and four directly concern its structure.

There is an indication of a potential solution in the form of what is termed 'v3', hinting at a future version or update. This proposed solution would enforce restrictions on the spending of an anchor output, specifically that they would not be permitted to create additional children transactions or incorporate additional parent transactions. This enforcement would simplify the issue by ensuring that the transaction graph topology adheres to the defined rules for carveouts, thereby making the system more predictable and potentially more efficient.</summary>
    <published>2024-01-12T19:27:17.249000+00:00</published>
  </entry>
</feed>
