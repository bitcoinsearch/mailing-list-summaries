<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning transactions with v3 and ephemeral anchors</title>
  <updated>2024-01-18T02:15:26.015593+00:00</updated>
  <author>
    <name>t-bast 2024-01-17 13:33:00.486000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning transactions with v3 and ephemeral anchors</title>
    <updated>2024-01-18T02:15:26.015628+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lightning-transactions-with-v3-and-ephemeral-anchors/418/8" rel="alternate"/>
    <summary>The email discussion revolves around the technical considerations of identifying users of CPFP (Child Pays for Parent) carve-out transactions and maintaining support for them. The sender originally misunderstood the situation, thinking that it would be impossible to continue supporting CPFP carve-out alongside new cluster mempool code, leading to an assumption that lightning commitment transactions with two anchor outputs should implicitly enroll in v3 policies as a replacement for the CPFP carve-out.

However, the core concern expressed is not strictly about how to identify a Lightning Network (LN) anchor spend but rather how to enable the identification of CPFP carve-out users effectively. The aim is to keep supporting the CPFP carve-out for applications that do not explicitly set nVersion=3. This suggests that there remains a possibility of supporting both mechanisms concurrently or finding a pathway to transition without disrupting current users heavily reliant on the CPFP carve-out feature, particularly those within the Lightning Network. The conversation indicates a need for a careful evaluation of the technical paths available to ensure sustained functionality for affected applications and users.</summary>
    <published>2024-01-17T13:33:00.486000+00:00</published>
  </entry>
</feed>
