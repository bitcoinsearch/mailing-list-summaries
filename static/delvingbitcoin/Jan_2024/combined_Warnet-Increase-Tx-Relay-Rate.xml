<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Warnet + Increase Tx Relay Rate</title>
  <updated>2024-01-20T02:00:36.391636+00:00</updated>
  <author>
    <name>m3dwards 2024-01-19 23:56:02.399000+00:00</name>
  </author>
  <author>
    <name>m3dwards 2024-01-19 23:48:45.748000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2023-12-22 03:04:11.956000+00:00</name>
  </author>
  <author>
    <name>amiti  . 2023-12-21 18:03:33.954000+00:00</name>
  </author>
  <author>
    <name>mdwards  . 2023-12-21 11:23:16.812000+00:00</name>
  </author>
  <author>
    <name>amiti  . 2023-12-20 21:54:22.898000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2023-12-18 02:43:32.230000+00:00</name>
  </author>
  <author>
    <name>amiti  . 2023-12-14 21:14:15.928000+00:00</name>
  </author>
  <link href="delvingbitcoin/Jan_2024/1235_Warnet-Increase-Tx-Relay-Rate.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1237_Warnet-Increase-Tx-Relay-Rate.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/849_Warnet-Increase-Tx-Relay-Rate.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/848_Warnet-Increase-Tx-Relay-Rate.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/845_Warnet-Increase-Tx-Relay-Rate.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/843_Warnet-Increase-Tx-Relay-Rate.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/783_Warnet-Increase-Tx-Relay-Rate.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/732_Warnet-Increase-Tx-Relay-Rate.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Warnet + Increase Tx Relay Rate</title>
    <updated>2024-01-20T02:00:36.391744+00:00</updated>
    <link href="https://delvingbitcoin.org/t/warnet-increase-tx-relay-rate/294/7" rel="alternate"/>
    <summary>A recent simulation aimed at analyzing the performance of a peer-to-peer network in blockchain scenarios has been conducted, utilizing a Warnet scenario with 100 nodes on a virtual machine. The setup began with mining blocks to provide each node with a starting balance, and then proceeded to produce blocks at a normal rate while sending transactions at a set rate. A simple block timing function based on an exponential distribution was implemented to mimic realistic conditions. However, even with the application of a pull request (PR), no significant improvements were observed in transaction request numbers or mempool size, which raises questions about the possible need for additional mechanisms such as Replace-By-Fee (RBF), Child Pays For Parent (CPFP), or unconfirmed transaction chains to affect the results.

The simulation also explored the relationship between the relay rate and the number of transactions requested for reconstruction, theorizing that a higher relay rate could result in more changes within the mempool. There's uncertainty regarding how different transaction patterns, like RBF or CPFP, would impact the simulation, particularly at higher transaction rates. To address stability issues experienced at higher rates, there is interest in moving simulations to a Kubernetes-backed Warnet environment, which is expected to offer better stability with larger numbers of nodes and higher transaction throughput.

An alternative testing approach involving mocktime was discussed, which allows for manipulation of time in the context of block mining. This method could potentially reconcile transaction relay configurations that do not scale with increased block production. The idea is to accelerate block production, for example, by configuring blocks to be mined every five minutes, doubling the transaction creation rate. Caution is advised when implementing mocktime, as it may lead to skewed results if not applied properly. Establishing a real-time baseline might serve as a more effective comparison tool.

The sender acknowledges contributions from AJ Towns and agrees to the proposed approach, expressing willingness to experiment with more than 100 nodes. They consider reducing the number to assess various outcomes with both 4 and 8 nodes configurations. The primary goal is to create a deterministic process for generating Unspent Transaction Outputs (UTXOs) to support diverse transaction patterns and find the threshold where system performance degrades. This involves increasing the transaction creation rate during tests until a notable rise in transaction requests occurs. Additionally, there is contemplation over how to reconcile individual node metrics with those acceptable across the entire network, especially considering the proposed inbound and outbound transaction rate differences.

The research focuses on analyzing network performance under variable transaction rates and block confirmation times, emphasizing the importance of RBF transactions and their patterns on the current mainnet. A network consisting of 100 nodes will be used, with varying transaction creation rates and three potential confirmation speeds. The study aims to emulate real-world conditions by splitting block reward transactions into smaller amounts and dynamically calculating fees. Performance will be gauged through compact block relay efficiency, and expectations include potential inconsistencies in the mempool and 'txn requested' numbers when sustained transaction creation rates surpass certain thresholds. This approach is vital for identifying network bottlenecks and optimizing configurations for effective real-world usage patterns.

To replicate a mainnet environment accurately, it is important to consider the dynamics of transactions and network configuration. The replication of transaction dynamics is crucial, with an emphasis on analyzing the effects of varying transaction rates. Network setup should closely approximate actual mainnet conditions, despite limitations such as the obscurity of the mainnet's structure and resource availability. Tests by @pinheadmz have indicated the feasibility of operating 250 nodes using Docker, and with Kubernetes support via Warnet, managing a larger number of nodes could be possible. Discussions are ongoing about the optimal number of nodes and network topology to effectively approximate mainnet conditions. Outcomes sought from setting up such scenarios include key metrics observation post-implementation, estimating bandwidth and CPU usage increases due to relay rate changes, understanding the influence of relay rates on mempool turnover, and assessing memory impacts. Feedback is solicited to refine the approach, identify any gaps, and prioritize elements in the process. The collaborative effort aims to ensure the simulated environment is both representative and insightful for understanding mainnet behavior.</summary>
    <published>2024-01-19T23:56:02.399000+00:00</published>
  </entry>
</feed>
