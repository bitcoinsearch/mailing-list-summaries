<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning transactions with v3 and ephemeral anchors</title>
  <updated>2024-01-19T02:21:03.693374+00:00</updated>
  <author>
    <name>ajtowns 2024-01-18 05:12:05.491000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning transactions with v3 and ephemeral anchors</title>
    <updated>2024-01-19T02:21:03.693412+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lightning-transactions-with-v3-and-ephemeral-anchors/418/15" rel="alternate"/>
    <summary>The email's content revolves around a technical challenge concerning state revocations in the context of a transaction system, possibly related to a blockchain or cryptocurrency protocol. The author highlights an overlooked issue wherein revoked states are permitted to create pins through HLTC-Timeout paths. To address this, a solution is proposed involving the creation of two distinct versions of `HTLCClaimB` transactions.

The first version would be signed using ACP|SINGLE with a specified nSequence delay. This configuration enables an honest party to claim outputs that have been revoked. The second version, on the other hand, would be signed with SIGHASH_ALL without any delay. This approach aims to generate an ephemeral anchor output to prevent pinning, which can be a method used by malicious parties to disrupt or manipulate the transaction process.

However, implementing this solution comes with a drawback; it requires doubling the number of HTLC signatures necessary for the operation. This increase in signatures could potentially lead to inefficiencies within the system due to the additional computational and resource requirements needed to process these transactions.

This summary encapsulates the main issue and the proposed workaround discussed in the original email while avoiding the direct repetition of phrasing and maintaining a formal tone. The complexity of the problem and the suggested dual-version transaction strategy underline the trade-offs between security and efficiency in transaction systems.</summary>
    <published>2024-01-18T05:12:05.491000+00:00</published>
  </entry>
</feed>
