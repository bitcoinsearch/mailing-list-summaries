<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>0conf LN channels and v3 anchors</title>
  <updated>2024-01-31T02:04:03.904426+00:00</updated>
  <author>
    <name>MattCorallo 2024-01-30 20:10:14.070000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>0conf LN channels and v3 anchors</title>
    <updated>2024-01-31T02:04:03.904456+00:00</updated>
    <link href="https://delvingbitcoin.org/t/0conf-ln-channels-and-v3-anchors/494/3" rel="alternate"/>
    <summary>The correspondence delves into the complexities of handling unconfirmed splices within a system, acknowledging the challenges that arise when designing for such scenarios. The conversation reveals a consensus on the need for a robust analysis of potential transaction chains, particularly in cases where there are no additional unconfirmed inputs present. This analysis becomes particularly pertinent in light of the anticipated support for complex topologies by version 3 (v3), which is fundamentally predicated on the integration of a cluster mempool.

One suggested approach to address these issues involves the implementation of a change output on the funding/splice transaction, specifically on participant B's side. This would facilitate the use of Child Pays For Parent (CPFP) as a mechanism to expedite transaction processing. However, there is a clear preference expressed for utilizing Replace-By-Fee (RBF) over CPFP for splice bumps, with the former considered a more rational choice despite the current reliance on CPFP to prevent transaction pinning. The existing need for CPFP indicates that the transition to v3 will not exacerbate the issue.

Lastly, the dialogue underscores the importance of reevaluating mempool policies with the foresight to avoid any shortcomings that could necessitate a subsequent version upgrade (v4). The discussion points towards an aspiration to optimize these policies so that they align as closely as possible with the envisioned framework, thereby minimizing the potential for future revisions.</summary>
    <published>2024-01-30T20:10:14.070000+00:00</published>
  </entry>
</feed>
