<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning transactions with v3 and ephemeral anchors</title>
  <updated>2024-01-18T02:14:23.497310+00:00</updated>
  <author>
    <name>murch 2024-01-17 14:34:16.713000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning transactions with v3 and ephemeral anchors</title>
    <updated>2024-01-18T02:14:23.497342+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lightning-transactions-with-v3-and-ephemeral-anchors/418/11" rel="alternate"/>
    <summary>The development of the coin selection algorithms is nearing completion, with about 90% of the work finished. These algorithms are designed to include a `max_weight` parameter, which is crucial in ensuring that transactions do not exceed the standardized weight limit. The remaining task involves integrating this feature into the transaction building RPCs, which is expected to be a straightforward process.

CoinGrinder, an essential tool in optimizing the coin selection process, could significantly enhance the system's efficiency. Unlike the Simplified Representation of Demand (SRD), which operates on a greedy algorithm by merely excluding the lowest effective value input when the transaction exceeds the weight limit, both Branch and Bound (BnB) and CoinGrinder (CG) methods are capable of identifying a solution, provided one exists. This distinction underscores the potential effectiveness of CoinGrinder in managing weight limits more adeptly.

However, despite being available since July, CoinGrinder has only received limited scrutiny. For it to be reliably implemented, it requires further examination by additional reviewers. Inviting more contributors to review CoinGrinder would help ensure its robustness and readiness for integration into the existing system.</summary>
    <published>2024-01-17T14:34:16.713000+00:00</published>
  </entry>
</feed>
