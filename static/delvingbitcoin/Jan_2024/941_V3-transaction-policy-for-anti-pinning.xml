<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>V3 transaction policy for anti-pinning</title>
  <updated>2024-01-08T11:34:13.051493+00:00</updated>
  <author>
    <name>harding 2024-01-05 20:59:48.389000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>V3 transaction policy for anti-pinning</title>
    <updated>2024-01-08T11:34:13.051493+00:00</updated>
    <link href="https://delvingbitcoin.org/t/v3-transaction-policy-for-anti-pinning/340/10" rel="alternate"/>
    <summary>In the discussion of transaction management within blockchain systems, a particular strategy for optimizing transactions has been highlighted. The focus is on the utilization of what is termed an "ephemeral anchor." This concept involves creating a parent transaction with one input and multiple outputs, where one of these additional outputs serves as the ephemeral anchor itself. The subsequent child transaction would then use at least two inputs, including the spent ephemeral anchor, along with at least one output to contribute fees.

A notable consideration in this process is the management of transaction sizes, which are measured in virtual bytes (vbytes). It is pointed out that burning the ephemeral anchor alone can result in a relatively small transaction of 65 vbytes. This approach is likened to the strategies used by individuals who pay for transaction acceleration services to reduce the number of inputs in a replace-by-fee (RBF) scenario.

However, there exists a potential risk in cases where only the parent transaction is created and no child transaction follows. To mitigate this, there arises a need to enforce a requirement ensuring that spending from the parent transaction incurs a cost equivalent to, or greater than, that of a transaction with a minimum of two inputs and one output. Interestingly, this requirement doesn't necessarily have to be imposed through input constraints; it could also be addressed by treating a parent transaction without a child as if it carried the additional weight of a hypothetical transaction with the described two-input, one-output structure. This conceptual framework ensures that even in the absence of an actual child transaction, the system behaves as though the additional costs associated with such a transaction are accounted for.</summary>
    <published>2024-01-05T20:59:48.389000+00:00</published>
  </entry>
</feed>
