<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - 64 bit arithmetic soft fork</title>
  <updated>2024-01-24T02:18:31.953765+00:00</updated>
  <author>
    <name>halseth 2024-01-23 20:36:15.253000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_5 2024-01-23 16:23:25.319000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-01-20 14:36:06.211000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-20 13:16:16.585000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-20 12:57:31.799000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-01-20 05:01:16.940000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-19 21:27:03.245000+00:00</name>
  </author>
  <author>
    <name>Davidson  . 2024-01-17 22:31:06.270000+00:00</name>
  </author>
  <author>
    <name>jamesob  . 2024-01-16 17:43:34.637000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2024-01-15 04:22:58.226000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-01-13 15:12:01.617000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-13 15:03:10.677000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-01-13 15:00:18.287000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-13 14:59:37.726000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-13 14:53:41.807000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-01-13 14:26:46.385000+00:00</name>
  </author>
  <author>
    <name>rustyrussell  . 2024-01-12 16:22:29.735000+00:00</name>
  </author>
  <author>
    <name>halseth  . 2024-01-12 13:20:15.414000+00:00</name>
  </author>
  <author>
    <name>ProofOfKeags  . 2024-01-11 21:01:22.448000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2024-01-11 20:57:27.933000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2024-01-11 20:40:26.242000+00:00</name>
  </author>
  <author>
    <name>ProofOfKeags  . 2024-01-11 17:55:35.883000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2024-01-11 17:42:51.731000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2024-01-11 17:39:55.430000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-11 17:19:48.085000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-11 17:19:08.767000+00:00</name>
  </author>
  <author>
    <name>ProofOfKeags  . 2024-01-11 16:46:12.669000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2024-01-11 15:23:39.480000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-11 15:08:42.326000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2024-01-11 14:54:55.887000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-11 14:24:52.280000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2024-01-11 14:11:33.795000+00:00</name>
  </author>
  <author>
    <name>halseth  . 2024-01-11 14:07:42.305000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2024-01-10 23:10:38.930000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-10 16:11:01.778000+00:00</name>
  </author>
  <link href="delvingbitcoin/Jan_2024/1318_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1313_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1247_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1245_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1243_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1241_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1228_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1173_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1146_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1112_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1101_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1105_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1104_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1103_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1102_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1099_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1093_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1088_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1086_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1085_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1084_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1083_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1082_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1081_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1078_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1080_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1079_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1076_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1075_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1074_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1073_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1072_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1071_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1061_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1057_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - 64 bit arithmetic soft fork</title>
    <updated>2024-01-24T02:18:31.953995+00:00</updated>
    <link href="https://delvingbitcoin.org/t/64-bit-arithmetic-soft-fork/397/35" rel="alternate"/>
    <summary>The programming community is deeply engaged in discussions around optimizing Bitcoin's scripting capabilities, particularly concerning opcodes and their implications on memory versus disk space. Literal opcodes like `OP_0`, `OP_1`, and `OP_2` expand from 1 byte to 8 bytes in memory when executed, potentially increasing memory consumption. A consensus exists regarding the utility of variable-length encoding for numbers up to 16, with full 8-byte representations required beyond that threshold.

Emulation tools such as [Eltrace](https://github.com/halseth/elftrace) are being used to explore emulating RISC-V in Bitcoin Script, highlighting the role of fixed-length little-endian encoding in complex covenants. Rusty Russell's article ["Arithmetic Opcodes: What Could They Look Like?"](https://rusty.ozlabs.org/?p=950) proposes unsigned-only value handling and new opcodes for numeric conversions without full arithmetic support, emphasizing the need for 64-bit operations in enforcing transaction values.

A proposed change in encoding for `ScriptNums` could increase the blockchain size by an estimated 1GB, representing a modest 0.17% growth since the genesis block. The source code for these estimations can be found at [this GitHub repository](https://github.com/Christewart/bitcoin-s-core/tree/2024-01-19-count-scriptnums). Russell also suggests generic opcodes for numeric width adjustment, addressing compatibility and data integrity concerns.

The anticipated minimal impact on wallet software due to standard signing logic is acknowledged, alongside a discussion of `SCRIPT_VERIFY_MINIMAL_DATA` policy considerations linked to BIP62. There's skepticism about simplifying future soft forks by removing this flag, given the importance of backward compatibility. Additionally, reactivating certain arithmetic operations like multiplication and left shift, as mentioned in Rusty Russell's resource [Arithmetic Opcodes](https://rusty.ozlabs.org/2023/12/30/arithmetic-opcodes.html), might involve further analysis.

A shift toward more precise and standardized encoding methods is considered, especially in covenant scripts on Elements. The debate includes overflow checks, consensus rule changes, and the distinction between numerical literals during script execution. A proposal to introduce `OP_ENABLE64BIT` aims to enable 64-bit arithmetic within scripts, with the potential for it to become the first opcode except for any `OP_SUCCESSx` operations.

Changes to the Bitcoin VM structure due to the introduction of new opcodes like `ENABLE64BIT` could create stability issues. Discussions focus on managing witness sizes, opcode space availability, and maintaining backward compatibility through soft fork approaches. The dialogue also acknowledges the tension between adhering to tested protocols and innovating for efficiency within BIPs.

Lastly, the enhancement of covenant opcodes for arithmetic on satoshi values is recognized as significant for smart contract development. The integration of 64-bit arithmetic into various applications is seen as crucial for achieving higher precision and efficiency. Interest in incorporating these operations into different protocols has resulted in a Bitcoin Improvement Proposal (BIP) available at [BIP proposal link](https://github.com/Christewart/bips/pull/1), with a corresponding implementation at [implementation link](https://github.com/Christewart/bitcoin/pull/2), both open for community feedback.</summary>
    <published>2024-01-23T20:36:15.253000+00:00</published>
  </entry>
</feed>
