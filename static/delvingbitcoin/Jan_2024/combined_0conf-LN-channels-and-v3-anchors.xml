<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - 0conf LN channels and v3 anchors</title>
  <updated>2024-01-31T02:05:17.669905+00:00</updated>
  <author>
    <name>instagibbs 2024-01-30 21:13:29.571000+00:00</name>
  </author>
  <author>
    <name>morehouse 2024-01-30 20:48:10.596000+00:00</name>
  </author>
  <author>
    <name>MattCorallo 2024-01-30 20:10:14.070000+00:00</name>
  </author>
  <author>
    <name>t-bast 2024-01-30 10:24:58.122000+00:00</name>
  </author>
  <author>
    <name>MattCorallo  . 2024-01-29 22:29:37.666000+00:00</name>
  </author>
  <link href="delvingbitcoin/Jan_2024/1389_0conf-LN-channels-and-v3-anchors.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1387_0conf-LN-channels-and-v3-anchors.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1386_0conf-LN-channels-and-v3-anchors.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1379_0conf-LN-channels-and-v3-anchors.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1370_0conf-LN-channels-and-v3-anchors.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - 0conf LN channels and v3 anchors</title>
    <updated>2024-01-31T02:05:17.669977+00:00</updated>
    <link href="https://delvingbitcoin.org/t/0conf-ln-channels-and-v3-anchors/494/5" rel="alternate"/>
    <summary>The ongoing discourse around version 3 (v3) transactions in the context of a cluster mempool suggests that post-implementation, there could be significant improvements. The current v3 proposal does not fully accommodate the complexities of unconfirmed transaction chains, which are commonplace when performing splices within the Lightning Network (LN). To address this, one suggestion involves limiting funding transactions to confirmed inputs only, which would enable a transaction topology where party A pays party B, followed by subsequent transactions including fee bumps via Child Pays For Parent (CPFP).

Currently, there is an identified issue with v3 transactions when considering the support for zero-confirmation (0-conf) channels within the LN. This situation arises when one party is offline after a transaction and the other seeks the return of their funds. The problem with the proposed v3 model is its restriction against transactions with unconfirmed ancestors, posing challenges especially if the funding transaction gets stuck due to insufficient fees. In this scenario, a chain consisting of an unconfirmed funding transaction, the v3 commitment transaction, and any dependent CPFP anchor spend becomes non-broadcastable, rendering the v3 transaction invalid.

To circumvent this, it has been suggested to change the rules for v3 transactions to prevent such issues. One approach includes having a confirmed input requirement for the funding transaction, enabling a sequence of transactions with the pattern A -&gt; B -&gt; {C, D, CPFP bump}. This implies that direct payments between two parties within the channel are possible, and in instances where there's a need for a fee increase, CPFP can be utilized as long as it stems from a confirmed funding transaction.

It is recognized that the preferred method to deal with transaction fee bumps should be Replace-By-Fee (RBF) rather than CPFP, but under the present circumstances, CPFP remains a necessity to safeguard against transaction pinning. While this solution is not ideal, it does not exacerbate the existing system; it merely serves as a continuation of the current protective measures until a more refined policy or a version 4 (v4) can be developed. There is no definitive fix yet, but these discussions are crucial in reshaping the mempool policy to come as close as possible to an optimal solution.</summary>
    <published>2024-01-30T21:13:29.571000+00:00</published>
  </entry>
</feed>
