<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>MEOW: Mint eCash On Will</title>
  <updated>2024-01-27T01:54:00.814608+00:00</updated>
  <author>
    <name>1440000bytes 2024-01-26 22:27:20.056000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>MEOW: Mint eCash On Will</title>
    <updated>2024-01-27T01:54:00.814640+00:00</updated>
    <link href="https://delvingbitcoin.org/t/meow-mint-ecash-on-will/466/3" rel="alternate"/>
    <summary>The email discusses a non-custodial eCash system that addresses a significant issue with previous eCash implementations: the custodianship of user funds. Unlike Chaumian eCash, which is utilized in systems like cashu and fedimint and requires custody of funds, the protocol mentioned ensures that users maintain control over their funds at all times, thereby providing enhanced privacy.

Within this system, certain participants act as coordinators, comparable to hawaladars, but they do not hold any funds. Importantly, these coordinators operate without the need for a reputation or identifiable information within the protocol framework. The protocol includes three redeemers – Bob, Carol, and Dave – and utilizes a public key from any one redeemer. However, a simple signature is insufficient for spending; a `preimage_secret` is also necessary. In the provided example, Bob's public key is used.

The process involves Hash Time-Locked Contracts (HTLCs) transitioning between various groups of coordinators. This mechanism prevents on-chain transactions from revealing the sender and recipient in an eCash payment, thus ensuring transaction anonymity. Furthermore, the system allows for more complex scenarios, such as Alice paying Eve using multiple eCash tokens issued by different entities. Although this would necessitate parallel coordination with multiple parties, it can be automated and made transparent to the user, simplifying the process.</summary>
    <published>2024-01-26T22:27:20.056000+00:00</published>
  </entry>
</feed>
