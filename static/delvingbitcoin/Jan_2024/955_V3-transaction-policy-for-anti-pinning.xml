<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>V3 transaction policy for anti-pinning</title>
  <updated>2024-01-08T11:31:33.642566+00:00</updated>
  <author>
    <name>instagibbs 2024-01-06 13:53:10.677000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>V3 transaction policy for anti-pinning</title>
    <updated>2024-01-08T11:31:33.642566+00:00</updated>
    <link href="https://delvingbitcoin.org/t/v3-transaction-policy-for-anti-pinning/340/18" rel="alternate"/>
    <summary>The discourse begins with an analysis of the practicality of incorporating endogenous fees within smart contracts. It emphasizes that while such an implementation is beneficial, it isn't universally applicable across all protocols, particularly outside the context of ln-penalty. The argument asserts that good mempool design should not be confined to a narrow interpretation of specific ideas. The conversation then references a GitHub link which provides further insight into the motivations and use cases for which smart contracts like V3 and ephemeral anchors are deemed suitable.

The dialogue continues by stressing the importance of optimizing fee bidding processes and highlights the absence of any viable alternative proposals that address the nuances of replace-by-fee (RBF) mechanisms, similar to those discussed in V3. It points out that even after extensive discussions over years, no other satisfactory solutions have been tabled.

A humorous note is made about Hash Time-Locked Contracts (HTLCs), noting that while they inherently involve endogenous fees which could potentially decentralize the system, their integration with ephemeral anchors would make them more resistant to pinning. However, the complexity of implementing this due to the necessity for pre-signing HTLC-Success paths on both commitment transactions is acknowledged, particularly in light of the existing duplex update channels, suggesting that this is not being pursued in the proposal.

Finally, the discussion concedes that the advantage claimed for a soft-fork version of ephemeral anchors may be somewhat overstated. Nevertheless, it's noted that similar off-chain benefits can already be achieved through present-day techniques such as batching and using `SIGHASH_SINGLE|ACP`-based smart contracts, and these benefits would likely extend to any future implementations of introspection opcodes.</summary>
    <published>2024-01-06T13:53:10.677000+00:00</published>
  </entry>
</feed>
