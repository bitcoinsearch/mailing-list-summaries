<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>V3 transaction policy for anti-pinning</title>
  <updated>2024-01-23T02:04:35.000381+00:00</updated>
  <author>
    <name>ajtowns 2024-01-22 10:53:08.317000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>V3 transaction policy for anti-pinning</title>
    <updated>2024-01-23T02:04:35.000413+00:00</updated>
    <link href="https://delvingbitcoin.org/t/v3-transaction-policy-for-anti-pinning/340/33" rel="alternate"/>
    <summary>The concept of opting into v3 revolves around a strategy where certain node operators and transaction creators willingly bypass valid transactions to prioritize those with higher fee rates. This practice emerges from the scenario where low fee rate but large transactions (C1) are accepted over small transactions with higher fee rates (C2). The downside to replacing C1 with C2 is the vulnerability it creates for nodes, potentially exposing them to relay spam. To mitigate this issue, v3 introduces a mechanism where C1 transactions may be rejected outright, preventing the free relay problem and enabling high fee rate transactions like C2 to propagate through the network more effectively.

Despite not being a comprehensive solution to the pinning problem, v3 improvements offer significant benefits to the network by incrementally improving transaction relay policies. However, the constraints of v3, which limit transactions to one ancestor and one descendant, pose challenges, particularly for batch CPFP transactions—a technique used to speed up transaction confirmation—since it restricts complex related transactions in the mempool.

To adapt to these constraints, one could design protocols that have parent transactions with a single output available for immediate spending, ensuring any child transactions naturally conflict and fall under RBF (Replace-By-Fee) rules. Another possibility, although less practical, involves n-of-n multisig arrangements with transactions spending common outputs, which could theoretically comply with v3 policies.

The introduction of the ephemeral anchor (EA) rule offers additional flexibility, requiring that the EA output must be spent for the associated transaction to remain in the mempool. This condition ensures that children must spend and conflict with the EA output, invoking RBF rules. This added flexibility becomes especially advantageous for protocols like the Lightning Network, allowing the balance outputs of commitment transactions to be spent alongside the EA output, addressing what would otherwise be problematic scenarios.</summary>
    <published>2024-01-22T10:53:08.317000+00:00</published>
  </entry>
</feed>
