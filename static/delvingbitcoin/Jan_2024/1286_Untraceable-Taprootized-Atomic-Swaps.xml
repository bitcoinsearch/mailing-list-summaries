<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Untraceable Taprootized Atomic Swaps</title>
  <updated>2024-01-23T02:13:09.646700+00:00</updated>
  <author>
    <name>olkurbatov 2024-01-22 18:35:27.133000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Untraceable Taprootized Atomic Swaps</title>
    <updated>2024-01-23T02:13:09.646731+00:00</updated>
    <link href="https://delvingbitcoin.org/t/untraceable-taprootized-atomic-swaps/458" rel="alternate"/>
    <summary>Taprootized Atomic Swaps (TAS) represent a significant advancement in the field of cryptocurrency exchanges, allowing for cross-chain transactions without intermediaries while ensuring transactional privacy. TAS operates on the premise that only the parties directly involved in a swap should be aware of its occurrence, thus preserving the confidentiality of the exchange.

Atomic swaps have traditionally been transparent, leaving a digital trail that could be traced back to the participants and the details of their transaction. Taprootized Atomic Swaps address this issue by leveraging Schnorr signatures, Taproot technology, and zero-knowledge proofs to disguise the fact of a swap under the guise of regular Bitcoin payments. This innovation eliminates the possibility for an external auditor to distinguish between a swap transaction and any other Bitcoin payment, although in the corresponding blockchain system, the exchange can still be detected but not linked to the Bitcoin transaction without additional data from the involved parties.

The protocol of TAS involves several steps beginning with Alice and Bob knowing each other's public keys. Alice generates a random value and uses it to form an alternative spending path and an escrow public key, which is essential for creating a signature that can only be produced with specific knowledge of secret keys and scripts. She then sends a funding transaction to the Bitcoin network with conditions on how it can be spent, either by Bob or herself after a certain time has passed. 

Alice also constructs zero-knowledge proofs to demonstrate her knowledge of the random value without revealing it. She then provides Bob with a set of data including the hash value, public value, script, and proof. Bob verifies the transaction and the proofs provided by Alice, and if satisfied, locks his own funds with conditions that allow only Alice to spend them if she reveals the random value or himself after a specified time. Upon verification, Alice publishes the random value, enabling Bob to create the necessary secret key and spend the funds Alice had locked.

For the practical implementation of TAS, recommendations include using the MuSig aggregation mechanism for forming the escrow public key and deploying the P2TR method for address formation, which ensures that these addresses are indistinguishable from regular Bitcoin addresses. The Poseidon hash function is suggested as zk-friendly, and for zero-knowledge operations involving elliptic curve points, the 0xPARC library is recommended. These tools and methods ensure that Taprootized Atomic Swaps are executed efficiently and securely, reinforcing the principle of privacy in blockchain transactions.

For further reference and a more detailed understanding of the Taprootized Atomic Swaps, interested readers can access the original document [here](https://docs.google.com/document/d/1mVMElv5smDalqD67D9zniwfFfmSg2badeAIZwgW-0kU/editheading=h.nikv26elm71x).</summary>
    <published>2024-01-22T18:35:27.133000+00:00</published>
  </entry>
</feed>
