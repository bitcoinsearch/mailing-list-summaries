<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>LN-Symmetry Project Recap</title>
  <updated>2024-01-08T11:43:53.669775+00:00</updated>
  <author>
    <name>instagibbs 2024-01-05 18:03:45.164000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>LN-Symmetry Project Recap</title>
    <updated>2024-01-08T11:43:53.670768+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ln-symmetry-project-recap/359" rel="alternate"/>
    <summary>The LN-Symmetry Project took the [eltoo](https://blockstream.com/eltoo.pdf) proposal and developed it into research-quality software, focusing on proving the concept's viability without waiting for community consensus or softforks. The project successfully implemented basic functional tests for channel openings, payments, payments with hops, unilateral closes, and reconnection logic. However, certain aspects like cooperative closes, proper persistence of new keytypes/fields, anchor spending support, and gossip for these channels were left unimplemented. Cooperative closes were omitted due to ongoing improvements in current specifications, while the other elements faced technical challenges or dependencies on ongoing work by others, such as Rusty's `option_anchors` support.

The project had several key focuses, including simplifying the BOLT specifications significantly, and addressing eltoo's technical challenges to determine if any potential issues could prove fatal to its implementation. It also aimed to provide more flexible fee management where all outputs in settlement transactions could be spent freely, except for HTLC-Success paths, which reduces the need for a utxo pool for fees to only pay maximum once per unilateral close during the "challenge" period. Moreover, the use of CTV (emulation) proved beneficial by eliminating the need for round-trips in the payment protocol and potentially reducing payment times.

Key takeaways from the project reveal that avoiding pinning is challenging, requiring a significant portion of the work to be dedicated to designing a robust system against it. The project identified that eltoo-style channels need longer htlc expiry deltas to remain secure, a detail not previously worked through in state machines. Additionally, the project's experience has led to skepticism regarding the effectiveness of penalties in future implementations, advocating for systems that function correctly as the best deterrent against competent adversaries.

The LN-Symmetry Project produced various key work artifacts, including extensive anti-pinning research contributing to the [Package Relay Project](https://github.com/bitcoin/bitcoin/issues/27463), the creation of [Ephemeral Anchors](https://github.com/instagibbs/bips/blob/d33cdbd0777700f4fc488d54b90a8795d2c33639/bip-ephemeralanchors.mediawiki), and the development of a CLN implementation available at https://github.com/instagibbs/lightning/tree/eltoo_support. Additionally, changes to Bitcoin Core necessary for CLN blackbox tests are located at https://github.com/instagibbs/bitcoin/tree/202207-anyprevout, while an alternative repository is provided at https://github.com/bitcoin-inquisition/bitcoin/releases/tag/v25.1-inq. Drafts for the BOLT specification incorporating segwit ephemeral anchors can be found at https://github.com/instagibbs/bolts/tree/eltoo_draft, and libwally updates to support taproot changes are available at https://github.com/instagibbs/libwally-core/tree/taproot. Further insights into PTLCs and their compatibility with eltoo-style channels are documented at https://gist.github.com/instagibbs/1d02d0251640c250ceea1c66665ec163single-sig-adaptor-ln-symmetry. Finally, backporting anti-pin technology to current BOLTs with proposed Bitcoin Core policy changes is discussed at https://github.com/instagibbs/bolts/commits/zero_fee_commitment.

Currently, the project is on hold as the focus shifts towards mempool-related work. The outcomes of the LN-Symmetry Project aim to contribute to de-risking discussions about future softforks and channel design advancements.</summary>
    <published>2024-01-05T18:03:45.164000+00:00</published>
  </entry>
</feed>
