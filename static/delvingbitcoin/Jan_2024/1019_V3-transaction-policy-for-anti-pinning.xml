<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>V3 transaction policy for anti-pinning</title>
  <updated>2024-01-09T09:22:56.310148+00:00</updated>
  <author>
    <name>instagibbs 2024-01-08 16:26:01.476000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>V3 transaction policy for anti-pinning</title>
    <updated>2024-01-09T09:22:56.310148+00:00</updated>
    <link href="https://delvingbitcoin.org/t/v3-transaction-policy-for-anti-pinning/340/25" rel="alternate"/>
    <summary>The recent discussion in the programming community has highlighted a critical issue known as the "cycle attack" within the context of Bitcoin transactions. This complex technical problem occurs when a child transaction is replaced by fee-bidding (RBF), and consequently, the new child no longer references the original ephemeral anchor. This results in both the parent transaction and the originally referenced fee bump being expelled from the mempool. The suggested mitigation strategy involves persistent re-broadcasting of the transaction. The rationale behind this approach is that each attempt to execute the cycle attack incurs a cost on the attacker in terms of fees, thus making it an expensive endeavor to maintain the attack over time. 

Furthermore, this situation can be perceived from a strategic standpoint where an entity is attempting to censor a particular transaction. Such an entity would need to continuously outbid others to prevent the transaction from being included in a block â€” needing to do so for every block and even between blocks if the defense is executed correctly under the assumption of mempool synchrony. In contrast, the victim of this censorship only needs to pay once, either at the conclusion of the "game" or at their anticipated rate. Despite the importance of this issue, there is an expressed desire to avoid delving too deeply into the cycle attack debate as it has been extensively discussed within the development community. For more detailed technical insights, interested parties can reference the discussions on the Linux Foundation mailing list: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021999.html.</summary>
    <published>2024-01-08T16:26:01.476000+00:00</published>
  </entry>
</feed>
