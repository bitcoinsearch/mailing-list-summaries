<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>LNHANCE bips and implementation</title>
  <updated>2024-01-19T02:15:31.432186+00:00</updated>
  <author>
    <name>reardencode 2024-01-18 06:22:10.878000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>LNHANCE bips and implementation</title>
    <updated>2024-01-19T02:15:31.432212+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lnhance-bips-and-implementation/376/12" rel="alternate"/>
    <summary>A recent development in the realm of Bitcoin coding involves the creation of a Pull Request (PR) that has been made against the repository 'binana', which is maintained by a developer known as @ajtowns. The purpose of this PR is to generate numbers for two specific features: CSFS and INTERNALKEY. For anyone interested in reviewing or contributing to this enhancement, the changes are available at [https://github.com/bitcoin-inquisition/binana/pull/1](https://github.com/bitcoin-inquisition/binana/pull/1).

In conjunction with this, draft Pull Requests for both internalkey and csfs have been separately proposed against the main Bitcoin Core repository. These drafts can be accessed through their respective links: [https://github.com/bitcoin/bitcoin/pull/29269](https://github.com/bitcoin/bitcoin/pull/29269) for internalkey, and [https://github.com/bitcoin/bitcoin/pull/29270](https://github.com/bitcoin/bitcoin/pull/29270) for csfs. The intent behind these individual PRs is to streamline the review process by isolating each feature.

The discussion also mentions a potential future strategy regarding another feature known as CTV (CheckTemplateVerify). Should the approach of splitting prove to be beneficial, similar action will be taken for CTV. This would entail dividing it into two separate PRs â€“ one that excludes functional tests and does not incorporate any deployment parameters, not even for regtest environments, and another that includes functional tests along with regtest deployment parameters. This modularization aims to simplify the integration and testing phases of development.</summary>
    <published>2024-01-18T06:22:10.878000+00:00</published>
  </entry>
</feed>
