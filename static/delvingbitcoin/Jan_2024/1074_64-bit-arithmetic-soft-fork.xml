<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>64 bit arithmetic soft fork</title>
  <updated>2024-01-12T02:13:31.383259+00:00</updated>
  <author>
    <name>sipa 2024-01-11 14:54:55.887000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>64 bit arithmetic soft fork</title>
    <updated>2024-01-12T02:13:31.383287+00:00</updated>
    <link href="https://delvingbitcoin.org/t/64-bit-arithmetic-soft-fork/397/6" rel="alternate"/>
    <summary>The discourse revolves around the encoding systems utilized within the programming sphere, specifically in the context of Bitcoin Improvement Proposals (BIPs). There is a debate over the use of little endian encoding versus the currently implemented minimal-length big endian. Advocates for the minimal-length big endian argue that it offers compactness when encoding literals inside scripts, which is beneficial over the full-length constant that little endian would require. This current system also has the advantage of being established and widely adopted, having gone through rigorous processes of implementation, testing, and deployment.

Seeking further clarification and information, a request was made for resources to understand the nuances of these encoding methods better. A link was provided to a footnote in BIP324, which can be found [here](https://github.com/bitcoin/bips/blob/deae64bfd31f6938253c05392aa355bf6d7e7605/bip-0342.mediawikicite_note-1), shedding light on the efficiencies of the existing encoding system.

Additionally, there is a proposal to streamline future versions by eliminating certain operations such as OP_ADD, OP_SUB, and comparison operations in favor of mandating the use of 64-bit versions. The rationale behind this is to reduce confusion and complexity. However, this suggestion has met with resistance, with some finding it unreasonable to push for a change in the number encoding system across the ecosystem based solely on the perception that the existing one is slightly unconventional. The conversation suggests a tension between innovating for potential efficiency and adhering to well-tested, existing protocols within the programming community.</summary>
    <published>2024-01-11T14:54:55.887000+00:00</published>
  </entry>
</feed>
