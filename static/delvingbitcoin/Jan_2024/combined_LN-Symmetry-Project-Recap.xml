<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - LN-Symmetry Project Recap</title>
  <updated>2024-01-11T02:06:08.483002+00:00</updated>
  <author>
    <name>instagibbs 2024-01-10 19:56:47.130000+00:00</name>
  </author>
  <author>
    <name>rustyrussell 2024-01-10 17:01:16.260000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2024-01-05 19:18:51.887000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2024-01-05 18:41:17.125000+00:00</name>
  </author>
  <author>
    <name>ProofOfKeags  . 2024-01-05 18:09:14.568000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2024-01-05 18:03:45.164000+00:00</name>
  </author>
  <link href="delvingbitcoin/Jan_2024/1060_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1059_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/934_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/932_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/931_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/929_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - LN-Symmetry Project Recap</title>
    <updated>2024-01-11T02:06:08.483093+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ln-symmetry-project-recap/359/6" rel="alternate"/>
    <summary>The recent discourse surrounding the Lightning Network's proposed eltoo update mechanism has shed light on the complexities of channel operations and the need for additional measures to ensure secure, efficient transactions. The eltoo system was initially understood to require only two rounds, breach and fast-forward, but a deeper analysis revealed that multiple steps are involved, potentially doubling the expected timelock duration. An individual named Alice initiates the process with an `update_signed` message containing a MuSig2 partial signature; however, if Bob, who now holds the complete signature, halts communication, Alice faces an extended wait due to sequential timelocks before settlement can occur, thereby doubling the initial timelock expectation.

To alleviate such issues, the concept of using CTV (CHECKTEMPLATEVERIFY) or an emulation thereof has been explored, demonstrating its ability to eliminate unnecessary round-trip communications in payment protocols by enabling "fast forwards." This capability is credited to CTVâ€™s facilitation of state-graph cut-throughs directly within Bitcoin transactions. However, there is still a need to investigate whether other covenant schemes could replicate these functionalities without fully relying on CTV.

The LN-Symmetry Project took the theoretical groundwork of eltoo and translated it into research-quality software, revealing both the concept's potential and the challenges it faces. While the project implemented functional tests for various channel activities, certain features like cooperative closes and anchor spending support were not addressed due to evolving specifications and technical hurdles. The project's focus on simplifying BOLT specifications and improving fee management resulted in allowing all outputs in settlement transactions to be spent freely, with the exception of HTLC-Success paths. The use of CTV emulation emerged as a significant benefit, promoting faster payment processes by removing the need for round-trips.

A notable challenge encountered during the project was avoiding pinning, which required considerable effort to develop a resilient system against such attacks. The experience gained also led to questioning the effectiveness of penalties in deterring competent adversaries, suggesting that well-functioning systems could serve as a better preventive measure. The LN-Symmetry Project produced valuable work artifacts, including contributions to the Package Relay Project and the creation of Ephemeral Anchors. It developed a CLN implementation, made necessary changes to Bitcoin Core for testing, and provided resources for understanding PTLC compatibility with eltoo channels. The project culminated in insights for potential future softfork discussions and channel design, although it is currently paused to shift focus toward mempool-related work.

The materials and insights generated from this project are accessible through various links to GitHub repositories and documents that detail the specifications, implementations, and proposals related to eltoo channels and their integration with Bitcoin's underlying technology. These resources serve as a foundation for ongoing and future development in optimizing the Lightning Network's efficiency and security.</summary>
    <published>2024-01-10T19:56:47.130000+00:00</published>
  </entry>
</feed>
