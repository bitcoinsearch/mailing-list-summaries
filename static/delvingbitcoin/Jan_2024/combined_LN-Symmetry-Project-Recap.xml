<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - LN-Symmetry Project Recap</title>
  <updated>2024-01-16T02:03:20.782923+00:00</updated>
  <author>
    <name>ajtowns 2024-01-15 06:56:27.495000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2024-01-14 12:44:16.551000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2024-01-14 06:13:17.355000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2024-01-14 05:52:08.172000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2024-01-10 19:56:47.130000+00:00</name>
  </author>
  <author>
    <name>rustyrussell  . 2024-01-10 17:01:16.260000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2024-01-05 19:18:51.887000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2024-01-05 18:41:17.125000+00:00</name>
  </author>
  <author>
    <name>ProofOfKeags  . 2024-01-05 18:09:14.568000+00:00</name>
  </author>
  <author>
    <name>instagibbs  . 2024-01-05 18:03:45.164000+00:00</name>
  </author>
  <link href="delvingbitcoin/Jan_2024/1113_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1109_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1108_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1107_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1060_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1059_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/934_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/932_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/931_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/929_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - LN-Symmetry Project Recap</title>
    <updated>2024-01-16T02:03:20.783006+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ln-symmetry-project-recap/359/10" rel="alternate"/>
    <summary>The programming community is addressing challenges and optimizations of eltoo update mechanisms for the Lightning Network, focusing on issues such as private channel navigation using route hints, as exemplified by a [GitHub code sample](https://github.com/instagibbs/lightning/blob/be3919d9814579e6c8fb42c49c2efc9fcb5cb91f/tests/test_eltoo.pyL135). Payment division into smaller amounts is suggested to mitigate path discovery problems and handle large transactions more effectively.

Implementing eltoo has encountered technical hurdles including feature bit conflicts, non-eltoo channel creation complications, and payment processing disruptions due to unclear recipient paths and channel shutdown errors. Node restarts have raised data integrity issues with stored values not matching valid secp256k1 points. Manual ephemeral anchors usage has facilitated successful transactions, yet accessing private keys for fund recovery remains challenging.

Efforts to optimize state proposals in financial transactions are underway, involving CheckTemplateVerify (CTV) protocols which could minimize signature round-trips and storage of historical transaction updates via annex fields or partial adaptor signatures, despite the complexity added by dual signatures.

Resources such as a [GitHub document](https://github.com/instagibbs/bolts/blob/a17b60f42077a785c625430e8f6e8e2828d4d898/XX-eltoo-transactions.mdrationale-1) and [GitHub Issue 5](https://github.com/instagibbs/bolts/issues/5) explore technical details of CTV to streamline transactions by integrating state machines into Bitcoin transactions. Optimistic update limitations in the Lightning Network protocol are noted, with nonce handling requiring further enhancements for out-of-sequence updates without compromising security, as detailed at [eltoo peer protocol](https://github.com/instagibbs/bolts/blob/a17b60f42077a785c625430e8f6e8e2828d4d898/XX-eltoo-peer-protocol.mdeltoo-simplified-operation).

Discussions also delve into the complexities of channel operations under eltoo's proposal, potentially increasing timelock durations and examining alternative covenant schemes like OP_CTV that may offer state-graph cut-through capabilities.

The LN-Symmetry Project contributes to the development of eltoo-style channels through research-quality software, anti-pinning research, and concepts like [Ephemeral Anchors](https://github.com/instagibbs/bips/blob/d33cdbd0777700f4fc488d54b90a8795d2c33639/bip-ephemeralanchors.mediawiki), although it leaves some features unimplemented due to ongoing improvements. It emphasizes longer htlc expiry deltas for security and expresses skepticism towards penalty systems.

Significant updates in acquisition/bitcoin software v25.1-inq aim to improve system functionality and security, with release notes available for developers. Segregated Witness (segwit) ephemeral anchors have been integrated into BOLT specifications, promising to enhance network efficiency. Libwally library updates support taproot changes, marking an important scripting advancement in Bitcoin.

Compatibility studies of Point Time-Locked Contracts (PTLCs) with eltoo-style channels seek to further understanding within this framework. Proposed backports of anti-pin technology to current BOLT specifications consider policy changes in Bitcoin Core to address commitment transaction fees. However, the project is paused to focus on mempool functionalities, with the LN-Symmetry Project aiming to de-risk future softforks and advance channel design in the Bitcoin ecosystem.</summary>
    <published>2024-01-15T06:56:27.495000+00:00</published>
  </entry>
</feed>
