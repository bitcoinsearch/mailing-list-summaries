<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - LN-Symmetry Project Recap</title>
  <updated>2024-01-08T11:44:47.717112+00:00</updated>
  <author>
    <name>instagibbs 2024-01-05 19:18:51.887000+00:00</name>
  </author>
  <author>
    <name>instagibbs 2024-01-05 18:41:17.125000+00:00</name>
  </author>
  <author>
    <name>ProofOfKeags 2024-01-05 18:09:14.568000+00:00</name>
  </author>
  <author>
    <name>instagibbs 2024-01-05 18:03:45.164000+00:00</name>
  </author>
  <link href="delvingbitcoin/Jan_2024/934_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/932_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/931_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/929_LN-Symmetry-Project-Recap.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - LN-Symmetry Project Recap</title>
    <updated>2024-01-08T11:44:47.718108+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ln-symmetry-project-recap/359/4" rel="alternate"/>
    <summary>The email in question discusses several technical aspects of blockchain protocols, specifically those relating to the Lightning Network (LN) and proposed improvements to channel operations. A significant point raised pertains to the handling of nonces in an implementation. The current specification allows for passing a single nonce per round, which aligns with the "optimistic" updates from the simplified update protocol. However, this approach restricts out-of-turn updates due to associated latency issues, which could be resolved by introducing an additional nonce along with the logic to manage it safely. Although optimistic sending of updates has not been implemented, it remains part of the existing specification as detailed on GitHub.

Furthermore, the email touches upon theoretical aspects of the injunction period within the existing protocol, suggesting it is typically two rounds consisting of "breach" and "justice". In contrast, the eltoo protocol—understood to also operate within two rounds, "breach" and "fast-forward"—may require a more extended period due to the need for a double timelock during the "update phase". This longer timeframe for expiry deltas is essential for maintaining security in eltoo channels, a fact not previously fully explored before this comprehensive breakdown.

The LN-Symmetry Project was initiated to test the limits of the eltoo concept without immediate consensus or softforks. It produced research-quality software capable of common cases like channel opens, payments, and unilateral closes but lacked features such as cooperative closes, persistence for new keytypes/fields, and anchor spending support. The project's outcomes highlighted the difficulty of avoiding pinning, the benefits of introducing CheckTemplateVerify (CTV) emulation for easier payment protocols, and skepticism about the future role of penalties in network security.

Key contributions from the project include extensive anti-pinning research, leading to innovations like Ephemeral Anchors within the Package Relay Project, and various code implementations hosted on GitHub for elements like CLN support and Bitcoin Core adaptations. Drafts for BOLT modifications were created and are accessible online, alongside notes on Point Time Locked Contracts (PTLCs) that suggest further simplifications in channel operations through fast-forwards.

Finally, the email indicates that the project is on hold while focusing shifts to mempool-related work, with the hope that these developments will inform discussions around future softforks and channel design enhancements.</summary>
    <published>2024-01-05T19:18:51.887000+00:00</published>
  </entry>
</feed>
