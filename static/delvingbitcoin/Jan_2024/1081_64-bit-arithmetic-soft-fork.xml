<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>64 bit arithmetic soft fork</title>
  <updated>2024-01-12T02:11:52.416579+00:00</updated>
  <author>
    <name>ajtowns 2024-01-11 17:39:55.430000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>64 bit arithmetic soft fork</title>
    <updated>2024-01-12T02:11:52.416609+00:00</updated>
    <link href="https://delvingbitcoin.org/t/64-bit-arithmetic-soft-fork/397/12" rel="alternate"/>
    <summary>The email discussion revolves around the complexity and potential confusion arising from a script containing multiple operation codes (opcodes), such as OP_ADD, OP_SUB, and OP_ENABLE64BIT. The suggestion offered to mitigate this confusion involves a particular constraint on the opcode `ENABLE64BIT`. It is proposed that `ENABLE64BIT` should be designed to cause the script to fail if it is not placed as the first opcode in the script sequence, with the exception of any `OP_SUCCESSx` operations.

Furthermore, the proposition extends to future upgrades that may introduce new opcodes with the prefix 'ENABLE'. These future opcodes would ideally have the flexibility to appear in any order at the beginning of the script. This added leniency, however, is currently reserved for the introduction of new opcodes and does not apply to `ENABLE64BIT`.

The recommendation also includes strict enforcement of the placement rule for `ENABLE64BIT`, even within conditional branches of the script that are not executed, such as those within an `IF/ELSE` structure. This ensures consistency in the script's behavior and avoids unintended consequences when certain branches are not activated during script execution. By enforcing these guidelines, the clarity and predictability of the scripting language can be significantly improved, facilitating its current use and providing a structured approach for future expansions.</summary>
    <published>2024-01-11T17:39:55.430000+00:00</published>
  </entry>
</feed>
