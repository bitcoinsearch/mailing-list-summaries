<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[BUG]: spammers get Bitcoin blockspace at discounted price. Let's fix it</title>
  <updated>2024-01-09T09:17:18.233719+00:00</updated>
  <author>
    <name>ProofOfKeags 2024-01-08 20:55:19.486000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[BUG]: spammers get Bitcoin blockspace at discounted price. Let's fix it</title>
    <updated>2024-01-09T09:17:18.233719+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bug-spammers-get-bitcoin-blockspace-at-discounted-price-lets-fix-it/327/16" rel="alternate"/>
    <summary>The discussion revolves around the perceived inequities in how different types of transactions are treated on a blockchain network, particularly focusing on Bitcoin. The conversation suggests that simple transactions may be disadvantaged due to price discrimination that does not accurately reflect the relative costs they impose on the network compared with other transactions. There is an acknowledgment that the structure or size of the witness discount might not correspond to the actual resource costs incurred by the network.

Moreover, the argument posits that witness data is fundamentally less expensive for the network than state transition data due to its nature. This claim stands open for debate, inviting counterarguments that demonstrate otherwise. The contention is not whether certain transactions should be prioritized but whether they should be treated equally if their network costs differ. Specifically, it is suggested that the discount applied to witness data should be justified by its actual cost to node-runners rather than transactors.

Furthermore, the utility of witness data diminishes over time as the proof-of-work mechanism essentially compresses historical witness information into a format that can be verified efficiently, which supports the functionality of the `assumevalid` setting in Bitcoin Core. This feature assumes that transactions are valid up to a certain point, reducing the need to process the entire history of witness data for synchronizing the blockchain, thus making the sync process more efficient and secure.</summary>
    <published>2024-01-08T20:55:19.486000+00:00</published>
  </entry>
</feed>
