<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lightning transactions with v3 and ephemeral anchors</title>
  <updated>2024-01-18T02:13:43.394406+00:00</updated>
  <author>
    <name>instagibbs 2024-01-17 23:13:02.376000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lightning transactions with v3 and ephemeral anchors</title>
    <updated>2024-01-18T02:13:43.394440+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lightning-transactions-with-v3-and-ephemeral-anchors/418/13" rel="alternate"/>
    <summary>In the realm of HTLC transactions, a move towards version 3 (v3) is considered to be a basic improvement. However, for a comprehensive resolution of pinning issues, it becomes necessary to ensure that all HTLC spending paths, including those for revoked states, utilize presigned v3 transactions. This proposal stems from recognizing that HTLC-Timeout paths associated with revoked states could also lead to the creation of pins, which is an overlooked aspect of layered transaction structures.

To further elaborate, the ANYONECANPAY feature inherent in HTLC-Success paths controlled by the remote party can be exploited by an adversary. They can do this by inflating the transaction data to generate a pin. To counteract this vulnerability, transitioning to a combination of v3 transactions and ephemeral anchors is suggested. While this approach would effectively mitigate the risk of pinning, it does introduce an increase in virtual bytes (vb) in scenarios that are otherwise benign, which is a tradeoff that needs consideration.

It's worth noting that if Lightning Network (LN) commitment transactions were not structured in layers, the process of securing the network would be somewhat simplified. The primary focus would only need to be on locking down the HLTC-Success paths. This is because, without the layering, the contesting period would not directly expose HTLC outputs, thus diminishing the complexity of the issue at hand.</summary>
    <published>2024-01-17T23:13:02.376000+00:00</published>
  </entry>
</feed>
