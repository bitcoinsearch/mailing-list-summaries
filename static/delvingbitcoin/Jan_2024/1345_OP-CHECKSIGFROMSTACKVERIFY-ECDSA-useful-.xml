<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>OP_CHECKSIGFROMSTACKVERIFY ECDSA useful?</title>
  <updated>2024-01-26T02:08:03.215932+00:00</updated>
  <author>
    <name>reardencode 2024-01-25 23:40:42.439000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>OP_CHECKSIGFROMSTACKVERIFY ECDSA useful?</title>
    <updated>2024-01-26T02:08:03.215967+00:00</updated>
    <link href="https://delvingbitcoin.org/t/op-checksigfromstackverify-ecdsa-useful/438/6" rel="alternate"/>
    <summary>The discussion revolves around the reactivation of Chialisp's CAT and the potential use of proof-of-work (PoW) with plain hashes in this context. An example is provided that illustrates a simple stack script for such an operation. The script includes commands like 'CAT', 'SWAP', 'SHA256', and 'EQUALVERIFY', which hint at a process for verifying a hash without specifying the nonce length, suggesting flexibility in its implementation. It suggests that alternatives to ECDSA, such as this method involving straightforward hashing, could be more suitable for certain applications. The conversation reflects a preference for these alternatives, aligning with an initial intuition regarding the effectiveness of different cryptographic techniques.</summary>
    <published>2024-01-25T23:40:42.439000+00:00</published>
  </entry>
</feed>
