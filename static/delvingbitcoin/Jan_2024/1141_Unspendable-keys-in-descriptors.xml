<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Unspendable keys in descriptors</title>
  <updated>2024-01-17T02:05:40.810724+00:00</updated>
  <author>
    <name>salvatoshi 2024-01-16 14:20:19.095000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Unspendable keys in descriptors</title>
    <updated>2024-01-17T02:05:40.810750+00:00</updated>
    <link href="https://delvingbitcoin.org/t/unspendable-keys-in-descriptors/304/22" rel="alternate"/>
    <summary>The correspondence identifies a specific technical issue concerning the order of keys in wallet policies and their representation in descriptor templates. The crux of the problem lies in the mismatch between the natural order of extended public keys (xpubs) listed within wallet policies and the left-to-right sequence found in descriptor templates. A provided example illustrates this discordance, where a descriptor template is defined as `"tr(_,{pk(@1/**),pk(@0/**)})"`, yet the associated keys are arranged as `["xpubA", "xpubB"]`. In this scenario, the expected left-to-right ordering does not align with the actual order, which should be `pubkeyA||pubkeyB`.

The discussion suggests that if the placeholder `_` used to denote a deterministic NUMS key is exclusively determined by wallet policies, then adopting an approach native to wallet_policy would be more favorable. This recommendation hints at a resolution where the inherent structure of wallet policies would guide the organization and referencing of keys, potentially alleviating inconsistencies brought about by the current system's design.</summary>
    <published>2024-01-16T14:20:19.095000+00:00</published>
  </entry>
</feed>
