<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Block-stalling issue in Core prior to v22.0</title>
  <updated>2024-01-31T02:06:19.579140+00:00</updated>
  <author>
    <name>instagibbs 2024-01-30 21:10:59.516000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Block-stalling issue in Core prior to v22.0</title>
    <updated>2024-01-31T02:06:19.579175+00:00</updated>
    <link href="https://delvingbitcoin.org/t/block-stalling-issue-in-core-prior-to-v22-0/499/2" rel="alternate"/>
    <summary>When operating a non-listening node in a network, the difficulty of executing certain types of attacks increases significantly. This enhanced security stance stems from the reduced visibility and interaction such a node has with the rest of the network. By not actively listening for incoming connections, it becomes more challenging for potential attackers to identify, target, and exploit vulnerabilities within the node. The strategy of running a non-listening node serves as a preventive measure against a variety of attack vectors that rely on the ability to communicate directly with a node.

This approach aligns with a conservative security philosophy where reducing the attack surface is a priority. It takes advantage of the principle of least privilege by limiting the node's exposure to only necessary network activities and interactions. As a result, the node avoids unnecessary risks associated with open ports and services that could be exploited by malicious actors. Adopting such conservative measures is crucial in environments where security is paramount, and the integrity of the node is essential for the overall stability and reliability of the system it operates within.</summary>
    <published>2024-01-30T21:10:59.516000+00:00</published>
  </entry>
</feed>
