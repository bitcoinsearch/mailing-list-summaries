<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Ecash TIDES using Cashu and Stratum v2</title>
  <updated>2024-05-16T01:59:38.985798+00:00</updated>
  <author>
    <name>EthnTuttle 2024-05-15 16:58:18.975000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Ecash TIDES using Cashu and Stratum v2</title>
    <updated>2024-05-16T01:59:38.985828+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ecash-tides-using-cashu-and-stratum-v2/870" rel="alternate"/>
    <summary>Integrating the Blind Diffie-Hellman key exchange (BDHKE) mechanism from Cashu into the Stratum v2 Protocol as an extension, offers a novel approach to enhance the privacy and auditability of pool rewards, specifically tailored for small payouts. This method hinges on the usage of `block_keysets` that are periodically updated either upon finding a new block or at network difficulty adjustments. These keysets play a crucial role in the share submission process by miners, as they entail public keys with assigned values correlating to difficulty targets, which in turn influence the TIDES reward system.

Upon submitting a valid share, a hash provider (HP) engages in a two-step communication with the pool. Initially, alongside the standard share data, the HP generates and sends a blinded message to the pool, utilizing a secret derived from the hashing process. If the share is deemed valid, the pool then signs this blinded message, effectively completing the BDHKE process. This signed, blinded message, along with the share, gets logged in a time-ordered fashion, maintaining the integrity and confidentiality of the transaction.

A critical phase follows when a block is discovered by the pool or when a new difficulty adjustment occurs, prompting a rotation of the `block_keyset`. The pool publishes a comprehensive list of shares and their corresponding blinded signatures, indicating to the HPs that the `eHash` shares are ready for redemption. This redemption process is meticulously recorded, aligning with the ecash Proof of Liabilities protocol, ensuring transparency and verifiability of transactions.

The proposed integration also contemplates the utilization of various spending conditions supported by Cashu, such as P2PK, and explores potential enhancements like offloading specific computational tasks to ASICs for efficiency gains. Furthermore, while Fedimint is acknowledged as a compatible ecash solution, its implementation specifics remain to be thoroughly investigated.

This proposal encapsulates a detailed framework aimed at fortifying privacy, auditability, and flexibility in cryptocurrency mining rewards distribution. For further exploration and visual aid, additional resources and references including [Cashu ecash protocol](https://github.com/cashubtc/nuts), [ecash Proof of Liabilities](https://gist.github.com/callebtc/ed5228d1d8cbaade0104db5d1cf63939), [Ocean TIDES](https://ocean.xyz/docs/tides), and [Stratum v2 Spec](https://stratumprotocol.org/specification/) are recommended. Moreover, a vocal summary of these ideas is accessible [here](https://fountain.fm/episode/zfEPkjPmQd8rD2cxq5tR), complementing the written proposal with an auditory guide.</summary>
    <published>2024-05-15T16:58:18.975000+00:00</published>
  </entry>
</feed>
