<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Post-clustermempool package RBF: per-chunk processing</title>
  <updated>2024-05-25T01:56:44.905432+00:00</updated>
  <author>
    <name>instagibbs 2024-05-24 18:13:42.370000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Post-clustermempool package RBF: per-chunk processing</title>
    <updated>2024-05-25T01:56:44.905462+00:00</updated>
    <link href="https://delvingbitcoin.org/t/post-clustermempool-package-rbf-per-chunk-processing/190/17" rel="alternate"/>
    <summary>The email discusses a specific issue within the context of Replace-By-Fee (RBF) mechanics, highlighting a scenario where a higher fee transaction (V) is replaced by a lower fee transaction (E), which contradicts the original intent behind RBF rules. This situation is problematic for several reasons. First, it disrupts user expectations by facilitating a non-incentive compatible RBF, akin to an ANYONECANPAY transaction, leading to a legacy mempool problem. Secondly, even setting aside anti-Denial-of-Service (DoS) measures, this practice necessitates that the original transaction V be rebroadcast only to be evicted and then re-admitted into the mempool, suggesting that maintaining V without replacement would have been more efficient.

The communication further explores potential solutions and ideas to address such issues, albeit with varying degrees of feasibility. One suggestion involves TRUC (Transaction Replacement Under Consensus), modified to restrict the network topology to certain sizes or shapes, ensuring optimal linearization of transactions. Another concept proposes the introduction of a "top block" (v4) mechanism, where the transaction E exists in a top-block chunk, implying its preemption in processing despite RBF rules. Additionally, the email mentions refining the RBF process when a transaction connects to a cluster not optimally linearized by imposing potentially burdensome RBF constraints. Lastly, it suggests a method for allowing the existing mempool diagram to "learn" about new transaction chunks (denoted as $[P,B,C]$) simultaneously with the introduction of new diagrams, thereby leveraging additional work done by new transactions for the benefit of the existing mempool.</summary>
    <published>2024-05-24T18:13:42.370000+00:00</published>
  </entry>
</feed>
