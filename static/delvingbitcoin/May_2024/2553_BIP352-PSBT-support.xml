<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP352: PSBT support</title>
  <updated>2024-05-29T02:03:05.323846+00:00</updated>
  <author>
    <name>josibake 2024-05-28 12:16:55.572000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP352: PSBT support</title>
    <updated>2024-05-29T02:03:05.323878+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bip352-psbt-support/877/7" rel="alternate"/>
    <summary>The discussion revolves around the optimization of storing proofs in a system, specifically questioning the feasibility of maintaining a cumulative or running sum of Discrete Logarithm Equality (DLEQ) proofs, rather than having to store individual proofs for each input and output. This approach is favored as it would streamline the process and reduce storage requirements, highlighting a need for efficiency in handling proofs within the system.

Furthermore, there's an openness to the idea of attaching a proof with each input as a possible solution, although the preference leans towards finding a more consolidated method like the running proof sum. The exploration of other systems and protocols for potential solutions is also mentioned, with a specific reference to reviewing the Musig2 Partially Signed Bitcoin Transactions (PSBT) Bitcoin Improvement Proposal (BIP) draft. The aim here is to draw parallels and possibly adopt strategies from Musig2's approach, which is believed to share conceptual similarities with the current challenge being addressed. This indicates a proactive strategy in seeking out and learning from existing methodologies to apply to their own systemâ€™s needs.</summary>
    <published>2024-05-28T12:16:55.572000+00:00</published>
  </entry>
</feed>
