<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Silent Payments: Light Client Protocol</title>
  <updated>2024-05-24T02:03:57.239495+00:00</updated>
  <author>
    <name>setavenger 2024-05-23 10:04:41.386000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Silent Payments: Light Client Protocol</title>
    <updated>2024-05-24T02:03:57.239529+00:00</updated>
    <link href="https://delvingbitcoin.org/t/silent-payments-light-client-protocol/891/9" rel="alternate"/>
    <summary>When exploring the use of Blindbit oracle as a backend solution, a method is employed where the utxo array is converted into a map, allowing for iteration over the values. This process mirrors the structure of a previously discussed JSON, suggesting that simplification could be achieved by omitting the `txid` from the output structure. There's an underlying question about whether this conversion introduces significant overhead on the client side, which prompts the suggestion of benchmarking different approaches for a comprehensive comparison. The outcome of such benchmarks could determine the necessity of grouping on the indexing side.

In scenarios where Blindbit is not utilized, the alternative involves leveraging a BIP158 client to request entire blocks, ensuring access to the complete transaction structure. This method follows a sequential process starting with fetching tweaks and filters, creating ScriptPubKeys through mapping, identifying matches, downloading the entire block, and finally scanning transactions to find outputs. The efficiency of the last step is notably enhanced by prior mapping and grouping efforts.

Furthermore, the discussion touches upon the bandwidth implications of using Blindbit Oracle compared to traditional methods that involve downloading entire blocks. The primary objective with Blindbit was to minimize bandwidth consumption, although a direct comparison to quantify this benefit has not been conducted. Such an analysis would be crucial in understanding the trade-offs between these approaches in terms of bandwidth efficiency and overall performance.</summary>
    <published>2024-05-23T10:04:41.386000+00:00</published>
  </entry>
</feed>
