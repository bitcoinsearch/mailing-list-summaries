<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Ecash TIDES using Cashu and Stratum v2</title>
  <updated>2024-05-18T02:00:20.375972+00:00</updated>
  <author>
    <name>calle 2024-05-17 10:29:21.212000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Ecash TIDES using Cashu and Stratum v2</title>
    <updated>2024-05-18T02:00:20.376005+00:00</updated>
    <link href="https://delvingbitcoin.org/t/ecash-tides-using-cashu-and-stratum-v2/870/13" rel="alternate"/>
    <summary>The TIDES documentation provides clarity on how shares are weighted, specifically mentioning the role of the `share_log_window` in this process. It outlines that a blinded signature, which is matched with a target difficulty, is used as a method for valuation within the `share_log_window`. This implies that an `eShare` does not equate directly to satoshis, suggesting a nuanced approach to valuation that diverges from a straightforward 1:1 conversion rate.

An interesting alternative was considered, where the mint could determine the value of blind signatures retrospectively, meaning that the user wouldn't need to assign a value when sending the blind message. However, this option was ultimately set aside in favor of a simpler, more direct approach that does not require the mint operator to keep track of all outstanding blind messages for later valuation. This decision reflects a preference for simplicity and efficiency in the system's design, avoiding the complexities associated with post-transaction value assignment. The exchange on GitHub highlighted an original idea that was reconsidered in light of these practical considerations, leading to the adoption of the current methodology.</summary>
    <published>2024-05-17T10:29:21.212000+00:00</published>
  </entry>
</feed>
