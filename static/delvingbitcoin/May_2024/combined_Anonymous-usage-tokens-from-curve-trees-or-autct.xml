<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Anonymous usage tokens from curve trees or autct</title>
  <updated>2024-05-14T01:56:57.981118+00:00</updated>
  <author>
    <name>1440000bytes 2024-05-13 12:04:04.974000+00:00</name>
  </author>
  <author>
    <name>AdamISZ  . 2024-05-10 14:50:11.542000+00:00</name>
  </author>
  <link href="delvingbitcoin/May_2024/2407_Anonymous-usage-tokens-from-curve-trees-or-autct.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2401_Anonymous-usage-tokens-from-curve-trees-or-autct.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Anonymous usage tokens from curve trees or autct</title>
    <updated>2024-05-14T01:56:57.981157+00:00</updated>
    <link href="https://delvingbitcoin.org/t/anonymous-usage-tokens-from-curve-trees-or-autct/862/2" rel="alternate"/>
    <summary>The recent developments in making joinstr pools sybil resistant have been notable, particularly with the proposition that peers in a round demonstrate ownership of a UTXO greater than a specified amount of sats. This concept, reminiscent of the hodlboard proof of concept, allows for enhanced security through the verification of asset ownership. The implementation can be initiated by either the pool creator or the nostr relay associated with the pool, suggesting a scalable approach to mitigating DoS and sybil attacks across various use cases. The potential integration of autct in pathcoin as an alternative to fidelity bonds is also under consideration. This could simplify the self-custodial eCash model significantly, especially if bitcoin covenants become a reality, offering a more streamlined approach compared to current methods.

The exploration of private proof of pubkey ownership marks a significant stride forward, especially considering the limitations of previous solutions like ring signatures which suffered from scalability issues due to sublinear verification times. The introduction of Curve Trees introduces a scalable solution by creating Zero-Knowledge Proofs (ZKPs) that maintain the anonymity of the key owner within large sets, enabling the proof of ownership of one taproot utxo pubkey out of potentially millions. This advancement addresses major scalability and privacy concerns, making it particularly applicable to large anonymity sets and has practical implications for the Lightning network by addressing channel gossip and jamming issues without compromising on privacy.

The technical aspects of Curve Trees, including their efficiency and the optimization of proof sizes, represent a significant leap forward. The ability to maintain fast verification times across keysets ranging from 50K to 2.5M keys and the real-world application demonstrated by the [hodlboard](https://hodlboard.org) proof of concept for forum sign-up processes underscore its practical viability. Despite challenges related to wallet support, the implications for protocols like Lightning are profound, offering a method to advertise node capacity in a privacy-preserving manner. Furthermore, technical advancements such as batch verification using bulletproofs and the avoidance of pairings underscore the efficiency and security of Curve Trees. The exploration into extending Curve Trees with credential systems like KVAC opens up new avenues for enhancing privacy and scalability within cryptocurrency networks, presenting a promising outlook for future implementations in environments like the Lightning Network's gossip protocols.</summary>
    <published>2024-05-13T12:04:04.974000+00:00</published>
  </entry>
</feed>
