<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Anonymous usage tokens from curve trees or autct</title>
  <updated>2024-05-15T02:01:07.291606+00:00</updated>
  <author>
    <name>1440000bytes 2024-05-14 17:39:45.215000+00:00</name>
  </author>
  <author>
    <name>AdamISZ 2024-05-14 13:13:42.707000+00:00</name>
  </author>
  <author>
    <name>bytes  . 2024-05-13 12:04:04.974000+00:00</name>
  </author>
  <author>
    <name>AdamISZ  . 2024-05-10 14:50:11.542000+00:00</name>
  </author>
  <link href="delvingbitcoin/May_2024/2414_Anonymous-usage-tokens-from-curve-trees-or-autct.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2413_Anonymous-usage-tokens-from-curve-trees-or-autct.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2407_Anonymous-usage-tokens-from-curve-trees-or-autct.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2401_Anonymous-usage-tokens-from-curve-trees-or-autct.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Anonymous usage tokens from curve trees or autct</title>
    <updated>2024-05-15T02:01:07.291692+00:00</updated>
    <link href="https://delvingbitcoin.org/t/anonymous-usage-tokens-from-curve-trees-or-autct/862/4" rel="alternate"/>
    <summary>The discussion revolves around the utilization of unspent transaction outputs (UTXOs) as a mechanism to fortify joinstr pools against Sybil attacks, emphasizing the requirement for participants to prove ownership of a UTXO with a value exceeding a specific threshold in satoshis. This procedure can be implemented by either the pool's creator or via a nostr relay that oversees the pool's function. The approach aims to reinforce defenses against Denial of Service (DoS) and Sybil attacks across a variety of applications, extending its potential utility to platforms beyond one-time payment systems. Furthermore, this method is proposed as a viable replacement for fidelity bonds within autct, potentially simplifying self-custodial eCash concepts and aligning with future covenants in the Bitcoin protocol. This advancement could simplify digital currency transactions, enhancing security and user-friendliness, especially in decentralized systems where proving ownership and authenticity is crucial.

Another significant area of exploration is the private proof of pubkey ownership which has garnered interest with its application in Joinmarket and potential uses in the Lightning network to address issues like channel gossip and jamming. Previous solutions, such as those relying on ring signatures, faced scalability challenges due to sublinear verification times, rendering them impractical for larger anonymity sets. Curve Trees introduce an algebraic structure akin to a Merkle tree but utilize points instead of hashes, facilitating the creation of Zero-Knowledge Proofs (ZKPs) that prove membership of a taproot utxo pubkey in a set without identifying the specific key. This represents a substantial enhancement over previous methodologies, allowing for the efficient management of keysets ranging from 50K to 2.5M while ensuring rapid verification times. The practicality of Curve Trees has been demonstrated through testing on various keyset sizes and the deployment of a proof of concept website, [hodlboard](https://hodlboard.org), showcasing forum sign-up through taproot key ownership verification. Despite the challenges in generating these proofs, primarily due to wallet support limitations, the implications for protocols like Lightning are significant, offering a privacy-preserving method to advertise node capacity. Technical progress includes optimizing proof sizes and computational efficiency, with batch verification leveraging bulletproofs for arithmetic circuit ZKPs. Notably, Curve Trees eschew the need for pairings, relying on the Elliptic Curve Discrete Logarithm (ECDL) assumption, setting it apart from other fast verification methods that necessitate additional cryptographic assumptions. Ongoing explorations suggest that Curve Trees could be extended with credential systems like KVAC, offering a decentralized avenue for representing aggregated value credentials, thereby potentially improving privacy and scalability in networks like Bitcoin, particularly within the Lightning Network's gossip protocols.</summary>
    <published>2024-05-14T17:39:45.215000+00:00</published>
  </entry>
</feed>
