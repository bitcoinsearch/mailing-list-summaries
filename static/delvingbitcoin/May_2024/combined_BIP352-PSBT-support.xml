<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP352: PSBT support</title>
  <updated>2024-05-29T02:03:30.765253+00:00</updated>
  <author>
    <name>josibake 2024-05-28 12:16:55.572000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-05-27 22:13:47.258000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-05-27 00:34:44.509000+00:00</name>
  </author>
  <author>
    <name>andrewtoth  . 2024-05-20 17:56:49.967000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-05-20 12:01:29.956000+00:00</name>
  </author>
  <author>
    <name>Sosthene  . 2024-05-19 17:32:48.113000+00:00</name>
  </author>
  <author>
    <name>josibake  . 2024-05-17 11:51:04.620000+00:00</name>
  </author>
  <link href="delvingbitcoin/May_2024/2553_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2548_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2539_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2478_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2462_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2458_BIP352-PSBT-support.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2441_BIP352-PSBT-support.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP352: PSBT support</title>
    <updated>2024-05-29T02:03:30.765316+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bip352-psbt-support/877/7" rel="alternate"/>
    <summary>The discourse opens with an inquiry into the feasibility of implementing a cumulative Discrete Logarithm Equality (DLEQ) proof system within the Partially Signed Bitcoin Transactions (PSBT) framework to enhance operational efficiency by circumventing the need for storing individual proofs for each input and output. This idea is juxtaposed against the current procedural norm, which could potentially necessitate extensive storage solutions. Additionally, there's an exploration into adopting a security-enhancing methodology for cryptographic operations that involves the `OutputGenerator` leveraging an "ECDH share" from participants rather than directly managing private keys. This concept theoretically allows transaction outputs to be generated without compromising the confidentiality of individual private keys by aggregating ECDH shares from all participants. However, it also introduces the challenge of verifying the accuracy of each participant's contribution without exposing their private keys, suggesting the possible utility of running DLEQ proofs to validate the integrity of these contributions.

The narrative progresses with a significant update to the draft BIP, incorporating DLEQ proof based on insights from [a gist by RubenSomsen](https://gist.github.com/RubenSomsen/be7a4760dd4596d06963d67baf140406). This inclusion aims at bolstering the proposal's security framework, showcasing a commitment to integrating advanced cryptographic techniques. This move indicates a broader objective of aligning the proposal with contemporary cryptographic standards and practices, underscoring a dedication to enhancing security and efficiency within the PSBT framework.

Further elaboration is provided on technical strategies intended to streamline silent payments within PSBTs, focusing on excluding placeholder scriptpubkey for fee calculations in unsigned transactions to prevent misinterpretations by older versions. The discussion extends to safeguarding the integrity of transaction outputs and silent payment addresses through the implementation of immutable flags, thus ensuring the finality of transaction parameters and simplifying fee calculations. Moreover, concerns are raised regarding the eligibility of outputs for spending, advocating for a methodological merge of Constructor and Updater roles to effectively discriminate between eligible and non-eligible prevouts, thereby reinforcing transaction security.

A detailed exposition delves into the complexities of associating `shared_secret_tweak` with specific inputs and spend keys in transactions involving multiple silent payment addresses. This segment underscores the importance of an efficient mechanism for mapping each tweak to its corresponding transaction element, highlighting the critical nature of this association for transaction integrity and security.

An initial foray into the practical application of PSBT in a donation wallet context reveals an experimental setup utilizing WebAssembly, marked by a rudimentary yet foundational approach to handling silent payment outputs. This system employs a proprietary method for tweaking the spend private key during the signing phase, a crucial step detailed with code references on GitHub. The method facilitates accurate fee calculation while allowing for modifications until transaction finalization, albeit with room for optimization. Challenges related to managing inputs in silent payment taproot scripts and the potential for enhancing coinjoin wallets with silent payment functionalities are acknowledged, suggesting further exploration into cryptographic standards might be warranted.

In conclusion, discussions surrounding the enhancement of privacy and security in cryptocurrency transactions through PSBTs culminate in the contemplation of immediate and future implementation strategies. The discourse underscores the existing capabilities for spending silent payment outputs and elucidates the intricacies involved in sending such payments, including the dependencies on generated outputs and inputs alongside access to private keys. A draft BIP suggests a streamlined approach by introducing an `OutputGenerator` role, encapsulating silent payment logic and potentially obviating the need for direct private key access through the use of an "ECDH share." Despite the innovative nature of these proposals, caution is advised regarding their unproven security, particularly in the context of signing devices' responses to Diffie-Hellman requests, reflecting a nuanced balance between advancing transaction privacy and ensuring robust security measures.</summary>
    <published>2024-05-28T12:16:55.572000+00:00</published>
  </entry>
</feed>
