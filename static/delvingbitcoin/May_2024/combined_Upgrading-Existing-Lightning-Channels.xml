<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Upgrading Existing Lightning Channels</title>
  <updated>2024-05-25T01:58:48.152581+00:00</updated>
  <author>
    <name>ProofOfKeags 2024-05-24 20:33:44.599000+00:00</name>
  </author>
  <author>
    <name>carla 2024-05-24 15:10:07.937000+00:00</name>
  </author>
  <author>
    <name>ProofOfKeags 2024-05-24 01:41:22.851000+00:00</name>
  </author>
  <author>
    <name>tbast  . 2024-05-23 08:45:23.695000+00:00</name>
  </author>
  <author>
    <name>williamstheth  . 2024-05-23 04:49:35.411000+00:00</name>
  </author>
  <author>
    <name>tbast  . 2024-05-21 08:46:22.539000+00:00</name>
  </author>
  <author>
    <name>carla  . 2024-05-17 17:04:07.932000+00:00</name>
  </author>
  <link href="delvingbitcoin/May_2024/2535_Upgrading-Existing-Lightning-Channels.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2532_Upgrading-Existing-Lightning-Channels.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2529_Upgrading-Existing-Lightning-Channels.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2515_Upgrading-Existing-Lightning-Channels.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2513_Upgrading-Existing-Lightning-Channels.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2481_Upgrading-Existing-Lightning-Channels.xml" rel="alternate"/>
  <link href="delvingbitcoin/May_2024/2446_Upgrading-Existing-Lightning-Channels.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Upgrading Existing Lightning Channels</title>
    <updated>2024-05-25T01:58:48.152678+00:00</updated>
    <link href="https://delvingbitcoin.org/t/upgrading-existing-lightning-channels/881/7" rel="alternate"/>
    <summary>The conversation centers on the potential separation of a proposal into two distinct parts, focusing on the aspects with and without funding output conversion. The dialogue suggests a willingness to divide the text into separate documents or different pull requests if it facilitates a better negotiation process with Eclair/CLN/LDK. This division aims at prioritizing the ability to change state-space constraints and the commitment rendering function more effectively. Additionally, there's an expressed interest in reusing DynComms for TRUC commitments, indicating a perceived natural evolution in this direction.

The discussion further delves into the implementation specifics concerning upgrades, particularly highlighting the spec's clarity on STC/that comparison table, and how it doesn't upgrade without funding output changes. It's noted that most implementations are nearing completion on splicing, and PTLCs are still somewhat off in the future, suggesting a preference for pursuing splice-to-upgrade post-taproot gossip release. This approach would involve a fee-cognizant heuristic or manual upgrade to decide when to transition to the chain, underlining a collective curiosity about everyone's approach to these upgrades.

An analysis presents the Dynamic Commitments proposal as already well-specified for enabling channel upgrades without funding output spends, provided the channels share the same funding output script. Clarification is sought for any confusion surrounding this point, alongside an acknowledgment of niche use cases for upgrading to STCs, primarily to add Taproot Assets to the channel state despite limited current interest. The discourse extends to the necessity of STCs for transitioning to PTLCs, pondering the maintenance of another hybrid channel type and inviting other implementations to offer their perspectives.

Further examination reveals the Version 3 (V3) software update's focus on the `max_accepted_htlcs` parameter, aiming to address security and efficiency by enforcing more restrictive network-level policies. The need for careful consideration during this transition is emphasized to avoid disruptions in transaction propagation. Positive feedback is given for a summary provided, showing enthusiasm for proceeding with V3 transactions as a step towards project or system improvement.

Enhancements to the Bitcoin protocol through V3 transactions promise significant advancements for Lightning Network channels, especially regarding defenses against pinning attacks. The introduction of features like sibling eviction and a unified shared key anchor through recent GitHub pull requests ([Bitcoin PR 29496](https://github.com/bitcoin/bitcoin/pull/29496) and [Bitcoin PR 29306](https://github.com/bitcoin/bitcoin/pull/29306)) is highlighted, along with a detailed document ([Delving into Bitcoin](https://delvingbitcoin.org/t/lightning-transactions-with-v3-and-ephemeral-anchors/418)) that outlines a streamlined process for transaction handling via V3 commitment transactions. Various proposed methods for facilitating these upgrades indicate differing stages of development, with some still awaiting specifications and interoperability discussions. The complexities involved in transitioning to simple taproot channels (STCs) necessitate a thoughtful approach to both funding output and commitment changes, suggesting a phased strategy starting with dynamic commitments for parameter and commitment updates before moving to STCs and PTLCs. This phased approach allows for an evaluation of different upgrade paths based on their impacts on costs, privacy, and feature introductions, underscoring the strategic considerations network participants must weigh in choosing their upgrade pathways.</summary>
    <published>2024-05-24T20:33:44.599000+00:00</published>
  </entry>
</feed>
