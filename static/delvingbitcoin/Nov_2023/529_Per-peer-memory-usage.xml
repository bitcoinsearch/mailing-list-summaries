<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Per-peer memory usage</title>
  <updated>2023-12-30T10:26:58.199928+00:00</updated>
  <author>
    <name>mzumsande 2023-11-30 20:19:30.029000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Per-peer memory usage</title>
    <updated>2023-12-30T10:26:58.199928+00:00</updated>
    <link href="https://delvingbitcoin.org/t/per-peer-memory-usage/194/4" rel="alternate"/>
    <summary>The preliminary analysis of memory usage for transaction-relaying peers indicates that they consume approximately 600kb to 1.4MB each, with a significant portion likely attributed to the rolling bloom filter known as `m_tx_inventory_known_filter`. In stark contrast, peers dedicated solely to block-relay-only operations utilize much less memory, typically under 10kb. This suggests a notable efficiency in block-relay-only peer design in terms of memory consumption.

Additionally, it appears that the average memory footprint of `CNode`, which represents a network node, is relatively small when compared to the average peer. However, this observation does not account for potential surges in memory usage that occur during the processing of large messages. Such spikes are expected but were not evident in the current dataset. The inference being that the memory usage patterns of `CNode` are not significantly influenced by the type of connectionâ€”whether it is block-relay-only or otherwise.

The analysis prompts further investigation into whether there are any critical insights missing from these observations. It seeks to identify other potential impacts on memory usage and understand the nuances of how memory is utilized in different scenarios within the network, especially under conditions not reflected in the initial data.</summary>
    <published>2023-11-30T20:19:30.029000+00:00</published>
  </entry>
</feed>
