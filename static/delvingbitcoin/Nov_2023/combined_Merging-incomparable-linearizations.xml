<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Merging incomparable linearizations</title>
  <updated>2023-12-29T19:20:17.851064+00:00</updated>
  <author>
    <name>sipa 2023-12-05 19:47:48.383000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-12-05 16:33:31.586000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-12-04 21:36:19.239000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2023-12-04 13:51:48.334000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-12-04 13:45:54.361000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2023-12-04 08:56:10.627000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2023-12-04 08:44:31.802000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2023-12-04 06:45:08.147000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2023-12-04 06:42:52.083000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-12-03 20:17:32.034000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-12-03 18:44:47.046000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-12-02 22:12:48.137000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-12-01 21:31:13.226000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-11-30 23:17:01.333000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2023-11-30 20:16:51.659000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-11-30 20:03:23.016000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2023-11-30 19:51:14.883000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-11-30 19:30:00.473000+00:00</name>
  </author>
  <author>
    <name>ajtowns 2023-11-30 19:01:40.070000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-11-29 22:15:13.496000+00:00</name>
  </author>
  <author>
    <name>sipa 2023-11-29 19:01:17.049000+00:00</name>
  </author>
  <link href="delvingbitcoin/Dec_2023/562_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/627_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/449_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/561_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/560_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/559_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/558_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/557_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/531_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/556_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/555_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/479_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/508_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2023/530_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2023/528_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2023/527_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2023/526_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2023/525_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2023/524_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2023/514_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <link href="delvingbitcoin/Nov_2023/502_Merging-incomparable-linearizations.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Merging incomparable linearizations</title>
    <updated>2023-12-29T19:20:17.852058+00:00</updated>
    <link href="https://delvingbitcoin.org/t/merging-incomparable-linearizations/209/44" rel="alternate"/>
    <summary>The focus of the study is to create an optimal transaction linearization by merging existing ones. Linearizations are compared using fee-size diagrams, with the goal of achieving a linearization that is never worse and sometimes better than others. The Best-chunk merging algorithm was initially considered but found to have limitations, as it may not always improve the result and has complexity $\mathcal{O}(n^2)$. It could also fail to take advantage of common subsets in both input linearizations.

To overcome these issues, the Intersection merging algorithm was proposed, which considers intersections of highest-feerate prefixes. Despite improvements, this method still did not guarantee better outcomes. A more advanced technique, the Prefix-intersection merging algorithm, expands the search to all prefix intersections between two linearizations. This method suggests focusing on intersections involving the best chunk of at least one linearization and maintains the same complexity of $\mathcal{O}(n^2)$ while providing consistently better or at least comparable results to the inputs.

However, proof of the absolute superiority of this algorithm is lacking, and its non-associative nature when merging presents additional challenges. An example demonstrated how different merging sequences can result in varying outcomes, highlighting the nuanced complexity of the process. The discussion also touches upon post-processing's limitations in addressing certain scenarios, such as when transactions have arranged feerates.

A geometric approach introduced the gathering theorem, asserting that a new diagram based on a subset of transactions will always be above or equal to the original if the subset forms a single chunk with a feerate greater than or equal to the highest chunk feerate of the original linearization. This theorem uses visual representations to validate the improved outcome of the new linearization.

The exploration concludes that if an underestimate of a linearization diagram lies on or above another linearization's diagram, then it is superior or equivalent. The concept of average feerate versus individual chunk feerate was examined, with a preference for higher fee diagrams as indicators of superior linearization. There was also a mention of the necessity to include the initial case in proofs, and the effectiveness of horizontal line segments in determining optimal solutions.

Additionally, the ability to visualize feerates through plotting was discussed, with a [Google Spreadsheet](https://docs.google.com/spreadsheets/d/1blG8NBjcjidVJhsmXGoEaJljlmeFFUJccYrWfTUVcjU/edit?usp=sharing) provided for experimentation. The method for constructing non-optimal feerate diagrams for combined good and bad subsets was shown to result in better linearizations when optimally chunked. Furthermore, merging post-processed linearizations was highlighted, showing that further post-processing might improve outcomes, as illustrated using Mermaid syntax.

Finally, an algorithm was described to optimize transaction ordering by initially chunking the present linearization into sections with unique feerates and then rearranging chunks to prioritize good transactions. Reordering within a chunk can only maintain or enhance the arrangement, and progress is made by moving good transactions to the beginning unless they are already there. The completion condition is an ideal state where a chunk starts with all its good transactions at a specific feerate 'f', indicating an optimal ordering.</summary>
    <published>2023-12-05T19:47:48.383000+00:00</published>
  </entry>
</feed>
