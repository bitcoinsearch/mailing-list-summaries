<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merging incomparable linearizations</title>
  <updated>2024-05-31T02:04:31.199301+00:00</updated>
  <author>
    <name>ajtowns 2023-11-24 15:23:37.932000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merging incomparable linearizations</title>
    <updated>2024-05-31T02:04:31.199332+00:00</updated>
    <link href="https://delvingbitcoin.org/t/merging-incomparable-linearizations/209/9" rel="alternate"/>
    <summary>The concept introduced revolves around a specific function, $C(L)$, that processes a linearisation $L$ into two parts: the first chunk $P_L$, and the remainder $T_L$. In the scenario where $L$ is not empty, it's guaranteed that $P_L$ will also contain elements, though $T_L$ might be empty. Furthermore, the operation $L - X$ is defined as the process of removing transactions in $X$ from $L$, which allows for manipulation and analysis of transaction sequences based on certain criteria.

In discussing feerate comparisons, the notation $A \le B$ signifies that $B$ has a higher or equal feerate across all evaluated points when compared. This introduces the basis for prefix-intersection merging, denoted as $M(L_1, L_2)$. This method involves the decomposition of each linearization $L_1$ and $L_2$ into their respective initial chunks and remainders, followed by reordering the transactions in the first chunk of $L_1$ to match the sequence they appear in $L_2$. This reordered chunk is then further split, creating subsets that are assessed to determine the highest feerate chunk between the two initial sets. The chosen chunk dictates the next step in the merging process, with the goal being to maintain or improve the overall feerate of the merged sequence.

The detailed examination of this process includes the identification and comparison of chunks within $L_1$ and $L_2$, and how their reorganization and merging affect the feerate and order of transactions. By defining specific variables ($\gamma_j$, $\delta_j$, $\epsilon_j$, $\zeta_j$) to represent cumulative properties of these chunks, the discussion leads to a mathematical exploration of how the feerate diagram changes with different configurations of these variables. This culminates in the assertion that under the described operations, the resulting linearisation maintains or improves its feerate, demonstrated through the relationship between total size and fee of segments within the linearisations. 

This intricate explanation underscores the theoretical underpinnings of optimizing transaction ordering based on feerate, showcasing a methodical approach to evaluating and enhancing the efficiency of transaction sequences. Through a combination of splitting, reordering, and comparing chunks of transactions, it presents a structured strategy to achieve optimized feerate outcomes in transaction linearisations.</summary>
    <published>2023-11-24T15:23:37.932000+00:00</published>
  </entry>
</feed>
