<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Post-clustermempool package RBF: per-chunk processing</title>
  <updated>2024-05-24T01:59:55.120730+00:00</updated>
  <author>
    <name>sipa 2023-11-27 12:44:27.306000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Post-clustermempool package RBF: per-chunk processing</title>
    <updated>2024-05-24T01:59:55.120763+00:00</updated>
    <link href="https://delvingbitcoin.org/t/post-clustermempool-package-rbf-per-chunk-processing/190/11" rel="alternate"/>
    <summary>The discussed approach reveals a nuanced challenge in transaction processing, specifically addressing scenarios where a package comprises a parent transaction and a CPFP (Child Pays for Parent) child transaction. This setup aims to enhance the feerate of the parent transaction by linking it with the child. However, complications arise when this package simultaneously conflicts with a separate, larger transaction that does not contribute to the relay cost. Under normal circumstances, relaying the parent transaction alone would be permissible. The issue at hand pertains to the combined relay of both the parent and its CPFP child, which is problematic.

To address this, one proposed solution involves the segmentation of relayed packages. Upon segmenting, transactions within the package that lack a parent but individually meet the minimum fee requirement set by mempoolminfee could be processed independently as their own "chunk." This method offers an approximate way to circumvent the difficulties posed by the original problem, ensuring that transactions capable of satisfying the minimum fee criteria are not unjustly penalized due to their association within a problematic package.</summary>
    <published>2023-11-27T12:44:27.306000+00:00</published>
  </entry>
</feed>
