<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Post-clustermempool package RBF: per-chunk processing</title>
  <updated>2024-05-24T02:00:49.424568+00:00</updated>
  <author>
    <name>sipa 2023-11-15 19:13:35.289000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Post-clustermempool package RBF: per-chunk processing</title>
    <updated>2024-05-24T02:00:49.424600+00:00</updated>
    <link href="https://delvingbitcoin.org/t/post-clustermempool-package-rbf-per-chunk-processing/190/7" rel="alternate"/>
    <summary>The discussion emphasizes the complexities and potential drawbacks of allowing lower feerate chunks to fulfill anti-DoS rules for higher feerate chunks within a transaction system. The concern is that integrating such a mechanism would not only add significant complexity to the system's implementation but also might inadvertently allow higher feerate chunks to meet the incentive compatibility rule designed for lower-feerate chunks. This approach could lead to unintended interactions between unrelated transactions, complicating the validation process.

The conversation suggests a preference for prioritizing incentive compatibility when selecting transactions for validation, rather than focusing on DoS-compatibility. It argues against the strategy of aggregating chunks based on their DoS compatibility, proposing instead that if additional computational resources were available, they should be utilized to search for aggregates or subsets of chunks that offer better incentive compatibility.

A specific rule is mentioned where a child’s fee rate must exceed the parent’s fee rate for both to be included in the same chunk, which is highlighted as a straightforward guideline for wallets. This rule facilitates easier transaction inclusion by linearly arranging child and parent in the same chunk. Furthermore, the dialogue touches upon a scenario involving a high-feerate small parent chunk and a low-feerate child chunk, suggesting an alternative solution of attaching a small, high-fee transaction to the parent chunk to mitigate concerns regarding fee rates without necessitating a higher feerate for the child chunk.

Lastly, the discussion acknowledges the possibility of dropping an entire transaction package due to issues like signature failures or complications arising from recent soft forks, indicating a cautious approach towards handling potential 'malicious' failures within the system.</summary>
    <published>2023-11-15T19:13:35.289000+00:00</published>
  </entry>
</feed>
