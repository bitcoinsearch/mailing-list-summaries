<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Merging incomparable linearizations</title>
  <updated>2024-05-31T02:02:16.390885+00:00</updated>
  <author>
    <name>sipa 2023-11-26 17:09:16.598000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Merging incomparable linearizations</title>
    <updated>2024-05-31T02:02:16.390920+00:00</updated>
    <link href="https://delvingbitcoin.org/t/merging-incomparable-linearizations/209/19" rel="alternate"/>
    <summary>The concept of chunking in transaction sets is discussed, where it's not necessary for the feerates to decrease monotonically throughout the sequence. A chunking operation \(C\left((s_1,s_2,\ldots,s_n)\right) = (t_1,t_2,\ldots,t_m)\) is introduced, which combines adjacent sets based on the criterion that a later set has a higher feerate than an earlier one. This operation leads to the formation of a structure that might not be concave. 

Furthermore, the discussion introduces some theoretical propositions about this chunking operation. One such theorem suggests that the chunking operation on any given sequence \(S\) will always yield a result that is equal to or greater than \(S\) itself, mathematically represented as \(C(S) \geq S\). Another proposition states that if one sequence \(A\) is greater than or equal to another sequence \(B\), then the chunking operation applied to \(A\) will also result in an outcome that is greater than or equal to the chunking applied to \(B\), expressed as \(A \geq B \implies C(A) \geq C(B)\). These discussions and mathematical representations bring forth a broader understanding of how transaction sets can be optimized or restructured without strictly adhering to the previously assumed requirement of decreasing feerates.</summary>
    <published>2023-11-26T17:09:16.598000+00:00</published>
  </entry>
</feed>
