<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Post-clustermempool package RBF: per-chunk processing</title>
  <updated>2024-05-24T02:00:05.537505+00:00</updated>
  <author>
    <name>instagibbs 2023-11-22 17:03:43.226000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Post-clustermempool package RBF: per-chunk processing</title>
    <updated>2024-05-24T02:00:05.537537+00:00</updated>
    <link href="https://delvingbitcoin.org/t/post-clustermempool-package-rbf-per-chunk-processing/190/10" rel="alternate"/>
    <summary>The process of deduplication in package transactions (PKG) involves the removal of any transaction that is already present in the receiver's mempool. This step prompts a contemplation on whether it would be practical to treat transactions with the same transaction ID but different witness transaction IDs as replace-by-fee (RBF) conflicts. Currently, when such a scenario arises, the new transaction is discarded, and the existing witness transaction ID in the mempool is reported. The proposal suggests an approach for handling post-cluster mempool conflicts by comparing the sizes of the conflicting transactions. If the incoming transaction is larger than the one already present, it should be deduplicated with the smaller one. Conversely, if the incoming transaction is smaller and meets the new chunk's RBF rules, then replacing the witness transaction ID seems to be a natural solution without necessitating free relay. This method also has the advantage of favoring smaller witnesses for relay purposes, which could mitigate the effects of witness stuffing, such as during a coinjoin, by preferring transactions with smaller witnesses.</summary>
    <published>2023-11-22T17:03:43.226000+00:00</published>
  </entry>
</feed>
