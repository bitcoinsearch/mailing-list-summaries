<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Revisiting BIP21</title>
  <updated>2024-03-08T01:55:59.319796+00:00</updated>
  <author>
    <name>MattCorallo 2024-03-07 15:02:09.848000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Revisiting BIP21</title>
    <updated>2024-03-08T01:55:59.319829+00:00</updated>
    <link href="https://delvingbitcoin.org/t/revisiting-bip21/630/19" rel="alternate"/>
    <summary>The discussion revolves around the optimization and clarity of URI parsing for Bitcoin payment addresses, specifically in the context of a proposed change to BIP 21. The debate centers on how best to handle the representation of different types of Bitcoin addresses to minimize ambiguity and ensure backward compatibility during upgrade cycles. One suggestion is that future address formats should be placed in query keys as optional payment instructions. This method aims to provide a clear distinction between where to look for any given address type, thereby simplifying the parsing process. According to the new wording suggested for BIP 21, there will be only one location to search for an address type, eliminating confusion about whether to look in the root or in the keys/values section.

Furthermore, the conversation touches upon the current handling of address types that are encoded in either bech32 or bech32m format but do not have an associated BIP21 extension key. The proposition emphasizes utilizing a standard approach across Bitcoin and Lightning networks, which supports these existing address formats efficiently and also accommodates any new address types that might emerge using the same encoding scheme. For address types that do not fall into the specified categories and lack a BIP21 extension key, the use of key-value pairs is suggested to maintain consistency.

The dialogue also examines the specific cases of BOLT 11 lightning payments and the consideration for Silent Payments and BOLT12. It is recognized that BOLT 11 payments will always use the key-value (K/V) format with the "lightning" key, indicating that this aspect is unlikely to change. However, there is some flexibility in how Silent Payments and BOLT12 might be handled, with the possibility of using either K/V or a non-K/V format. The preference leans slightly towards continuing the use of K/V pairs due to their compatibility with existing code that parses URI parameters into such pairs, despite a slight inefficiency in terms of byte usage.</summary>
    <published>2024-03-07T15:02:09.848000+00:00</published>
  </entry>
</feed>
