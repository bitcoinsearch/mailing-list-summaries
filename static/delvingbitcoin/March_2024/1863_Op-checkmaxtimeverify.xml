<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Op_checkmaxtimeverify</title>
  <updated>2024-03-13T02:01:19.080718+00:00</updated>
  <author>
    <name>murch 2024-03-12 20:09:36.208000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Op_checkmaxtimeverify</title>
    <updated>2024-03-13T02:01:19.080749+00:00</updated>
    <link href="https://delvingbitcoin.org/t/op-checkmaxtimeverify/581/8" rel="alternate"/>
    <summary>The discussion revolves around the implications of expiring transactions in the Bitcoin network, particularly focusing on their potential to incentivize blockchain reorganizations (reorgs) and impact on network bandwidth. The concern was raised that high fees associated with expiring transactions might create an incentive for miners to reorg previous blocks to include these transactions if they were lucrative enough. However, it's argued that this scenario is not particularly troubling since such transactions ought to have been included initially based on their high fees.

A more concerning scenario highlighted involves a transaction confirmed in the last possible block before expiration, followed by a collaborative effort between the miner and sender to reorganize the blockchain to undo the transaction. In this case, the incentive for conducting the attack could extend up to the amount of the payment itself, rather than just the transaction fees. This presents a significant risk as the reward for the attack is substantially higher.

To combat the potential wastage of network resources by expiring transactions close to their expiration height, it's suggested that nodes should enforce higher minimum relay fees. The rationale is to discourage the submission of transactions unlikely to be mined due to their imminent expiry. However, this solution is deemed insufficient unless the fee premium is set so high that it almost guarantees the transaction's inclusion in a block before expiration. A competitive fee rate, without being prohibitively high, introduces another issue where attackers could exploit the operation code OP_EXPIRE. They could flood the network with low-priority expiring transactions, pushing out other transactions from being processed while incurring minimal costs themselves. This strategy would lead to inefficient use of bandwidth and block space, as attackers continuously submit transactions that barely make it into the block, only to replace them with new ones.</summary>
    <published>2024-03-12T20:09:36.208000+00:00</published>
  </entry>
</feed>
