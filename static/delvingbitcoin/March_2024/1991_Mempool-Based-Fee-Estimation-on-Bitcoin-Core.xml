<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Mempool Based Fee Estimation on Bitcoin Core</title>
  <updated>2024-03-23T01:54:12.061150+00:00</updated>
  <author>
    <name>harding 2024-03-22 23:41:14.700000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Mempool Based Fee Estimation on Bitcoin Core</title>
    <updated>2024-03-23T01:54:12.061181+00:00</updated>
    <link href="https://delvingbitcoin.org/t/mempool-based-fee-estimation-on-bitcoin-core/703/6" rel="alternate"/>
    <summary>In the complex world of cryptocurrency mining, there are potential strategies miners might employ to manipulate the mempool, leading to congestion and a spike in transaction fees. One such method involves the creation of large, high-fee transactions that are initially withheld from broadcast. Concurrently, a miner, referred to here as Mallory, generates a minimal-size, zero-fee transaction that directly conflicts with the previously created transactions. This conflicting transaction is included in the miner's block templates. When Mallory successfully mines a block containing this zero-fee transaction, she delays broadcasting this block. Instead, she broadcasts her large, original transactions, waits briefly, then releases her mined block into the network. This sequence of actions can deceive other users into increasing their fee rates based on the misleading data provided by the initial large transactions, potentially leading to an artificial inflation of transaction fees.

This strategy is essentially a variant of the Finney attack but requires the miner to risk losing the block reward, which is currently dominated by the subsidy. Nevertheless, as transaction fees become a more significant part of the reward, this tactic could provide a worthwhile gamble for miners who do not hold the majority power but are substantial enough to influence the network briefly. Such maneuvers exploit the feedback loop between current transaction fees, estimated fees, and future fees, highlighting a vulnerability in the way fee estimates are calculated.

The algorithmic determination of fee rates plays a pivotal role in this context. Algorithms that lower fee rates too aggressively might lead to transactions not getting mined due to negative feedback, affecting only those unable to conveniently increase their transaction fees. Conversely, algorithms that raise fee rates too aggressively may receive positive feedback as their transactions get mined, encouraging even higher fee rate estimates. This escalation continues until it reaches a point where users refuse to transact due to exorbitant fees. This situation illustrates a critical concern: while using mempool data to adjust fee rates upwards can lead to overbidding and potential manipulation by miners, lowering fee rates based on such information might be safer and more user-friendly, assuming users have the flexibility to adjust their transaction fees without significant inconvenience.</summary>
    <published>2024-03-22T23:41:14.700000+00:00</published>
  </entry>
</feed>
