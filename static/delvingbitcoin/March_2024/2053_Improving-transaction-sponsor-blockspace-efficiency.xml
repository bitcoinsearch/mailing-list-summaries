<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Improving transaction sponsor blockspace efficiency</title>
  <updated>2024-03-28T01:59:30.584235+00:00</updated>
  <author>
    <name>ajtowns 2024-03-27 02:08:03.854000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Improving transaction sponsor blockspace efficiency</title>
    <updated>2024-03-28T01:59:30.584265+00:00</updated>
    <link href="https://delvingbitcoin.org/t/improving-transaction-sponsor-blockspace-efficiency/696/10" rel="alternate"/>
    <summary>The discussion introduces an innovative concept aimed at enhancing reorganization (reorg) safety within blockchain transactions through the introduction of per-input timelocks and a unique method for ensuring transaction validity based on blockchain data. The proposed mechanism involves an annex entry associated with a transaction input, which commits to a combination of block height and a specific byte sequence. If no prior block at the specified height has a hash ending with the given byte sequence, the transaction is deemed invalid. This approach allows scripts to access and verify the annex entry, ensuring that the byte sequence is exactly 32 bytes long and searching for a value, comprising both a 48-byte and a 32-byte component, that hashes to the committed byte sequence. The 32-byte portion is then utilized as the transaction's Merkle root.

The utility of this annex entry spans various applications, from serving as a per-input timelock, facilitating the amalgamation of presigned spends with varying timelocks into a single transaction, to preventing the replay of signet/testnet signatures on the mainnet by committing to specific block attributes. Additionally, it offers a strategy for coin forking in hardfork scenarios by referencing distinct block hash endings, and proposes a method to invalidate transactions post-reorg through the commitment to subsequent block hashes, effectively increasing the proof-of-work (PoW) requirement for transaction replacement. However, the potential limitation of this approach lies in its implicit suggestion of a timelock extending 100 blocks beyond the height, which may reduce its applicability for certain use cases.</summary>
    <published>2024-03-27T02:08:03.854000+00:00</published>
  </entry>
</feed>
