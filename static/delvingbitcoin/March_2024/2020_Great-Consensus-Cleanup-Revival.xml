<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Great Consensus Cleanup Revival</title>
  <updated>2024-03-25T02:02:40.274535+00:00</updated>
  <author>
    <name>1440000bytes 2024-03-24 23:52:07.826000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Great Consensus Cleanup Revival</title>
    <updated>2024-03-25T02:02:40.274563+00:00</updated>
    <link href="https://delvingbitcoin.org/t/great-consensus-cleanup-revival/710/2" rel="alternate"/>
    <summary>The email discusses a significant challenge in block validation, highlighting an extreme case where the worst block identified requires about three minutes for validation on a modern laptop with 16 CPU cores and up to an hour and a half on a Raspberry Pi 4. The details of creating such blocks are deliberately omitted from the public discussion but will be shared among protocol developers through a semi-private post on Delving. This approach aims to keep sensitive information within a controlled group to mitigate potential misuse.

The author expresses surprise that state-sponsored miners have not attempted to exploit this vulnerability by solo mining these costly-to-validate blocks. An example of such a block and the methods to create them have been made public, sparking discussions around the proposed mitigations. Concerns have been raised regarding the potential for asset confiscation as a result of these mitigations. However, the author believes these concerns can be effectively addressed. A suggested solution involves applying new rules only when verifying the script of outputs created after a specific block height, aiming to circumvent the confiscation issue while maintaining network integrity.

Furthermore, the email emphasizes the importance of community feedback in refining these mitigation strategies. The goal is to gather suggestions for improvements and ensure that any proposed soft fork would include a comprehensive analysis of all necessary fixes. Among the issues to be addressed, the SIGHASH_SINGLE bug, reported in 2012, stands out as a critical vulnerability that needs correction alongside other bugs. For more detailed information on this bug, a link to the discussion is provided: [https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg01408.html](https://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg01408.html). This call for collaboration and feedback underscores the collective effort required to enhance the security and efficiency of the blockchain protocol.</summary>
    <published>2024-03-24T23:52:07.826000+00:00</published>
  </entry>
</feed>
