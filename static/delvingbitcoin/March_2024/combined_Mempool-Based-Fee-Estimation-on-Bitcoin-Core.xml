<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Mempool Based Fee Estimation on Bitcoin Core</title>
  <updated>2024-03-23T01:55:16.328029+00:00</updated>
  <author>
    <name>harding 2024-03-22 23:41:14.700000+00:00</name>
  </author>
  <author>
    <name>ismaelsadeeq 2024-03-22 11:40:39.031000+00:00</name>
  </author>
  <author>
    <name>ismaelsadeeq 2024-03-22 11:38:27.559000+00:00</name>
  </author>
  <author>
    <name>ClaraShk  . 2024-03-21 20:55:55.854000+00:00</name>
  </author>
  <author>
    <name>harding  . 2024-03-21 17:33:00.972000+00:00</name>
  </author>
  <author>
    <name>ismaelsadeeq  . 2024-03-21 16:27:09.262000+00:00</name>
  </author>
  <link href="delvingbitcoin/March_2024/1991_Mempool-Based-Fee-Estimation-on-Bitcoin-Core.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2024/1989_Mempool-Based-Fee-Estimation-on-Bitcoin-Core.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2024/1990_Mempool-Based-Fee-Estimation-on-Bitcoin-Core.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2024/1985_Mempool-Based-Fee-Estimation-on-Bitcoin-Core.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2024/1982_Mempool-Based-Fee-Estimation-on-Bitcoin-Core.xml" rel="alternate"/>
  <link href="delvingbitcoin/March_2024/1980_Mempool-Based-Fee-Estimation-on-Bitcoin-Core.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Mempool Based Fee Estimation on Bitcoin Core</title>
    <updated>2024-03-23T01:55:16.328091+00:00</updated>
    <link href="https://delvingbitcoin.org/t/mempool-based-fee-estimation-on-bitcoin-core/703/6" rel="alternate"/>
    <summary>The manipulation of the mempool by miners could potentially disrupt fee estimation and transaction processing within blockchain networks. One identified method involves a miner creating large, high-fee transactions along with a conflicting zero-fee transaction, which is included in a block template. The original transactions are broadcasted just before revealing the mined block containing the conflicting transaction. This strategy could momentarily inflate fee estimates as users react to the perceived congestion by submitting higher-fee transactions, which then remain valid even after the block's propagation. Although currently a high-risk strategy due to the potential loss of block rewards, its viability might increase as transaction fees come to represent a larger portion of mining incentives. The discussion also touches on the feedback loop between current fees, fee estimate algorithms, and future fees, highlighting the risks of overly aggressive fee raising strategies. These strategies could lead to a market overbid, where users are unable to adjust their fee rates downwards in response to an overestimated demand, potentially allowing miners to profit from induced higher fees.

A second point of discussion focuses on optimizing fee estimation through analysis of mempool state information, as championed by Kalle Alm at Scaling Bitcoin 2017. Alm suggests improving fee estimates by using a combination of confirmed transaction data and real-time mempool conditions. This approach aims to balance between avoiding manipulation risks and adapting swiftly to network congestion. Almâ€™s methodology involves selecting the lower of two estimates: one based on confirmed transactions and another on current mempool state, potentially allowing for more accurate, dynamic fee suggestions. Moreover, Alm elaborates on the practical implications of using Replace By Fee (RBF) mechanisms for adjusting transaction fees, which, while optimizing for cost, may inadvertently compromise privacy or require users to stay online for fee adjustments.

Lastly, the conversation delves into the technical aspects and challenges of implementing a mempool-based fee estimation mechanism within Bitcoin Core. Such an approach would rely on constructing block templates from mempool transactions to derive recommended fee rates, ideally aligning estimations with the actual inclusion likelihood in the next block. However, discrepancies between individual nodes' mempools and those of miners can lead to inaccuracies. The dialogue acknowledges the potential of integrating comprehensive blockchain analytics to refine fee estimations further, yet highlights the ongoing technical hurdles, including the efficiency of generating block templates and the impact on network performance. Experimental efforts and developer contributions towards developing a mempool-based fee estimator without sanity checks are noted, indicating a promising direction for achieving more precise fee rate predictions by closely mirroring actual median block fees.</summary>
    <published>2024-03-22T23:41:14.700000+00:00</published>
  </entry>
</feed>
