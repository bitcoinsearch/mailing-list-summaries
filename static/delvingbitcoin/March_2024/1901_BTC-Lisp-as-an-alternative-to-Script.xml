<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BTC Lisp as an alternative to Script</title>
  <updated>2024-03-15T02:00:07.428698+00:00</updated>
  <author>
    <name>bramcohen 2024-03-14 23:44:37.805000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BTC Lisp as an alternative to Script</title>
    <updated>2024-03-15T02:00:07.428733+00:00</updated>
    <link href="https://delvingbitcoin.org/t/btc-lisp-as-an-alternative-to-script/682/6" rel="alternate"/>
    <summary>Bitcoin scripts possess an inherent communication mechanism through the transactions they are part of, allowing for the possibility of aggregating multiple smart Unspent Transaction Outputs (UTXOs) into a single, larger transaction. This aggregation facilitates a common ground for understanding through the use of free-form statements within the transactions. Additionally, the input list of a transaction can be utilized to enforce certain capabilities, suggesting that while special opcodes might be necessary for detailed discussions regarding these aspects, their implementation is feasible.

A notable distinction between Chia and Bitcoin lies in how their scripts interact with external references. In Chia's design, script execution is strictly internal, prohibiting any reference to external elements and only permitting the return of conditions. On the other hand, Bitcoin allows for limited direct references to the external world through assertions. These assertions enable Bitcoin scripts to directly assert facts about their transactions and other external factors, providing a functionality similar to the conditions returned by Chia scripts. Each approach has its advantages and disadvantages, but the tradition of Bitcoin scripts making direct assertions might be preferable for future developments in BTC Lisp.</summary>
    <published>2024-03-14T23:44:37.805000+00:00</published>
  </entry>
</feed>
