<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Improving transaction sponsor blockspace efficiency</title>
  <updated>2024-03-28T01:59:45.279089+00:00</updated>
  <author>
    <name>harding 2024-03-27 01:13:31.064000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Improving transaction sponsor blockspace efficiency</title>
    <updated>2024-03-28T01:59:45.279121+00:00</updated>
    <link href="https://delvingbitcoin.org/t/improving-transaction-sponsor-blockspace-efficiency/696/9" rel="alternate"/>
    <summary>The discussion revolves around the complexity of integrating a script that can adapt to changes in the blockchain's active headers chain, specifically addressing the challenges posed by cyclic dependencies in transactions. The conversation highlights a specific example where constructing a witness for a transaction requires knowledge of the coinbase transaction's txid beforehand, creating a dependency loop. A potential solution mentioned involves using `OP_CAT` for implementing sponsor transactions within a merkle sub-tree, excluding the coinbase transaction, to circumvent this issue.

Further elaboration is made on the concept of sponsorship in transactions, aiming to make low-cost sponsorship more viable and appealing. This includes exploring how cluster mempool dynamics work to address concerns surrounding miner centralization and the inefficiencies of exogenous-fee-child-pays-for-parent (CPFP) compared to direct payments to miners for transaction inclusion. The dialogue brings up an important point about the potential for single-transaction sponsorships to achieve efficiency comparable to out-of-band (OOB) miner payments, with significantly less overhead for transactions with multiple dependencies.

The feasibility of adopting exogenous fee mechanisms without compromising on space efficiency is also discussed. It's suggested that these mechanisms offer a scalable solution should there be a shift towards protocols reliant on external fee payments. The need for a new witness version to facilitate the efficient use of sponsors is acknowledged, along with the importance of ensuring opt-in compatibility among wallets and services through improvements like automatic bech32(m) support.

Finally, the conversation touches upon the broader implications of introducing sponsorship capabilities in future updates, emphasizing the need for careful consideration and data collection regarding the use of reorg-safe transaction chains. The possibility of adding sponsorship features alongside other enhancements in a forthcoming witness version update is viewed as a strategic move, rather than one that demands immediate action.</summary>
    <published>2024-03-27T01:13:31.064000+00:00</published>
  </entry>
</feed>
