<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>State minimization in MuSig2 signing sessions</title>
  <updated>2024-03-08T01:58:58.836734+00:00</updated>
  <author>
    <name>salvatoshi 2024-03-07 09:26:58.805000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>State minimization in MuSig2 signing sessions</title>
    <updated>2024-03-08T01:58:58.836765+00:00</updated>
    <link href="https://delvingbitcoin.org/t/state-minimization-in-musig2-signing-sessions/626/6" rel="alternate"/>
    <summary>The discussion raises concerns about the potential risks associated with hashing the commitment to the transaction ID (`txid`) and wallet policy in the context of handling multiple Partially Signed Bitcoin Transactions (PSBTs) for the same transaction. The introduction of a `session_id` is proposed as a solution to minimize the likelihood of ID collisions, which, while not posing a security risk, could lead to a signing failure. The mechanism for handling such collisions is detailed, explaining that if a second PSBT with altered parameters affecting the Nonce Generation (NonceGen) process is presented, it would result in a discrepancy in the recomputed secnonce/pubnonce for at least one pair of indices, leading to an abortion of the signing process and termination of the session. Conversely, if the changes in the second PSBT do not influence the output of NonceGen, then these alterations are deemed irrelevant since NonceGen would have produced the same result regardless of the mutation. This suggests a safeguarding strategy against potential issues arising from handling multiple PSBTs for the same transaction, underlining the importance of carefully managing parameter mutations to ensure transaction security and integrity.</summary>
    <published>2024-03-07T09:26:58.805000+00:00</published>
  </entry>
</feed>
