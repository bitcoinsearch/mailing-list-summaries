<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)</title>
  <updated>2024-03-15T01:59:05.015930+00:00</updated>
  <author>
    <name>0xB10C 2024-03-14 10:57:55.218000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP324 Proxy: easy integration of v2 transport protocol for light clients (PoC)</title>
    <updated>2024-03-15T01:59:05.015961+00:00</updated>
    <link href="https://delvingbitcoin.org/t/bip324-proxy-easy-integration-of-v2-transport-protocol-for-light-clients-poc/678/4" rel="alternate"/>
    <summary>In exploring the nuances of peer-to-peer (P2P) client compatibility with BIP324 proxy, a discussion unveils the intricacies involved in ensuring proper functionality and the necessary prerequisites for seamless integration. The conversation highlights a particular focus on the correct setting of `addr_recv`, which is essential for compatibility with the BIP324 proxy. It's noted that not all clients adhere to this requirement, with specific reference to inbound connections from [LinkingLion](https://b10c.me/observations/06-linkinglion/) setting `127.0.0.1` and inbound connections from i2p and Tor, as used by Bitcoin Core, defaulting to `0.0.0.0`. This discrepancy raises considerations for the README.md documentation to possibly include a section on prerequisites, identifying compatible clients and those known to be incompatible.

Further examination reveals that the current implementation of the proxy focuses solely on outbound connections, contrary to an initial assumption that it would cater to both inbound and outbound traffic. This clarification underscores the proxy's limited scope at this stage, though there is mention of investigating support for inbound connections via a reverse proxy as a future task. Moreover, the conversation touches upon a technical limitation concerning address serialization. Specifically, only version 1 address serialization is achievable within version messages for both inbound and outbound scenarios. This constraint means that the BIP-155 address serialization, which includes formats such as TorV3, I2P, and CJDNS, cannot be accommodated. As a result, these addresses will invariably be represented as `0.0.0.0`, as detailed in the Bitcoin codebase ([source](https://github.com/bitcoin/bitcoin/blob/e1ce5b8ae9124717c00dca71a5c5b43a7f5ad177/src/net_processing.cppL1547)). This limitation presents a significant challenge for achieving comprehensive compatibility and necessitates further exploration and potential solutions to accommodate a broader range of P2P client implementations in relation to the BIP324 proxy.</summary>
    <published>2024-03-14T10:57:55.218000+00:00</published>
  </entry>
</feed>
