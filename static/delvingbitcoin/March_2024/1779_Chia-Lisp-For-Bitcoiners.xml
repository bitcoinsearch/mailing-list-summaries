<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Chia Lisp For Bitcoiners</title>
  <updated>2024-03-05T01:52:43.732459+00:00</updated>
  <author>
    <name>josibake 2024-03-04 12:51:37.350000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Chia Lisp For Bitcoiners</title>
    <updated>2024-03-05T01:52:43.732491+00:00</updated>
    <link href="https://delvingbitcoin.org/t/chia-lisp-for-bitcoiners/636/2" rel="alternate"/>
    <summary>The discussion highlights a significant aspect of using Lisp in the context of transactions that may require unexpected code on the witness stack. The inherent nature of Lisp, where code and data are treated equally, facilitates this process seamlessly. This characteristic simplifies the integration of code into the data stack, eliminating the need for additional modifications or special considerations. 

Moreover, the conversation touches upon the practical advantages of adopting ChiaLisp, given its existing real-world applications, development tools, and familiarity with known bugs. This foundation can potentially accelerate development and troubleshooting processes.

Another point of interest is the exploration of formal verification tooling available for Lisp. Despite the mention of a "lisp-variant," which suggests a deviation from standard Lisp, the inquiry into whether formal verification tools designed for Lisp could still be applicable or beneficial. This reflects an underlying consideration for enhancing security and reliability through formal verification methods, even when contemplating the use of a variant of Lisp.</summary>
    <published>2024-03-04T12:51:37.350000+00:00</published>
  </entry>
</feed>
