<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Second Look at Weak Blocks</title>
  <updated>2024-04-18T01:54:54.217362+00:00</updated>
  <author>
    <name>ajtowns 2024-04-17 15:28:21.297000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Second Look at Weak Blocks</title>
    <updated>2024-04-18T01:54:54.217391+00:00</updated>
    <link href="https://delvingbitcoin.org/t/second-look-at-weak-blocks/805/2" rel="alternate"/>
    <summary>The proposed strategy emphasizes limiting the weak block cache size based on transaction sizes while excluding duplicates, suggesting a high rate of about 16x. This approach aims to ensure that transactions from recent blocks generated by any mining pool with at least 10% hash power are almost always available. However, this method also implies that there could be a significant number of weak blocks, possibly between 50 to 100, occurring between each actual block. Additionally, it's expected that weak blocks might be found just seconds apart, potentially as frequently as once a day. The implication here is the necessity for a system capable of rapidly processing weak block messages, focusing primarily on proof of work (PoW) validation and efficient transaction caching.

Running this experimental setup on signet is particularly advocated for due to the ease of achieving full miner participation and the presence of meaningfully different mempools, as indicated by the provided example ([see Signet block](https://mempool.space/signet/block/000000bd051e8937e19a8d7aaf515570b2ef3d2e144b9af595ffcac6adeda92b)). Signet's characteristics make it an ideal testing ground for such innovations, offering insights into how divergent mempools behave under these conditions and the overall impact on network performance and reliability.</summary>
    <published>2024-04-17T15:28:21.297000+00:00</published>
  </entry>
</feed>
