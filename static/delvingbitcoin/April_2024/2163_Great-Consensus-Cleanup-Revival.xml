<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Great Consensus Cleanup Revival</title>
  <updated>2024-04-06T01:50:34.526503+00:00</updated>
  <author>
    <name>recent798 2024-04-05 10:23:22.198000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Great Consensus Cleanup Revival</title>
    <updated>2024-04-06T01:50:34.526534+00:00</updated>
    <link href="https://delvingbitcoin.org/t/great-consensus-cleanup-revival/710/11" rel="alternate"/>
    <summary>The discussion revolves around the examination of potential future violations in the context of Bitcoin's blockchain, specifically related to coinbase transactions. The focus is on understanding the extent to which coinbase outputs are spent alongside another coinbase output originating from a transaction that cannot be duplicated. This inquiry is critical because it could determine the necessity of a future soft fork aimed at addressing these issues. The possibility is raised that if all such transactions are spent in this manner, a soft fork might not be required, suggesting an opportunity to bypass the expensive checks currently considered for certain situations.

The technical conversation extends into the mechanisms of implementing changes within the Bitcoin protocol. A soft fork, as mentioned, might serve to retroactively prevent the creation of duplicate coinbase transactions. However, the application of witness commitments as a solution is questioned due to its inapplicability to past blocks. This limitation suggests that any soft fork unable to be enforced from the genesis block onwards would not eliminate the need for expensive checks in the event of a significant blockchain reorganization. 

Furthermore, the dialogue touches on alternative strategies to consensus deployment for handling potential large-scale reorganizations. Given the constraints identified with soft forks and witness commitments, there is an inclination towards developing fallback code. This approach is seen as preferable since it would not rely on consensus changes, which have their own set of limitations and complexities. The referenced materials, including the [full list of potential future violations](https://gist.github.com/darosior/3a5ac0a8d935fa9d3e90310590ca6699) and the [GitHub pull request](https://github.com/bitcoin/bitcoin/pull/12204/files), provide additional context for the technical discussions surrounding these potential blockchain integrity issues.</summary>
    <published>2024-04-05T10:23:22.198000+00:00</published>
  </entry>
</feed>
