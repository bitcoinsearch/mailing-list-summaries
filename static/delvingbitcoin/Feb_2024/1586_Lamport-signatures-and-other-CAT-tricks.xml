<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lamport signatures and other CAT tricks</title>
  <updated>2024-02-17T01:50:26.600413+00:00</updated>
  <author>
    <name>moonsettler 2024-02-16 12:18:37.806000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lamport signatures and other CAT tricks</title>
    <updated>2024-02-17T01:50:26.600439+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lamport-signatures-and-other-cat-tricks/236/19" rel="alternate"/>
    <summary>The discussion revolves around the feasibility of implementing a calculation for any 32-bit portion of a SHA256 hash within a Bitcoin script. The inquiry highlights a significant challenge in such an endeavor, pointing out that a straightforward or naive implementation would necessitate various binary operations. These operations include bitwise XOR, ROTR (rotate right), SHIFTR (logical shift right), NOT, and AND, which are not readily available in Bitcoin's scripting language. This limitation underscores the complexity and potential hurdles in executing cryptographic functions directly on the Bitcoin blockchain, given its scripting constraints.</summary>
    <published>2024-02-16T12:18:37.806000+00:00</published>
  </entry>
</feed>
