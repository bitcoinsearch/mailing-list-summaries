<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lamport signatures and other CAT tricks</title>
  <updated>2024-02-12T01:53:29.396365+00:00</updated>
  <author>
    <name>cguida 2024-02-11 22:49:38.527000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lamport signatures and other CAT tricks</title>
    <updated>2024-02-12T01:53:29.396401+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lamport-signatures-and-other-cat-tricks/236/16" rel="alternate"/>
    <summary>In the draft specification provided, a method has been described where the annex section is utilized to store the tapleaf of the previous settlement transaction within the witness of the invalidated update transaction. This approach is significant because it circumvents the need to store every old settlement transaction's output amounts and HTLCs in the database, a practice that Symmetry aims to avoid. The use of the annex in this way facilitates spending the old update transaction into the new one without the aforementioned storage requirements.

The relevance of this technique lies in its ability to streamline the process of transaction updates. By embedding the necessary tapleaf information within the witness, it becomes possible to reference the old settlement data directly, thereby optimizing the update mechanism. This strategy is particularly advantageous as it aligns with Symmetry's objective to minimize database storage demands, which can be an important consideration for systems seeking efficiency and scalability.

The specification can be reviewed in more detail by accessing the relevant section of the GitHub repository [here](https://github.com/instagibbs/bolts/blob/a17b60f42077a785c625430e8f6e8e2828d4d898/XX-eltoo-transactions.mdrationale-1).</summary>
    <published>2024-02-11T22:49:38.527000+00:00</published>
  </entry>
</feed>
