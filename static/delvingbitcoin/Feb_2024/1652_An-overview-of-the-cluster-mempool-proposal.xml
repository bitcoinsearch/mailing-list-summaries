<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An overview of the cluster mempool proposal</title>
  <updated>2024-02-22T01:51:24.508913+00:00</updated>
  <author>
    <name>hebasto 2024-02-21 12:31:28.329000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An overview of the cluster mempool proposal</title>
    <updated>2024-02-22T01:51:24.508944+00:00</updated>
    <link href="https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393/19" rel="alternate"/>
    <summary>In addressing the challenges and inefficiencies posed by various heuristics regarding transaction replacement in the mempool, a new approach is proposed to ensure that replacements are invariably more favorable for miners. This method involves enforcing a validation rule for Replace-By-Fee (RBF) transactions that necessitates the mempool's condition to improve "strictly better," as determined through a specific feerate diagram check. This criterion aims to eliminate the ambiguity and potential suboptimality associated with current heuristics by providing a clear and quantifiable standard for transaction replacement.

The proposal raises significant questions about the practicality of constructing RBF transactions without explicit knowledge of the current ordering within the mempool. Given the dynamic and opaque nature of mempool ordering, it becomes challenging for wallets to generate RBF transaction candidates that are guaranteed acceptance under the new rule. This leads to the contemplation of what type of mempool ordering information would be necessary for wallets to effectively navigate this constraint. The availability of such data could potentially enable wallets to devise RBF transactions that align with the proposed validation rule, thereby optimizing their chances of acceptance while contributing to the overall efficiency and fairness of the mining process.</summary>
    <published>2024-02-21T12:31:28.329000+00:00</published>
  </entry>
</feed>
