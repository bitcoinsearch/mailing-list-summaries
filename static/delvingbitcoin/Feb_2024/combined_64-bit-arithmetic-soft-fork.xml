<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - 64 bit arithmetic soft fork</title>
  <updated>2024-02-29T01:51:44.311409+00:00</updated>
  <author>
    <name>Chris_Stewart_5 2024-02-28 14:12:36.190000+00:00</name>
  </author>
  <author>
    <name>sjors 2024-02-28 10:22:38.304000+00:00</name>
  </author>
  <author>
    <name>halseth  . 2024-02-27 14:12:41.868000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-02-12 15:02:02.103000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-02-04 07:44:12.309000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2024-02-04 07:30:50.587000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-02-03 16:04:35.678000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2024-02-03 12:02:57.768000+00:00</name>
  </author>
  <author>
    <name>EthanHeilman  . 2024-02-02 18:46:32.187000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-02-02 16:50:27.200000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-02-02 05:25:46.309000+00:00</name>
  </author>
  <author>
    <name>EthanHeilman  . 2024-02-01 22:23:40.258000+00:00</name>
  </author>
  <author>
    <name>halseth  . 2024-01-23 20:36:15.253000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-23 16:23:25.319000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-01-20 14:36:06.211000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-20 13:16:16.585000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-20 12:57:31.799000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-01-20 05:01:16.940000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-19 21:27:03.245000+00:00</name>
  </author>
  <author>
    <name>Davidson  . 2024-01-17 22:31:06.270000+00:00</name>
  </author>
  <author>
    <name>jamesob  . 2024-01-16 17:43:34.637000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2024-01-15 04:22:58.226000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-01-13 15:12:01.617000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-13 15:03:10.677000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-01-13 15:00:18.287000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-13 14:59:37.726000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-13 14:53:41.807000+00:00</name>
  </author>
  <author>
    <name>dgpv  . 2024-01-13 14:26:46.385000+00:00</name>
  </author>
  <author>
    <name>rustyrussell  . 2024-01-12 16:22:29.735000+00:00</name>
  </author>
  <author>
    <name>halseth  . 2024-01-12 13:20:15.414000+00:00</name>
  </author>
  <author>
    <name>ProofOfKeags  . 2024-01-11 21:01:22.448000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2024-01-11 20:57:27.933000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2024-01-11 20:40:26.242000+00:00</name>
  </author>
  <author>
    <name>ProofOfKeags  . 2024-01-11 17:55:35.883000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2024-01-11 17:42:51.731000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2024-01-11 17:39:55.430000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-11 17:19:48.085000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-11 17:19:08.767000+00:00</name>
  </author>
  <author>
    <name>ProofOfKeags  . 2024-01-11 16:46:12.669000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2024-01-11 15:23:39.480000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-11 15:08:42.326000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2024-01-11 14:54:55.887000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-11 14:24:52.280000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2024-01-11 14:11:33.795000+00:00</name>
  </author>
  <author>
    <name>halseth  . 2024-01-11 14:07:42.305000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2024-01-10 23:10:38.930000+00:00</name>
  </author>
  <author>
    <name>Chris_Stewart_  . 2024-01-10 16:11:01.778000+00:00</name>
  </author>
  <link href="delvingbitcoin/Feb_2024/1730_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1728_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1721_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1521_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1457_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1456_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1454_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1452_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1449_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1448_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1423_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1410_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1318_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1313_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1247_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1245_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1243_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1241_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1228_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1173_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1146_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1112_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1101_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1105_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1104_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1103_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1102_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1099_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1093_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1088_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1086_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1085_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1084_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1083_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1082_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1081_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1078_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1080_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1079_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1076_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1075_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1074_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1073_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1072_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1071_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1061_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <link href="delvingbitcoin/Jan_2024/1057_64-bit-arithmetic-soft-fork.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - 64 bit arithmetic soft fork</title>
    <updated>2024-02-29T01:51:44.311714+00:00</updated>
    <link href="https://delvingbitcoin.org/t/64-bit-arithmetic-soft-fork/397/47" rel="alternate"/>
    <summary>The conversation begins with an examination of adapting `CScriptNum` for implementing `OP_INOUT_AMOUNT` in Bitcoin. This involves encoding satoshi values as minimally encoded integers and managing potential overflow exceptions when numeric op codes interpret these larger `CScriptNum` values. The aim is to enhance Bitcoin's scripting capabilities to support extensive numerical operations without compromising system integrity.

Subsequent discussions highlight the implications of integrating `OP_INOUT_AMOUNT` within the Bitcoin network, emphasizing the theoretical and practical benefits for transactional flexibility and security. A new blog post, test scripts, and a GitHub commit are provided for further exploration of these script enhancements.

The conversation also addresses the critical handling of hashes in programming, focusing on the correct processing of leading zeroes and endianness through specific opcodes like `FROMFIXNUM` and `BYTEREV`. This segment underscores the importance of data consistency across computational environments.

Furthermore, the dialogue explores the challenges of big number operations within blockchain technologies, proposing a nuanced approach to the minimaldata rule to simplify programming efforts. It also discusses ensuring data integrity through the MINIMALDATA rule, which mandates a single, canonical form for each integer.

Arithmetic operations on large numbers raise considerations regarding overflows and the choice between signed and unsigned integers. Strategies such as modular arithmetic and abort-on-overflow behavior are examined, along with the implications of different serialization formats.

The computational costs associated with processing large numbers and methods to effectively manage these costs within programming environments are acknowledged, recognizing the feasibility of performing arithmetic operations on significantly large numbers without substantial impacts on computational efficiency.

The proposition of extended-bit arithmetic introduces a sophisticated approach to managing calculations beyond the 64-bit limit, with specific opcodes proposed to facilitate seamless transitions between variable and fixed encodings and accommodate endian conversions.

The proposal to modify Bitcoin's Script operation codes (opcodes) for arithmetic operations like OP_ADD64 aims to streamline arithmetic on numbers larger than 64 bits by breaking them into manageable segments. This method aids in detecting overflows and maintaining variable length encoding as the default to mitigate additional costs.

Memory consumption versus disk space within Bitcoin Script is discussed, with the integration of RISC-V emulation highlighting the utility of 64-bit arithmetic. The transition to 8-byte encodings for ScriptNums suggests a modest increase in storage requirements, as detailed in a comprehensive JSON file available at [this GitHub repository](https://github.com/Christewart/bitcoin-s-core/tree/2024-01-19-count-scriptnums).

Rusty Russell's article proposes simplifying arithmetic opcodes by focusing on non-negative numbers, while the ongoing debate about new arithmetic opcodes leans towards adding new opcodes specifically for 64-bit numbers to maintain backward compatibility.

Advancements in Script programming aim to simplify the development process, with proposals to remove certain verification flags facing skepticism due to the need for backward compatibility.

The reintroduction of 256-bit arithmetic and the consideration of complex cryptographic operations facilitated by Taproot reflect the evolving landscape of Bitcoin scripting capabilities.

The discussion about introducing a new opcode, `OP_ENABLE64BIT`, aims to expand the computational range significantly while maintaining network stability and compatibility with existing scripts. Proposals such as creating a new taproot leaf version are discussed as alternatives to direct opcode modifications.

Lastly, the enhancement of covenant opcodes by incorporating arithmetic operations on satoshi values indicates a meaningful step forward in maximizing blockchain technology's potential. The adoption of 64-bit arithmetic across various programming applications is seen as a crucial enhancement, with the community drafting a Bitcoin Improvement Proposal (BIP) for public review at [BIP proposal link](https://github.com/Christewart/bips/pull/1), and an accompanying implementation at [implementation link](https://github.com/Christewart/bitcoin/pull/2).</summary>
    <published>2024-02-28T14:12:36.190000+00:00</published>
  </entry>
</feed>
