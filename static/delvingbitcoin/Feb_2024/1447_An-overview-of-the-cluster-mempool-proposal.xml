<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>An overview of the cluster mempool proposal</title>
  <updated>2024-02-03T01:48:39.891907+00:00</updated>
  <author>
    <name>instagibbs 2024-02-02 15:36:24.905000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>An overview of the cluster mempool proposal</title>
    <updated>2024-02-03T01:48:39.891945+00:00</updated>
    <link href="https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393/11" rel="alternate"/>
    <summary>In the realm of transaction management within networked systems, there are inherent challenges associated with accommodating new transactions by displacing existing ones. The concept of relying on peers to identify which transactions to evict is flawed because it's not always feasible for a peer to be aware of all other transactions in the network. This approach also has limited applicability as it is only suitable for certain network topologies.

Moreover, the premise that wallets can efficiently make eviction decisions themselves is questionable. Such a mechanism would need to be well justified and thought out, especially when considering the long-term vision of package relay networks. In the current landscape, where one-input-one-coin (1p1c) scenarios are prevalent, the necessity for sophisticated eviction strategies seems less pressing.

Looking towards the future, the conversation shifts towards "top block" methodologies, which could reshape the transaction selection process. In this context, [sibling eviction](https://delvingbitcoin.org/t/0conf-ln-channels-and-v3-anchors/494/7future-solution-2), which is currently deemed of secondary importance, may gain relevance. A potential strategy for sibling eviction could involve simplifying the process to only exclude transactions that are not ancestors or descendants from consideration, thereby streamlining the eviction process in these evolved network structures.</summary>
    <published>2024-02-02T15:36:24.905000+00:00</published>
  </entry>
</feed>
