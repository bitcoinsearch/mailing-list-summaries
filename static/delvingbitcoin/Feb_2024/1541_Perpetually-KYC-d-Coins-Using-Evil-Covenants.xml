<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Perpetually KYC'd Coins Using Evil Covenants</title>
  <updated>2024-02-14T02:03:09.819929+00:00</updated>
  <author>
    <name>RobinLinus 2024-02-13 18:27:42.245000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Perpetually KYC'd Coins Using Evil Covenants</title>
    <updated>2024-02-14T02:03:09.819959+00:00</updated>
    <link href="https://delvingbitcoin.org/t/perpetually-kycd-coins-using-evil-covenants/556/5" rel="alternate"/>
    <summary>The discussion revolves around the enforcement of Know Your Customer (KYC) regulations within a specific model for Bitcoin transactions. This model stipulates that once an individual or entity is KYC verified, they are permitted to transact bitcoins only with other KYC-verified addresses. This requirement is implemented through the use of `OP_CTV`, which facilitates the transfer of only the Merkle root of the list of KYC'd addresses to the air-gapped device, ensuring a compact and secure process.

A significant point of differentiation highlighted in the conversation is between the covenant model and a cosigner model. The covenant model is lauded for its efficiency and practicality, requiring only a single signature every two weeks, totaling 26 signatures annually. This is contrasted with the cosigner model, where each transaction necessitates a co-signature. In scenarios involving thousands of institutions, this could potentially amount to millions of signatures per year, representing a substantial operational burden.

Additionally, the covenant model is designed to accommodate a slower signing process without negatively impacting transaction speeds. This flexibility allows for the implementation of threshold schemes that can extend over a week, starkly contrasting with the cosigner model. The latter suffers from a critical drawback: the dependency on a governmental cold signing process to complete transactions. The duration of this process directly influences opportunity costs, with longer waiting times inflating these costs. Conversely, shorter wait times necessitate a more complex and less reliable air-gapped signing process.

Contrary to what might be expected, the server responsible for hosting the whitelist in the covenant model does not need to be air-gapped. Instead, it functions as a simple, untrusted, static file server. This simplicity and ease of operation starkly contrast with the complexity and fragility associated with running a cosigning server, emphasizing the practical advantages of the covenant modelâ€™s approach to enforcing KYC regulations in cryptocurrency transactions.</summary>
    <published>2024-02-13T18:27:42.245000+00:00</published>
  </entry>
</feed>
