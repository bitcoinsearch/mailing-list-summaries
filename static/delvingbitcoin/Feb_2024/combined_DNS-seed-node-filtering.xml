<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - DNS seed node filtering</title>
  <updated>2024-02-15T02:01:50.430621+00:00</updated>
  <author>
    <name>1440000bytes 2024-02-14 15:39:37.823000+00:00</name>
  </author>
  <author>
    <name>virtu 2024-02-14 14:23:24.861000+00:00</name>
  </author>
  <link href="delvingbitcoin/Feb_2024/1568_DNS-seed-node-filtering.xml" rel="alternate"/>
  <link href="delvingbitcoin/Feb_2024/1565_DNS-seed-node-filtering.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - DNS seed node filtering</title>
    <updated>2024-02-15T02:01:50.430664+00:00</updated>
    <link href="https://delvingbitcoin.org/t/dns-seed-node-filtering/570/2" rel="alternate"/>
    <summary>The discussion revolves around the practices of version-based filtering by DNS seeds in the Bitcoin network, a subject that emerged from analyzing the implications and follow-up considerations of a previously closed GitHub Pull Request (PR29149). The focus is on how different DNS seeds manage node versions, particularly in light of concerns raised regarding the accuracy of interpreting DNS seed policy rules. The analysis presented leverages data to explore the strictness of various DNS seeds concerning their filtering criteria for old node versions.

The investigation into DNS seeds' behaviors was motivated by a desire to understand the extent of version-based filtering across the network. This inquiry was partly sparked by the closure of PR29149 on GitHub, which ended without a satisfying discussion on the matter. Despite differing opinions on the interpretation of DNS seed policy rules, the underlying goal was to shed light on the operational aspects of these crucial network components. The findings are shared with an audience that has shown an interest in the continuous monitoring of node versions within the Bitcoin ecosystem.

The data indicate that `dnsseed.bitcoin.dashjr.org` enforces the most stringent filtering criteria against outdated node versions. However, it's noted that `dnsseed.bluematt.me` and `seed.bitcoin.wiz.biz` also implement version-based filtering to some degree. The analysis compares the minimum versions of Bitcoin Core recorded by each DNS seed over a given period, highlighting differences in their operational policies. For clarity, versions predating 22.0 were adjusted in the dataset by removing the leading zero from the 0.major.minor versioning scheme.

Moreover, the conversation touches upon the variability in minimum node versions across different DNS seeds, suggesting potential filtering behaviors. While some DNS seeds showed a baseline of version 0.9.0, others were observed at a slightly lower threshold of 0.8.6. This discrepancy raises questions about the consistency and rationale behind such filtering strategies, though it is acknowledged that these findings could be coincidental due to the dynamic nature of node availability and selection processes.

For those interested in further details or ongoing monitoring efforts, the data and its daily updates are made accessible through a dedicated website, available [here](https://21.ninja/dns-seeds/node-version-range/). This resource aims to provide comprehensive insights into the evolving landscape of node versions within the Bitcoin network, catering to the technical curiosity and informational needs of the community.</summary>
    <published>2024-02-14T15:39:37.823000+00:00</published>
  </entry>
</feed>
