<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Op_checkmaxtimeverify</title>
  <updated>2024-02-21T01:54:20.329004+00:00</updated>
  <author>
    <name>EvanWinget 2024-02-20 02:12:32.910000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Op_checkmaxtimeverify</title>
    <updated>2024-02-21T01:54:20.329037+00:00</updated>
    <link href="https://delvingbitcoin.org/t/op-checkmaxtimeverify/581/3" rel="alternate"/>
    <summary>The discussion revolves around the potential addition of an op code to enable transaction expiration within a blockchain framework, specifically highlighting the considerations and preferences regarding the implementation of such a feature. The dialogue references a proposal by Peter, which is deemed more favorable compared to the original idea presented by the author of the message. Peter's proposal is rooted in a different motivation that arguably strengthens the argument for incorporating an operation code (op code) that allows transactions to expire.

A significant point of consideration in the conversation is the debate between using block height versus block time as a basis for transaction expiration. Peter and the author agree that block height presents a more reliable metric than block time, primarily due to the risk of miners manipulating the block time to their advantage. This manipulation could potentially skew the system, as miners might lie about the current time in the nTime field of a block to include or exclude certain transactions based on their timestamp-based time locks.

Despite acknowledging the risks associated with timestamp-based mechanisms, the author suggests that if timestamp-based time locks continue to exist without being phased out, introducing timestamp-based transaction expiration could serve as a counterbalance to miner incentives. In scenarios where both high fee rate transactions with expiration times and those with lock times coexist in the mempool, miners would face conflicting incentives regarding the adjustment of the nTime value. They might be motivated to adjust nTime both forward and backward to include transactions beneficial to them, whether by including those that should only become valid in the future or by adding soon-to-expire transactions to maximize their profit. This dynamic could introduce a level of complexity and strategy to the process, potentially balancing economic incentives across the network.</summary>
    <published>2024-02-20T02:12:32.910000+00:00</published>
  </entry>
</feed>
