<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Replace-By-Fee-Rate vs V3</title>
  <updated>2024-02-02T02:00:24.793857+00:00</updated>
  <author>
    <name>oohrah 2024-02-01 05:08:19.755000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Replace-By-Fee-Rate vs V3</title>
    <updated>2024-02-02T02:00:24.793883+00:00</updated>
    <link href="https://delvingbitcoin.org/t/replace-by-fee-rate-vs-v3/488/4" rel="alternate"/>
    <summary>The discussion revolves around the complexities inherent in Bitcoin transaction relays, specifically addressing the issue of infinite replacements and how certain rules can unintentionally facilitate these loops. The conversation refers to resources that outline the problem in detail, including a post on the Linux Foundation's mailing list and a technical gist document. These sources illustrate the challenges when two sets of rules interact in ways that may lead to endless cycles of transaction replacement.

Attention is drawn to a proposed solution by Peter, which has been shared on the bitcoin-dev mailing list. This solution seems to focus on a fee-rate and depth-based mechanism and appears to be convincing to some, especially considering its potential implementation in Libre Relay nodes. The fix proposed by Peter is open for scrutiny and can be found in the January archives of the bitcoin-dev mailing list.

However, there is some confusion regarding the application of one-shot Replace-by-Fee (RBF) rules within the context provided. A specific step in the relay process is questioned, as it seems to follow conventional RBF protocols where a transaction is replaced by another with a higher fee, rather than adhering to one-shot RBF rules. The numerical example given, contrasting a 16,500 fee against a 5,000 fee, highlights this concern and calls into question the understanding or interpretation of the rules as laid out in the discussed writeup.</summary>
    <published>2024-02-01T05:08:19.755000+00:00</published>
  </entry>
</feed>
