<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Lamport signatures and other CAT tricks</title>
  <updated>2024-02-09T01:52:50.456303+00:00</updated>
  <author>
    <name>moonsettler 2024-02-08 22:19:48.787000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-05 15:06:11.870000+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj  . 2023-12-05 12:33:44.469000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-03 15:52:18.925000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-03 15:24:03.158000+00:00</name>
  </author>
  <author>
    <name>sipa  . 2023-12-03 15:09:21.396000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-03 14:55:34.004000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2023-12-03 12:14:11.259000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-03 10:33:10.074000+00:00</name>
  </author>
  <author>
    <name>ajtowns  . 2023-12-03 07:39:02.642000+00:00</name>
  </author>
  <author>
    <name>moonsettler  . 2023-12-03 00:47:43.909000+00:00</name>
  </author>
  <link href="delvingbitcoin/Feb_2024/1492_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/619_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/615_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/554_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/553_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/552_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/551_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/550_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/549_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/548_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <link href="delvingbitcoin/Dec_2023/546_Lamport-signatures-and-other-CAT-tricks.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Lamport signatures and other CAT tricks</title>
    <updated>2024-02-09T01:52:50.456389+00:00</updated>
    <link href="https://delvingbitcoin.org/t/lamport-signatures-and-other-cat-tricks/236/11" rel="alternate"/>
    <summary>The email outlines a proposal for enhancing Bitcoin's scripting capabilities with a new Pay to X Script Hash (P2XSH) construction. This construction would use `OP_HASH256 OP_EQUAL` instead of `OP_HASH160 OP_EQUAL` and reintroduce `OP_CAT`. It suggests adopting a `0xC0`-version script pattern that includes the `OP_SUCCESS` opcode, which allows compatible extensions within P2XSH scripts. The proposed changes aim to support complex transactions and prepare for potential quantum computing threats by possibly incorporating version information to create a tapleaf structure.

Technical challenges with implementing certain functions in Bitcoin's current architecture are acknowledged, with developers facing constraints due to these limitations. The importance of additional data disclosure, such as script hash during transaction validation, is emphasized. There's a suggestion to make annex disclosure mandatory and consider deprecating keyspends to enhance security against quantum attacks.

The robustness of key path spends is considered vulnerable if the Discrete Logarithm problem is compromised, suggesting disabling key path spends might be necessary. Meanwhile, script path spends' security relies on SHA256's preimage resistance, assuming no weaknesses in the script itself. A verification method for keyspend operations is proposed, where a preimage 't' of a tweak is revealed, but its effectiveness against adversaries is under question. The possibility of enforcing script-only transactions with current address format compatibility is also explored.

Privacy concerns associated with the discrete logarithm problem are noted, where an adversary could transact without revealing their public key. To improve taproot output security against quantum threats, using a Nothing-Up-My-Sleeve (NUMS) point is proposed as an interim solution.

Furthermore, the email discusses the optimization of scripting for public key generation and signature verification through Merkle trees, proposing specific operations like `DIVMOD` and `OP_STR_LESSTHAN`. However, the practicality of blockchain-based scripts handling large data inputs and incorporating quantum-resistant signatures is questioned.

In addition to the above proposals, the email describes a cryptographic process involving an alternate stack for operations tailored to different byte counts. This includes concatenating data elements and hashing them for authenticating the structure of a Merkle tree. A key feature is the generation of a root hash from aggregated Merkle tree roots with sighash bytes to facilitate private, verifiable transactions. Private keys generated from a BIP-32 Hierarchical Deterministic wallet seed contribute to this root hash, maintaining user privacy while allowing for deterministic public key verification. An introspection mechanism ensures transactions adhere to compliance standards, confirming integrity without exposing private keys.</summary>
    <published>2024-02-08T22:19:48.787000+00:00</published>
  </entry>
</feed>
