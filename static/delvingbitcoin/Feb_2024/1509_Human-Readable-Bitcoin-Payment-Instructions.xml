<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Human Readable Bitcoin Payment Instructions</title>
  <updated>2024-02-12T01:56:40.898496+00:00</updated>
  <author>
    <name>MattCorallo 2024-02-11 06:00:07.406000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Human Readable Bitcoin Payment Instructions</title>
    <updated>2024-02-12T01:56:40.898527+00:00</updated>
    <link href="https://delvingbitcoin.org/t/human-readable-bitcoin-payment-instructions/542/3" rel="alternate"/>
    <summary>In the realm of Bitcoin Improvement Proposals (BIPs), there exists a nuanced implementation for Lightning Network (LN) use cases, with specifications dispersed across multiple documents, causing some complexity in the overall understanding. The primary details for lightning-specific protocols are outlined on GitHub at [blips/pull/32](https://github.com/lightning/blips/pull/32). This document includes a streamlined flow that minimizes DNS lookups by employing a wildcard strategy to redirect to the appropriate node for offer inquiries.

Although this approach does not enhance privacy as one might expect, the intention is to maintain a level of generality applicable to various Bitcoin-related methods including on-chain transactions and emerging technologies like fedimint, cashu, and silent payments. This broad applicability inevitably introduces challenges, such as adding on-chain addresses for large custodians. However, it's suggested that these entities could adopt the necessary technical infrastructure, such as bind and zonefile creation, which proves efficient even when handling millions of records.

Currently, the bLIP spec necessitates additional communication steps, specifically two round tripsâ€”one to request a standard offer and another to convert said offer into an invoice_request. Potential modifications to this specification are under consideration, with the aim of incorporating the user/domain directly within the invoice_request to streamline the process. This adjustment requires further dialogue with experts in the Lightning Network community to assess its viability and impact on existing protocols.</summary>
    <published>2024-02-11T06:00:07.406000+00:00</published>
  </entry>
</feed>
