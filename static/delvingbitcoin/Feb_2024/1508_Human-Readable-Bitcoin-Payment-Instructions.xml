<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Human Readable Bitcoin Payment Instructions</title>
  <updated>2024-02-12T01:56:50.206943+00:00</updated>
  <author>
    <name>ajtowns 2024-02-11 03:10:47.304000+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Human Readable Bitcoin Payment Instructions</title>
    <updated>2024-02-12T01:56:50.206976+00:00</updated>
    <link href="https://delvingbitcoin.org/t/human-readable-bitcoin-payment-instructions/542/2" rel="alternate"/>
    <summary>In the email, a suggestion was made regarding the improvement of privacy and ease of deployment for Bitcoin Lightning Network (LN) payment processes. The proposal involves using a Domain Name System Security Extensions (DNSSEC) resolution method to obtain an LN node's address through a specialized subdomain. Users with a domain such as `matt@mattcorallo.com` could resolve a unique address like `_bitcoin-payment.mattcorallo.com`, which would then be queried via an LN onion message to receive a bolt12 invoice for the user `matt`. This approach could significantly enhance privacy for users under shared domains, such as `x.com`, `visa.com`, or `bankofamerica.com`. Additionally, this method simplifies the deployment process since it eliminates the need to integrate a list of LN users into the DNS database. 

The intent behind this approach is to protect individual user information by dissociating the direct link between their LN node addresses and their personal or corporate emails. By querying through an LN onion message, it ensures that user identities remain concealed within the network, thereby improving the overall security framework within which Bitcoin transactions occur. Moreover, the simplicity of this solution lies in its ability to leverage existing infrastructure without necessitating significant alterations or additional complexities to the deployment process.</summary>
    <published>2024-02-11T03:10:47.304000+00:00</published>
  </entry>
</feed>
