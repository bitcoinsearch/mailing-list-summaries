<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2018-January-015532</id>
  <title>BIP 117 Feedback</title>
  <updated>2023-05-09T22:32:39.068895+00:00</updated>
  <author>
    <name>Pieter Wuille</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>mailing-list-bitcoin-2018-January-015532</id>
    <title>BIP 117 Feedback</title>
    <updated>2023-05-09T22:32:39.068895+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-January/015532.html" rel="alternate"/>
    <summary>The email thread discusses the use of the alt stack as a hack for segwit script version 0, which has the clean stack rule, with future improvements anticipated to switch to a witness script version or a new segwit output version supporting native MAST. The proposal under discussion is compared to Johnson Lau's MAST idea, with the latter being considered more compact, not needing to work around push size limits or cleanstack rules, easier to implement and reason about, and not interfering with static analysis. The email also touches upon the topic of static analysis and the need for reasoning about executed code. One suggestion to reduce the impact of this is to limit per-script execution to something proportional to the script size, while another idea is to mark pushes of potentially executable code on the stack/witness explicitly. The email concludes with a call for an approach that retains all ability to analyze while still leaving the flexibility for future extensions to tail call execution.</summary>
    <published>2018-01-09T14:21:08+00:00</published>
  </entry>
</feed>
