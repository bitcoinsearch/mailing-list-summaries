{
    "header_summary": "BitVM is a computing paradigm that allows for Turing-complete Bitcoin contracts without changing the network's consensus rules. Steven Roose discusses an update to the draft BIP, which includes a proposed reference implementation and a caching strategy. Antoine Riard suggests two solutions for ensuring lack of equivocation in an off-chain state, including using fidelity bonds. Gijs van Dam and Tony Giorgio discuss a concept related to decorrelated payments, which could assist with analysis on an amount level. ZmnSCPxj explains the implementation of a sidepool mechanism using the Decker-Wattenhofer mechanism to balance channels on the blockchain.",
    "recent_posts": [
        {
            "id": "021984",
            "title": "BitVM: Compute Anything on Bitcoin",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021984.html",
            "authors": [
                "Robin Linus"
            ],
            "published_at": "2023-10-09T13:46:24+00:00",
            "summary": "- BitVM is a computing paradigm allowing Turing-complete Bitcoin contracts without consensus rule changes.\n- Computations are verified like optimistic rollups instead of being executed on Bitcoin.\n- Collaborative off-chain computation is possible with minimal on-chain footprint and on-chain execution in case of disputes.",
            "n_threads": 1,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/Oct_2023/021984_BitVM-Compute-Anything-on-Bitcoin.xml"
        },
        {
            "id": "021983",
            "title": "Draft BIP: OP_TXHASH and OP_CHECKTXHASHVERIFY",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021983.html",
            "authors": [
                "Steven Roose"
            ],
            "published_at": "2023-10-06T17:38:22+00:00",
            "summary": "- The email updates on a draft BIP and provides a proposed reference implementation.\n- The reference implementation demonstrates achieving clear constant upper limits on TXHASH.\n- A link to the draft BIP and cache implementation on GitHub is provided.",
            "n_threads": 2,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/Oct_2023/021983_Draft-BIP-OP-TXHASH-and-OP-CHECKTXHASHVERIFY.xml"
        },
        {
            "id": "021980",
            "title": "Actuarial System To Reduce Interactivity In N-of-N (N > 2) Multiparticipant Offchain Mechanisms",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021980.html",
            "authors": [
                "Antoine Riard"
            ],
            "published_at": "2023-10-05T02:12:33+00:00",
            "summary": "- The email discusses ensuring lack of equivocation in off-chain state, proposing two solutions.\n- One solution involves updating balance keys on blockchain, while another suggests a fraud-proof system.\n- Fidelity bonds equal to initial balance multiplied by counterparties can prevent equivocation.",
            "n_threads": 4,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "ZmnSCPxj"
            ],
            "file_path": "static/bitcoin-dev/Oct_2023/021980_Actuarial-System-To-Reduce-Interactivity-In-N-of-N-N-2-Multiparticipant-Offchain-Mechanisms.xml"
        },
        {
            "id": "004116",
            "title": "Payment Splitting & Switching and its impact on Balance Discovery Attacks (preprint)",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004116.html",
            "authors": [
                "Tony Giorgio PM"
            ],
            "published_at": "2023-09-26T15:34:42+00:00",
            "summary": "- Gijs van Dam and Tony Giorgio are discussing a concept related to decorrelated payments.\n- Gijs mentions that the concept could assist with decorrelated payments on an amount analysis level.\n- Gijs refers to the concept as a step up after having PTLC's and additional timing analysis protections.",
            "n_threads": 2,
            "dev_name": "lightning-dev",
            "contributors": [
                "Gijs van Dam"
            ],
            "file_path": "static/lightning-dev/Sept_2023/004116_Payment-Splitting-Switching-and-its-impact-on-Balance-Discovery-Attacks-preprint-.xml"
        },
        {
            "id": "004112",
            "title": "Announcing the Lightning Network Interoperability Initiative",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004112.html",
            "authors": [
                "Vincenzo Palazzo"
            ],
            "published_at": "2023-09-21T17:54:49+00:00",
            "summary": "- Vincent apologizes for the confusion caused by an error in his previous post.\n- The correct link is mentioned to have been provided in a previous post by Vincent.\n- The email clarifies the incorrect link shared, with no additional information provided.",
            "n_threads": 2,
            "dev_name": "lightning-dev",
            "contributors": [],
            "file_path": "static/lightning-dev/Sept_2023/004112_Announcing-the-Lightning-Network-Interoperability-Initiative.xml"
        },
        {
            "id": "004108",
            "title": "Sidepools For Improving Payment Reliability At Scale",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004108.html",
            "authors": [
                "ZmnSCPxj"
            ],
            "published_at": "2023-09-19T08:51:15+00:00",
            "summary": "- ZmnSCPxj discusses the implementation of a sidepool using the Decker-Wattenhofer mechanism.\n- They mention the limitations of the numbers involved, including stages, steps, and blocks.\n- The purpose of the sidepool mechanism is to balance channels and avoid frequent on-chain transactions.",
            "n_threads": 2,
            "dev_name": "lightning-dev",
            "contributors": [],
            "file_path": "static/lightning-dev/Sept_2023/004108_Sidepools-For-Improving-Payment-Reliability-At-Scale.xml"
        }
    ],
    "active_posts": [
        {
            "id": "021941",
            "title": "Scaling Lightning With Simple Covenants",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021941.html",
            "authors": [
                "jlspc"
            ],
            "published_at": "2023-09-08T18:54:46+00:00",
            "summary": "- The email addresses the challenge of scaling Lightning channels for casual users.\n- Simple covenants and timeout-trees can eliminate the need for user signatures and improve scalability.\n- Off-chain transactions and covenants can make Lightning a widely-used means of payment.",
            "n_threads": 13,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Anthony Towns",
                "Antoine Riard",
                "Erik Aronesty",
                "Rusty Russell",
                "ZmnSCPxj"
            ],
            "file_path": "static/bitcoin-dev/Sept_2023/combined_Scaling-Lightning-With-Simple-Covenants.xml"
        },
        {
            "id": "021827",
            "title": "Concrete MATT opcodes",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-July/021827.html",
            "authors": [
                "Salvatore Ingala"
            ],
            "published_at": "2023-07-30T21:37:49+00:00",
            "summary": "- Salvatore Ingala has submitted a proposal for MATT's core opcodes, making them functionally complete.\n- The proposal introduces a new opcode called OP_CHECKCONTRACTVERIFY (CCV) and modifies the order of parameters for better script writing.\n- The new opcode enables the full generality of MATT with just two opcodes, but additional opcodes may be beneficial.",
            "n_threads": 12,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Antoine Riard",
                "David A. Harding",
                "Johan Tor\u00e5s Halseth",
                "symphonicbtc"
            ],
            "file_path": "static/bitcoin-dev/July_2023/combined_Concrete-MATT-opcodes.xml"
        },
        {
            "id": "021969",
            "title": "Solving CoinPool high-interactivity issue with cut-through update of Taproot leaves",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021969.html",
            "authors": [
                "Antoine Riard"
            ],
            "published_at": "2023-09-25T18:18:36+00:00",
            "summary": "- The email addresses interactivity constraints in payment pools and channel factories relating to off-chain balances.\n- Proposed solutions involve introducing a coordinator or partitioning balances among off-chain user subsets.\n- The author suggests preventing off-chain group equivocation by editing the funding utxo efficiently.",
            "n_threads": 6,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Johan Tor\u00e5s Halseth",
                "ZmnSCPxj"
            ],
            "file_path": "static/bitcoin-dev/Sept_2023/combined_Solving-CoinPool-high-interactivity-issue-with-cut-through-update-of-Taproot-leaves.xml"
        },
        {
            "id": "004092",
            "title": "Scaling Lightning With Simple Covenants",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004092.html",
            "authors": [
                "jlspc"
            ],
            "published_at": "2023-09-08T18:54:46+00:00",
            "summary": "- The email proposes solutions to scale Lightning without relying on trust and suggests covenants.\n- The scalability problem lies in creating Lightning channels for casual users under current Bitcoin rules.\n- Simple covenants and timeout-trees can improve Lightning's scalability and make it more widely-used.",
            "n_threads": 14,
            "dev_name": "lightning-dev",
            "contributors": [
                "Anthony Towns",
                "Antoine Riard",
                "David A. Harding",
                "Erik Aronesty",
                "Rusty Russell",
                "ZmnSCPxj"
            ],
            "file_path": "static/lightning-dev/Sept_2023/combined_Scaling-Lightning-With-Simple-Covenants.xml"
        },
        {
            "id": "004084",
            "title": "Remotely control your lightning node from your favorite HSM",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004084.html",
            "authors": [
                "Bastien TEINTURIER"
            ],
            "published_at": "2023-09-05T21:26:49+00:00",
            "summary": "- Bastien has submitted a pull request for the bLIPs repository to document an idea.\n- The idea involves using an HSM as a whitelisted lightning peer for securely sending commands to a lightning node.\n- Bastien suggests implementing this concept and offers to provide specifications and review the implementation.",
            "n_threads": 8,
            "dev_name": "lightning-dev",
            "contributors": [
                "Christian Decker",
                "Rusty Russell",
                "William Casarin",
                "ZmnSCPxj"
            ],
            "file_path": "static/lightning-dev/Sept_2023/combined_Remotely-control-your-lightning-node-from-your-favorite-HSM.xml"
        },
        {
            "id": "004088",
            "title": "Practical PTLCs, a little more concretely",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004088.html",
            "authors": [
                "Greg Sanders"
            ],
            "published_at": "2023-09-06T16:14:08+00:00",
            "summary": "- Greg Sanders discusses the importance of PTLCs and shares a gist on GitHub.\n- He explores various factors in PTLC messages and aims to increase payment reliability.\n- Greg suggests his information can lead to discussions and invites feedback from recipients.",
            "n_threads": 5,
            "dev_name": "lightning-dev",
            "contributors": [
                "Anthony Towns",
                "Lloyd Fournier"
            ],
            "file_path": "static/lightning-dev/Sept_2023/combined_Practical-PTLCs-a-little-more-concretely.xml"
        }
    ]
}