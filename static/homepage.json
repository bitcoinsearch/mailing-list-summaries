{
    "header_summary": "Email exchanges cover discussions on complexity notation, TxHash formalization, OP_EVICT in payment pools, decorrelated payments, correction of previous posts, and the implementation and purpose of sidepools in channel balancing. Notable points include Anthony Towns proposing a new complexity notation, Steven Roose introducing a BIP for TxHash, Antoine Riard addressing safety concerns in off-chain payment pools, Gijs van Dam discussing decorrelated payments, Vincenzo Palazzo acknowledging an error and providing a correct link, and ZmnSCPxj explaining the implementation and benefits of sidepools.",
    "recent_posts": [
        {
            "id": "021976",
            "title": "MATT: [demo] Optimistic execution of arbitrary programs",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021976.html",
            "authors": [
                "Anthony Towns"
            ],
            "published_at": "2023-10-02T15:10:08+00:00",
            "summary": "- The email discusses the complexity notation of \"O(n log n)\" and suggests an alternative notation.\n- The sender proposes a different representation of nodes and leaves to eliminate h() calculations.\n- The recipient raises concerns about hiding errors in a non-mandatory balanced state tree.",
            "n_threads": 2,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Johan Tor\u00e5s Halseth"
            ],
            "file_path": "static/bitcoin-dev/Oct_2023/021976_MATT-demo-Optimistic-execution-of-arbitrary-programs.xml"
        },
        {
            "id": "021975",
            "title": "Draft BIP: OP_TXHASH and OP_CHECKTXHASHVERIFY",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021975.html",
            "authors": [
                "Steven Roose"
            ],
            "published_at": "2023-09-30T11:44:02+00:00",
            "summary": "- Steven Roose has worked on a BIP specification for the concept of a TxHash.\n- The BIP introduces TxFieldSelector for selecting data inside a transaction.\n- The email seeks feedback on the proposal and community interest in its implementation.",
            "n_threads": 1,
            "dev_name": "bitcoin-dev",
            "contributors": [],
            "file_path": "static/bitcoin-dev/Sept_2023/021975_Draft-BIP-OP-TXHASH-and-OP-CHECKTXHASHVERIFY.xml"
        },
        {
            "id": "021971",
            "title": "Solving CoinPool high-interactivity issue with cut-through update of Taproot leaves",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021971.html",
            "authors": [
                "Antoine Riard"
            ],
            "published_at": "2023-09-26T15:36:26+00:00",
            "summary": "- Antoine discusses OP_EVICT in relation to off-chain payment pool, highlighting safety concerns and proposing alternatives such as TLUV or MERKLESUB.\n- He mentions the introduction of subgroup novation and the lack of a consistent covenant proposal.\n- Antoine seeks a better understanding of on-chain \"cut-through\" as a solution to channel factory and payment pool's high interactivity issue.",
            "n_threads": 3,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "ZmnSCPxj"
            ],
            "file_path": "static/bitcoin-dev/Sept_2023/021971_Solving-CoinPool-high-interactivity-issue-with-cut-through-update-of-Taproot-leaves.xml"
        },
        {
            "id": "004116",
            "title": "Payment Splitting & Switching and its impact on Balance Discovery Attacks (preprint)",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004116.html",
            "authors": [
                "Tony Giorgio PM"
            ],
            "published_at": "2023-09-26T15:34:42+00:00",
            "summary": "- Gijs van Dam and Tony Giorgio are discussing a concept related to decorrelated payments.\n- Gijs mentions that the concept could assist with decorrelated payments on an amount analysis level.\n- Gijs refers to the concept as a step up after PTLC's and additional timing analysis protections.",
            "n_threads": 2,
            "dev_name": "lightning-dev",
            "contributors": [
                "Gijs van Dam"
            ],
            "file_path": "static/lightning-dev/Sept_2023/004116_Payment-Splitting-Switching-and-its-impact-on-Balance-Discovery-Attacks-preprint-.xml"
        },
        {
            "id": "004112",
            "title": "Announcing the Lightning Network Interoperability Initiative",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004112.html",
            "authors": [
                "Vincenzo Palazzo"
            ],
            "published_at": "2023-09-21T17:54:49+00:00",
            "summary": "- Vincent acknowledges an error in his previous post and apologizes for any confusion caused.\n- The correct link is not specified in the email, but Vincent provided it in a previous post.\n- The email is a brief clarification regarding the incorrect link, signed off with \"Cheers\".",
            "n_threads": 2,
            "dev_name": "lightning-dev",
            "contributors": [],
            "file_path": "static/lightning-dev/Sept_2023/004112_Announcing-the-Lightning-Network-Interoperability-Initiative.xml"
        },
        {
            "id": "004108",
            "title": "Sidepools For Improving Payment Reliability At Scale",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004108.html",
            "authors": [
                "ZmnSCPxj"
            ],
            "published_at": "2023-09-19T08:51:15+00:00",
            "summary": "- ZmnSCPxj discusses the implementation of a sidepool using the Decker-Wattenhofer mechanism.\n- Several numbers need to be considered, including number of stages, steps per stage, and blocks per step.\n- The purpose of the sidepools mechanism is to provide another settlement layer on top of the blockchain layer.",
            "n_threads": 2,
            "dev_name": "lightning-dev",
            "contributors": [],
            "file_path": "static/lightning-dev/Sept_2023/004108_Sidepools-For-Improving-Payment-Reliability-At-Scale.xml"
        }
    ],
    "active_posts": [
        {
            "id": "021837",
            "title": "Concern about \"Inscriptions\"",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021837.html",
            "authors": [
                "GamedevAlice"
            ],
            "published_at": "2023-08-02T11:07:27+00:00",
            "summary": "- The storage for blockchain is sufficient for practical usage, given various factors.\n- A 5TB hard drive costing less than $150 can last 21 years without running out of space.\n- Ongoing optimization efforts and decreasing hardware costs further reduce the burden of storage.",
            "n_threads": 13,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Erik Aronesty",
                "John Tromp",
                "Luke Dashjr",
                "Peter Todd",
                "Russell O'Connor",
                "martl.chris at proton.me",
                "rot13maxi",
                "symphonicbtc",
                "vjudeu at gazeta.pl"
            ],
            "file_path": "static/bitcoin-dev/Aug_2023/combined_Concern-about-Inscriptions-.xml"
        },
        {
            "id": "021941",
            "title": "Scaling Lightning With Simple Covenants",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021941.html",
            "authors": [
                "jlspc"
            ],
            "published_at": "2023-09-08T18:54:46+00:00",
            "summary": "- Simple covenants and timeout-trees can enhance scalability in Lightning by creating channels for casual users without signatures.\n- Variations of FFO-WF Lightning channel protocol can roll over casual user's funds without their input.\n- Incorporating mechanisms like CTV or APO in Bitcoin's consensus rules can improve Lightning's scalability.",
            "n_threads": 12,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Anthony Towns",
                "Antoine Riard",
                "Erik Aronesty",
                "Rusty Russell",
                "ZmnSCPxj"
            ],
            "file_path": "static/bitcoin-dev/Sept_2023/combined_Scaling-Lightning-With-Simple-Covenants.xml"
        },
        {
            "id": "021827",
            "title": "Concrete MATT opcodes",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-July/021827.html",
            "authors": [
                "Salvatore Ingala"
            ],
            "published_at": "2023-07-30T21:37:49+00:00",
            "summary": "- Salvatore Ingala has proposed core opcodes for MATT, making it functionally complete.\n- The proposal replaces certain opcodes, introduces a flags parameter, and modifies parameter order.\n- The proposal enables the full generality of MATT with just two opcodes: OP_CHECKCONTRACTVERIFY and OP_CAT.",
            "n_threads": 12,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Antoine Riard",
                "David A. Harding",
                "Johan Tor\u00e5s Halseth",
                "symphonicbtc"
            ],
            "file_path": "static/bitcoin-dev/July_2023/combined_Concrete-MATT-opcodes.xml"
        },
        {
            "id": "004092",
            "title": "Scaling Lightning With Simple Covenants",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004092.html",
            "authors": [
                "jlspc"
            ],
            "published_at": "2023-09-08T18:54:46+00:00",
            "summary": "- Lightning's scalability problem can be solved by enabling simple covenants and implementing timeout-trees.\n- Simple covenants would allow creation of Lightning channels for millions of casual users.\n- Implementing timeout-trees would provide off-chain access to funds and rebalance between channels.",
            "n_threads": 14,
            "dev_name": "lightning-dev",
            "contributors": [
                "Anthony Towns",
                "Antoine Riard",
                "David A. Harding",
                "Erik Aronesty",
                "Rusty Russell",
                "ZmnSCPxj"
            ],
            "file_path": "static/lightning-dev/Sept_2023/combined_Scaling-Lightning-With-Simple-Covenants.xml"
        },
        {
            "id": "004084",
            "title": "Remotely control your lightning node from your favorite HSM",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004084.html",
            "authors": [
                "Bastien TEINTURIER"
            ],
            "published_at": "2023-09-05T21:26:49+00:00",
            "summary": "- Bastien has submitted a pull request to the bLIPs repository to document an idea.\n- The idea involves using an HSM as a whitelisted lightning peer to securely send administrative commands.\n- Bastien suggests implementing the idea in a custom application running on a Ledger Nano S.",
            "n_threads": 8,
            "dev_name": "lightning-dev",
            "contributors": [
                "Christian Decker",
                "Rusty Russell",
                "William Casarin",
                "ZmnSCPxj"
            ],
            "file_path": "static/lightning-dev/Sept_2023/combined_Remotely-control-your-lightning-node-from-your-favorite-HSM.xml"
        },
        {
            "id": "004088",
            "title": "Practical PTLCs, a little more concretely",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-September/004088.html",
            "authors": [
                "Greg Sanders"
            ],
            "published_at": "2023-09-06T16:14:08+00:00",
            "summary": "- Greg highlights the importance of PTLCs and shares a detailed gist about them.\n- He examines message formats in PTLCs, considering factors like sync/async updates and message re-ordering.\n- Greg concludes by suggesting the information can lead to discussions and invites feedback.",
            "n_threads": 5,
            "dev_name": "lightning-dev",
            "contributors": [
                "Anthony Towns",
                "Lloyd Fournier"
            ],
            "file_path": "static/lightning-dev/Sept_2023/combined_Practical-PTLCs-a-little-more-concretely.xml"
        }
    ]
}