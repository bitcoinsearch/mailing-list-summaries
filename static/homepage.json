{
    "header_summary": "Antoine Riard and Greg Sanders discuss the potential benefits of covenant schemes in simplifying Lightning Network proposals, but Greg believes that covenants alone cannot resolve the complexity of the LN. Antoine suggests using Simplicity and Leslie Lamport's temporal logic for analyzing distributed systems in LN. Keagan McClelland agrees with Antoine's view on the importance of covenants in LN's maturity, but acknowledges the challenges in integrating them. Antoine provides an update on the Bitcoin Contracting Primitives Working Group and his decision to focus on LN development. He also mentions plans for a workshop on covenants and collaborations with Optech. Additionally, Antoine mentions his postponed visit to discuss the CoinPool whitepaper and the need for collective effort in handling consensus changes. Lastly, Antoine mentions the interest and commitments received from various entities to advance softforks and covenants in the Bitcoin space.",
    "enteries": [
        {
            "id": "021789",
            "title": "On the experiment of the Bitcoin Contracting Primitives WG and marking this community process \"up for grabs\"",
            "link": "https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-July/021789.html",
            "authors": [
                "Greg Sanders"
            ],
            "published_at": "2023-07-20T06:11:57+00:00",
            "summary": "- Antoine Riard proposes the creation of the Bitcoin Contracting Primitives Working Group to maintain and nurture Bitcoin contracting primitives and ensure rigorous testing of consensus change proposals.- Riard suggests collaborating with Optech to organize an industry-wide workshop on covenants, similar to the Taproot workshop in 2019, and invites interested individuals to reach out.- Riard mentions the postponed visit to discuss Version 0.2 of the CoinPool whitepaper with co-author Gleb Naumenko, highlighting the operational evolutions resulting from the conflict in Ukraine.",
            "n_threads": 6,
            "dev_name": "bitcoin-dev",
            "contributors": [
                "Antoine Riard",
                "Keagan McClelland"
            ]
        },
        {
            "id": "004014",
            "title": "LN Summit 2023 Notes",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-July/004014.html",
            "authors": [
                "Carla Kirk-Cohen"
            ],
            "published_at": "2023-07-19T13:56:11+00:00",
            "summary": "1. New approach to note-taking: Transcript-style notes were created for the annual specification meeting, allowing easy access through a provided link.2. Full set of notes available: To minimize reliance on Google Drive, the complete notes are included at the end of the email, although formatting may not be perfect.3. Organized and detailed notes: The notes were structured based on the discussions held during the summit, providing a comprehensive overview rather than a mere summary.",
            "n_threads": 1,
            "dev_name": "lightning-dev",
            "contributors": []
        },
        {
            "id": "004013",
            "title": "option_simple_close for \"unfailable\" closing",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-July/004013.html",
            "authors": [
                "Rusty Russell"
            ],
            "published_at": "2023-07-17T21:55:29+00:00",
            "summary": "- The close protocol is designed to avoid fee disagreement scenarios by allowing each side to offer their desired fee.- Closing happens in two stages: closing negotiation and closing signature.- There are two variants of the closing transaction: classic closing transaction and closing transaction used for `closing_complete` and `closing_sig` messages.",
            "n_threads": 1,
            "dev_name": "lightning-dev",
            "contributors": []
        },
        {
            "id": "004012",
            "title": "Potential vulnerability in Lightning backends: BOLT-11 \"payment hash\" does not commit to payment!",
            "link": "https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-July/004012.html",
            "authors": [
                "Martin Habov\u0161tiak"
            ],
            "published_at": "2023-07-16T18:11:58+00:00",
            "summary": "- LND does support paying invoices it generates, but this still requires a circular route through the network.- Another option is to set up trusted channels and fund them bilaterally, allowing for payment without going through the actual network route.- The \"allow-circular-route\" flag can be used to double back on the same channel for the route. However, no Lightning node currently has the ability for self-payment.",
            "n_threads": 9,
            "dev_name": "lightning-dev",
            "contributors": [
                "Antoine Riard",
                "David A. Harding",
                "Olaoluwa Osuntokun",
                "Rusty Russell",
                "callebtc",
                "fiatjaf"
            ]
        }
    ]
}