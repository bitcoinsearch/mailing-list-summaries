<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2016-January-012248</id>
  <title>Capacity increases for the Bitcoin system.</title>
  <updated>2023-05-04T21:13:34.428286+00:00</updated>
  <author>
    <name>Anthony Towns</name>
  </author>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012248.html" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012248.html</id>
    <title>Capacity increases for the Bitcoin system.</title>
    <updated>2023-05-04T21:13:34.428286+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012248.html" rel="alternate"/>
    <summary>The article discusses the effective block size that can be achieved with segwit for p2pkh and 2/2 multisig transactions. The author argues that a 1.7MB effective block size is a better estimate than 1.6MB for p2pkh with segwit, while 2MB for 2/2 multisig still seems accurate. Additionally, post-segwit soft-forked script improvements can improve the effective block size for p2pkh txns from 1.7MB to 1.9MB, and for 2/2 multisig from 2MB to 2.5MB/3MB. The author provides revised figures and scaling factors based on different scenarios, including the possibility of a 2MB hard fork. The article also mentions potential future improvements for transactions per block through ecdsa public key recovery and schnorr signatures. However, the author notes that there may be additional metadata that needs to be accounted for in calculating the effective block size.</summary>
    <published>2016-01-18T12:02:51+00:00</published>
  </entry>
</feed>
