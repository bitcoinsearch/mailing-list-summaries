<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2016-January-012218</id>
  <title>Time to worry about 80-bit collision attacks or not?</title>
  <updated>2023-05-09T22:28:13.386726+00:00</updated>
  <author>
    <name>Anthony Towns</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>mailing-list-bitcoin-2016-January-012218</id>
    <title>Time to worry about 80-bit collision attacks or not?</title>
    <updated>2023-05-09T22:28:13.386726+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012218.html" rel="alternate"/>
    <summary>In January 2016, Gavin Andresen wrote on bitcoin-dev mailing list asking for confirmation if he correctly followed the specifics of the collision attack. The attack is performed by an attacker who is in the middle of establishing a payment channel with someone. The victim gives their public key to the attacker, who creates an innocent fund-locking script '2 V A 2 CHECKMULTISIG' (V is victim's public key, A is attacker's) but does not give it to the victim yet. Using Ethan Heilman's procedure, the attacker can create two scripts which hash to the same result. The attacker can make the form of the script be a function of their key and cycle through multiple attempts until they get a usable pair with under 3*2**80 work. In a python implementation with weakened hash function, a useful collision was obtained in the second attempt in about 7 seconds.</summary>
    <published>2016-01-08T15:33:29+00:00</published>
  </entry>
</feed>
