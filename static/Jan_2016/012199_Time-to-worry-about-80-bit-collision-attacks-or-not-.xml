<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2016-January-012199</id>
  <title>Time to worry about 80-bit collision attacks or not?</title>
  <updated>2023-05-09T22:28:42.417815+00:00</updated>
  <author>
    <name>Matt Corallo</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>mailing-list-bitcoin-2016-January-012199</id>
    <title>Time to worry about 80-bit collision attacks or not?</title>
    <updated>2023-05-09T22:28:42.417815+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2016-January/012199.html" rel="alternate"/>
    <summary>The discussion is about using the RIPEMD160(SHA256()) hash function as a possible solution for segregated witness (segwit) in Bitcoin. The concern raised by Pieter is that collision attacks could be used to steal coins. Gavin argues that contract wallets can protect against this type of attack, and that adding an extra 12 bytes to the segwit to prevent an attack that takes 2^80 computation and storage is unlikely to be a problem in practice and is a wrong tradeoff to make. The general question raised is whether we should be worried about collision attacks against RIPEMD160, which has 160-bit hash. A successful brute-force collision attack would require at least O(2^80) CPU, which is feasible, but also requires O(2^80) storage, which is infeasible. Even assuming doubling every year, we are four decades away from an attacker with the entire world's storage capacity being able to mount a collision attack.</summary>
    <published>2016-01-07T19:13:22+00:00</published>
  </entry>
</feed>
