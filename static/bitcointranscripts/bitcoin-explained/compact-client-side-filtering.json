{
    "id": "bitcointranscripts+bitcoin-explained+compact-client-side-filtering",
    "title": "Compact Client Side Filtering (Neutrino)",
    "body_formatted": "{\"type\":\"heading\",\"text\":\"Introduction\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:34\"}, {\"type\":\"paragraph\",\"text\":\"Live from Utrecht, this is The Van Wirdum Sjorsnado.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:37\"}, {\"type\":\"paragraph\",\"text\":\"Hello.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:38\"}, {\"type\":\"paragraph\",\"text\":\"Van Wirdum Sjorsnado.\\nDid I say it right this time?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:42\"}, {\"type\":\"paragraph\",\"text\":\"I don't know.\\nWe're not going to check again.\\nThis is take number three.\\nNow you're going to ask me whether I rioted and I'm gonna say no.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:51\"}, {\"type\":\"paragraph\",\"text\":\"You're like psychic.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:53\"}, {\"type\":\"paragraph\",\"text\":\"Yes.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:54\"}, {\"type\":\"paragraph\",\"text\":\"You're able to predict the future.\\nOkay, so let's skip all the rioting jokes and all the pronunciation jokes and get to it.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:02\"}, {\"type\":\"paragraph\",\"text\":\"Yes.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:03\"}, {\"type\":\"paragraph\",\"text\":\"What are we gonna discuss?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:04\"}, {\"type\":\"paragraph\",\"text\":\"I think we're gonna talk about compact block filters.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:06\"}, {\"type\":\"paragraph\",\"text\":\"Yes aka Neutrino.\"}, {\"type\":\"heading\",\"text\":\"What are Light Clients\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:09\"}, {\"type\":\"paragraph\",\"text\":\"These are a new type of filters for light clients so first let's start at the beginning Sjors what are light clients?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:20\"}, {\"type\":\"paragraph\",\"text\":\"Yeah we should also caveat that by new type, we mean from 2018 or something.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:25\"}, {\"type\":\"paragraph\",\"text\":\"It's not brand new, but it's still fairly new.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:27\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, we mentioned in the last episode that we were going to talk about that at some point.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:31\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, we did, because we did a Bitcoin Core 21 episode and it's one of the new features in Bitcoin Core 21.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:38\"}, {\"type\":\"paragraph\",\"text\":\"That's right.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:39\"}, {\"type\":\"paragraph\",\"text\":\"And now we're gonna get more in depth about Neutrino.\\nSo what are light clients?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:44\"}, {\"type\":\"paragraph\",\"text\":\"So the idea of a light client is that you don't want to download the whole blockchain.\\nAnd Satoshi made some remarks about that in the original white paper, how you could avoid downloading the entire blockchain, maybe if you were on a mobile device.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:56\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, you want to be able to use Bitcoin, that is, send and receive Bitcoins, for example, Satoshi's, but you don't want to have to download the entire blockchain, which you normally would have to do in order to know what the current state of balances of UTXOs is, which you need to know in order to know if transactions are valid and so forth.\\nThe downside is it takes about two days, I think nowadays, depending on how fast your computer is, but something like that on a reasonably fast computer.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:03:27\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, I think I can do it in five hours.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:03:30\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, because you've got like a wizard's computer, but normal people would take like two days.\\nBut even on your phones, you couldn't do it in five hours.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:03:39\"}, {\"type\":\"paragraph\",\"text\":\"No, on a phone it's horrible.\\nIt's days if not weeks.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:03:42\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so that's where light clients come in.\\nSo what are light clients?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:03:46\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so of course there are different ways to do it.\\nThe very lightest of lightest clients would be a custodial wallet, but we don't want to talk about that.\\nBut here, what we're talking about is something that uses SPV, so simplified payment verification.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:04:00\"}, {\"type\":\"paragraph\",\"text\":\"Oh yeah, so custodial is one way to do it.\\nThe other way is to sort of connect a wallet to a full node, which you're running on some other device.\\nBut what we're going to discuss here is yet another solution, which, yeah, SPV, as you mentioned.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:04:15\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so simplified payment verification, as it says, it is a simple way to verify payments.\\nAnd why do you care about that?\\nBecause the real, one of the things you care about when using Bitcoin is that you actually got the coins that you think you have.\\nThat may be something you want to verify.\\nAnd there's actually a way to do that, which involves knowing the headers, and the headers are 80 bytes each per block, so it's pretty small.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:04:39\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, the block headers.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:04:40\"}, {\"type\":\"paragraph\",\"text\":\"And then in addition to that, a proof, a Merkle proof that shows that this transaction is actually inside the block.\\nSo if you know what a transaction is and you know that it's in the block, then you know you've received it, assuming that the rest of the block was valid and nobody did any shenanigans with the history, etc.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:05:01\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so in a way you're kind of trusting hash power you're trusting that whoever invested all this energy in hash power did so because it would be too expensive to do this while mining an invalid block.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:05:19\"}, {\"type\":\"paragraph\",\"text\":\"Exactly, so you're trusting other people to do the verification.\\nThe other thing is that somebody can prove that you did receive a transaction this way, they can give you that proof.\\nFor example, the person who paid you, but also the wallet has a way to fetch it which we'll talk about but it doesn't work the other way around so just because nobody's giving you a proof doesn't mean that you did not receive the transaction you cannot prove that a transaction does not exist.\"}, {\"type\":\"heading\",\"text\":\"Bloom Filters for Light Clients\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:05:44\"}, {\"type\":\"paragraph\",\"text\":\"So let's say I'm running an SPV client and someone told me they paid me, then I want to know if that's really true.\\nSo I would ask you, Sjors, who's running a full node, you could tell me I didn't receive anything, even if I did.\\nI'm still trusting you in that way.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:06:03\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, we can go into a little bit more detail about how that works.\\nSo the naive way would be, okay, if somebody makes a payment to you, then that person should send the proof.\\nThat's possible, but it's not very convenient.\\nSo what instead happens is something called Bloom Filters.\\nAnd what your lightweight wallet does is it creates a filter which says, give me all the transactions that relate to this address.\\nBut It doesn't really say which address it is, but there's some magic math going on so that when a node sees a certain address, it'll know that it has to send you a signal.\\nSo for example, it would say, give me all the transactions in which an address starts with an A.\\nAnd that's not exactly how it works.\\nIt's mathematically more sophisticated than that.\\nBut you can understand intuitively what the privacy benefit of that is.\\nLike I'm not telling you that which address I have.\\nI'm just telling you tell me everything that has an A in it.\\nAnd you can configure that.\\nSo you can say well give me every address with ABCDEF.\\nSome more specific things.\\nSo you get only the transactions you care about.\\nIf you care a bit more about privacy, you ask for a bit more, but it comes at the cost of bandwidth.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:13\"}, {\"type\":\"paragraph\",\"text\":\"So the thing is, your actual addresses are a subset of the addresses you're asking about.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:07:19\"}, {\"type\":\"paragraph\",\"text\":\"Exactly.\\nSo in practice, your light wallet sends a message to a full node somewhere on the network, one of its peers, and this full node will then keep an eye on that.\\nAs long as you're connected to it, it will keep an eye on those addresses and it will send you a block, but with only those transactions in it that match.\\nAnd each of those transactions will have the correct proof that it actually belongs in the block.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:41\"}, {\"type\":\"paragraph\",\"text\":\"Which the light client is then able to check.\\nSo the light client checks, okay, is this actually the address I cared about or is this a false positive is the block valid as far as hash power goes and then is the transaction valid I guess and if that all checks out then the light client sort of knows fairly sure that it has been paid even though they're still trusting hashpower.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:08:04\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so there's a couple of issues with this and we talked about one already.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:08:08\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, just to be clear in case any listeners are confused this is not what the rest of the episode is going to be about.\\nThis is like a trick that exists, has been existing for the past, what is it?\\nEight years, something like that?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:08:21\"}, {\"type\":\"paragraph\",\"text\":\"Yeah.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:08:22\"}, {\"type\":\"paragraph\",\"text\":\"Probably longer than that.\\nWhat we're actually gonna discuss in this improvement on this solution, because there are problems with this solution and that's what Sjors is gonna explain now.\\nWhat are the problems with this solution?\"}, {\"type\":\"heading\",\"text\":\"Problems\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:08:35\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so one problem is privacy and particularly because you don't want to use too much data, there apparently are quite a few wallets out there that will use the lowest false positive rate possible.\\nSo you can say okay you know do I want lots of false positives so lots of information about other addresses so I have good privacy but you can also set it very low and apparently they use a very low one which means that you're really just telling the full node that you're talking to, okay, this is the address I care about.\\nAnd that's a problem because that full node you're talking to might be Chainalysis.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:09:10\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, and I think it's not just that, I think there's also some additional puzzling the full nodes can do.\\nLike if he would be interested in this address, he wouldn't be asking about this or with change or something.\\nI don't know the details.\\nI just know that this solution, this SPV solution is broken privacy-wise.\\nI think Nick Jonas broke it a long time ago.\\nHe works for Blockstream now.\\nAnd since then, everyone agrees that this is broken privacy-wise.\\nIf you're using SPV in this way, you're essentially giving away all of your addresses to a random node on the Bitcoin network.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:09:47\"}, {\"type\":\"paragraph\",\"text\":\"Okay, so that's also bad.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:09:48\"}, {\"type\":\"paragraph\",\"text\":\"Or several, probably even several nodes.\\nYou're just giving away your privacy.\\nIt's broken.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:09:54\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, the other problem is that it's pretty intense on the node that has to do this, that has to provide these filters, because if you're running a full node, now some random node starts talking to you and says, hey, please give me updates about these addresses.\\nAnd so you need to do a bunch of CPU use for people, and you're just doing it voluntarily.\\nAnd it turns out that that's even exploitable.\\nIf you create a special filter, you can create a lot of CPU load for somebody even though you don't actually care about those transactions.\\nSo you can write especially those Raspberry Pis which is turned into steaming you know.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:10:29\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so in this case the the light client, the SPV client, is making the filter for the addresses it cares about plus false positives, gives this filter to a full node on a network, and then this full node has to decipher which addresses the light client is interested in.\\nThis is costing the full node's CPU power.\\nSo it's costly, and the full node isn't earning anything by it, unless it's a spy node, and then we're back to problem one.\"}, {\"type\":\"heading\",\"text\":\"Compact Block Filters\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:10:59\"}, {\"type\":\"paragraph\",\"text\":\"Well, and that creates a perverse incentive of course, because for normal people there is really no reason to do this other than altruism, but for spy nodes there is a financial motive to do this, so guess who are serving this.\\nSo let's move on to a new approach that was produced, I believe proposed around 2018, maybe 2019.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:11:18\"}, {\"type\":\"paragraph\",\"text\":\"By Lalu (Rosebeef), Lightning Labs' CTO.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:11:30\"}, {\"type\":\"paragraph\",\"text\":\"This is often referred to as Neutrino, but technically Neutrino is an implementation of that.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:11:36\"}, {\"type\":\"paragraph\",\"text\":\"Of the general idea?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:11:37\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, of the idea of compact block filters.\\nThe BIPs you want to look for are BIP 157 and BIP 158.\\nSo, I think we should first talk about high level, what's going on and why it's good.\\nAnd then I'll try to do a quick explainer on what it's actually doing at a more nitty gritty technical level, because it's kind of cool, I think.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:11:58\"}, {\"type\":\"paragraph\",\"text\":\"Sounds good to me.\\nStart with the high level stuff.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:12:01\"}, {\"type\":\"paragraph\",\"text\":\"So the high level stuff, if you're running a full node, you're no longer getting custom filters from the peers that connect to you.\\nThere is only one filter.\\nBasically what you do as a full node is you process all your blocks and you create an index for every block.\\nThere is a couple kilobytes of information that you need to keep track of.\\nAnd you do that once and then peers can ask for it and you just give it to them.\\nSo every peer gets the same information from you.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:12:27\"}, {\"type\":\"paragraph\",\"text\":\"I think what you're trying to say is with the SPV solution we discussed a minute ago, the light client creates a filter that includes the addresses it cares about plus false positives and in this Neutrino solution or compact block side filters or whatever it was called officially, This is reversed and the full node actually creates the filter.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:12:52\"}, {\"type\":\"paragraph\",\"text\":\"That's right and the filter just covers everything.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:12:55\"}, {\"type\":\"paragraph\",\"text\":\"Everything that's in the block.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:12:57\"}, {\"type\":\"paragraph\",\"text\":\"Well, every output script that's in the block And for every input, the output script that corresponds to it, which would be in the previous block that it's spinning from.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:13:06\"}, {\"type\":\"paragraph\",\"text\":\"So this means that any full node, especially now with Bitcoin Core 21, any full node can create a filter.\\nAnd they would all be the same because they're all seeing the same block?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:13:17\"}, {\"type\":\"paragraph\",\"text\":\"Yes.\\nAnd now on the client side what you do is you connect to any peer and you say give me the filters.\\nYou know you're not giving away any information when you're doing that other than that you're a light client.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:13:29\"}, {\"type\":\"paragraph\",\"text\":\"The light client just asks for the filter.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:13:32\"}, {\"type\":\"paragraph\",\"text\":\"Right and it could you know in theory it could ask multiple peers and make sure that they get the same filter.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:13:37\"}, {\"type\":\"paragraph\",\"text\":\"Then what does the light client do with the filter?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:13:40\"}, {\"type\":\"paragraph\",\"text\":\"So what the light client is going to do is it's going to see it's going to go through its own addresses and it's going to see does the filter match any of those addresses.\\nSo basically you can see for every block you run your addresses through the filter and it'll say yes this block contains transactions pertaining to the filter.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:01\"}, {\"type\":\"paragraph\",\"text\":\"There are still false positives.\\nSo what light clients really do is they put their address through this filter or whatever they actually do technically, you're going to explain it in a minute.\\nAnd then a computer is going to tell them yes there might be relevant transactions in this block or no there are definitely no relevant transactions for you in this block.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:29\"}, {\"type\":\"paragraph\",\"text\":\"Yeah and so this false positive story is as far as I know is not because of privacy, it's just because math can't do better.\\nThis has to do with like, if you want less false positives, then the files that the node need to keep track of need to be bigger.\\nSo if you make the filters really big, then you never get false positives, but then you might as well download the whole block.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:50\"}, {\"type\":\"paragraph\",\"text\":\"So if the computer says no, there are definitely no relevant transactions in this block for you, then the light client just ignores the block.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:15:01\"}, {\"type\":\"paragraph\",\"text\":\"Exactly, you can do that.\\nAssuming the filters are not a lie, it should work.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:15:07\"}, {\"type\":\"paragraph\",\"text\":\"What if the computer says yes?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:15:09\"}, {\"type\":\"paragraph\",\"text\":\"If the computer says yes, you have to download this block.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:15:11\"}, {\"type\":\"paragraph\",\"text\":\"Then you download the full block.\\nSo even a light client in that case downloads, well, whatever it is, 2 megabytes of data, just downloads the whole block.\\nAnd then searches in this block to see if there was actually a transaction pertaining to that client in the block.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:15:28\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so if your wallet is tracking thousands of addresses then maybe you have to download one in a hundred blocks as a false positive even though you haven't done anything right so this depends on how many addresses you're watching you get a little bit more false positives but yeah you have to download a bunch of blocks.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:15:47\"}, {\"type\":\"paragraph\",\"text\":\"So you actually have to download slightly more data compared to the previous privacy-broken SPV solution.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:15:55\"}, {\"type\":\"paragraph\",\"text\":\"But you get much better privacy.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:15:56\"}, {\"type\":\"paragraph\",\"text\":\"Because now sometimes you need to download a block.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:16:00\"}, {\"type\":\"paragraph\",\"text\":\"Yeah\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:16:00\"}, {\"type\":\"paragraph\",\"text\":\"Even sometimes if there's a false positive, so sometimes you download a block for nothing, but sometimes you've got to download a block, but then you get much better privacy.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:16:09\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, and you could even be smarter about it.\\nLike you could request one block per peer so that the only thing each peer knows is that you may care about something in that block which is not a lot of information maybe you fetch them over Tor if you want to be even better so that's kind of nice privacy wise but it reuses a bit more bandwidth\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:16:29\"}, {\"type\":\"paragraph\",\"text\":\"Is that a high level part?\"}, {\"type\":\"heading\",\"text\":\"Downsides\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:16:31\"}, {\"type\":\"paragraph\",\"text\":\"No so we can also talk about some of the downsides.\\nSo the biggest problem is that the filters can be fake, as in a node can just give you a complete nonsense and then you start asking for blocks.\\nFirst of all then it would match at the wrong block, so you wouldn't be able to find the blocks that pertain to you.\\nOf course, at some point, maybe you can figure that out if you ask multiple peers for their filters and then you start comparing which one is lying.\\nBut that's the kind of worms.\\nThe good news is it is being used by a lot of the, especially Lightning mobile wallets.\\nAnd they seem to work, but maybe we still live in this happy time.\\nSo I think we talked about that last time.\\nWhere now everybody's being nice to each other, but maybe one day people are stopping nice to each other and then I don't know what's gonna happen.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:17:20\"}, {\"type\":\"paragraph\",\"text\":\"Yeah we we spoke about it in the podcast but I think in a different context right?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:17:25\"}, {\"type\":\"paragraph\",\"text\":\"Yeah.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:17:26\"}, {\"type\":\"paragraph\",\"text\":\"Or not.\\nWell anyways so one problem is that you're a light client, I'm a light client, I'm downloading this filter from you, Sjors, who's running a full node, and then I actually have no idea if this filter is actually a filter or just gibberish.\\nIs that what you're telling me?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:17:42\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, not just gibberish, but just wrong.\\nLike it has the wrong transactions in it, it will match the wrong things.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:17:48\"}, {\"type\":\"paragraph\",\"text\":\"Right, and there's no way for me to tell the difference.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:17:51\"}, {\"type\":\"paragraph\",\"text\":\"No, and unfortunately, it's also the case that if you download a block, you cannot recreate the filter.\\nSo the only way to create the filter is to download the entire blockchain.\\nAnd the reason for that is that the filter contains not just the outputs, because the outputs you know.\\nIf you download a block you know what outputs are in that block.\\nBut it also contains the outputs for every input.\\nAnd so that refers to earlier blocks.\\nSo the only way to really check whether it's not lying would be to find a block and then make sure that you find all the blocks for those inputs and it would just be a mess.\\nSo that's unfortunate.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:18:32\"}, {\"type\":\"paragraph\",\"text\":\"This sounds like a very big downside.\\nIt sounds like if someone would want to attack these kind of light clients.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:18:41\"}, {\"type\":\"paragraph\",\"text\":\"Yeah but then you have to maybe compare it to the you know earlier situation that we had with the Bloom filters.\\nIt's kind of also about lying by omission.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:18:49\"}, {\"type\":\"paragraph\",\"text\":\"That's really the problem.\\nAnd it's sort of a DOS factor this time on the client, because the client could be having to download every single block because it doesn't know which one to download.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:19:00\"}, {\"type\":\"paragraph\",\"text\":\"Is that a high-level part?\"}, {\"type\":\"heading\",\"text\":\"Technical Details\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:19:02\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, I think in the long run, one of the thoughts is to turn that into a commitment into the block, but that itself is controversial, but that would at least solve this trust problem, because if the filters are committed in a block, then you do know that they're correct, at least you're back to SPV proof.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:19:18\"}, {\"type\":\"paragraph\",\"text\":\"You're at least back to trusting the hash power.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:19:20\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so then you're at the same trust as you were with the bloom filters, in terms of trusting hash power.\\nOkay, so let's maybe talk about how this works.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:19:32\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, you want to get more technical?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:19:34\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so here's the recipe.\\nIf you're serving these filters, what you do is you go through a block, for each block, you take all the output scripts, except `OP_RETURN`, because that's not interesting, And for every input you take all the output scripts it refers to.\\nAnd you just put those in a row.\\nAnd now, for every item you're going to hash it, there's a special hash function for it.\\nWe talked about hash functions, I think, in another episode.\\nSo now you have these hashes, which are just essentially all semi-random.\\nJust looks like noise.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:20:08\"}, {\"type\":\"paragraph\",\"text\":\"Looks like random numbers.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:20:10\"}, {\"type\":\"paragraph\",\"text\":\"Yes.\\nThey're deterministically random, so if you take an output script, you will get the same hash.\\nAnd then you're going to sort those hashes and you're going to calculate the difference between the hashes.\\nBecause hashes are just big numbers.\\nSo you can subtract, you sort them and then you subtract them.\\nAnd it turns out that this is something you can compress with Golomb coding.\\nAnd this is just some mathematical trick that I don't understand, but it turns out that if you have a pattern like this, a bunch of sorted random things, you can compress it very efficiently.\\nAnd so you do that, and now the client gets this compressed piece of data and what it's going to do is it's going to look at the addresses that it is interested in, the scripts that it is interested in, and it's going to hash its own scripts.\\nAnd remember the hashes were sorted so now you can actually check the filter for the first hash and then the second hash and the third hash etc.\\nAnd see if you have a match and then you can stop when your hash is higher, is a greater number than the last hash you checked.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:21:22\"}, {\"type\":\"paragraph\",\"text\":\"I don't understand that at all, but sounds interesting.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:21:26\"}, {\"type\":\"paragraph\",\"text\":\"Okay, well that's fine.\\nIt wasn't the best explanation probably, but you can find it on the internet.\\nBut basically, it's kind of cool fancy math that lets you you know very efficiently communicate a lot of information.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:21:37\"}, {\"type\":\"paragraph\",\"text\":\"Love it.\\nOkay so that was the high level explanation and then after that the mathematical explanation which I didn't understand but maybe some of our listeners did.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:21:48\"}, {\"type\":\"paragraph\",\"text\":\"Probably only if they already understood it.\"}, {\"type\":\"heading\",\"text\":\"Final Thoughts\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:21:51\"}, {\"type\":\"paragraph\",\"text\":\"Next question.\\nYou just mentioned embedding the filters into blocks.\\nWhy is it not already the case?\\nTo just put it bluntly.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:22:00\"}, {\"type\":\"paragraph\",\"text\":\"First of all because it's a soft fork and we've talked about (how) soft forks are the kind of things you want to be very careful with.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:22:07\"}, {\"type\":\"paragraph\",\"text\":\"But also because it's controversial.\\nBecause why is it controversial?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:22:10\"}, {\"type\":\"paragraph\",\"text\":\"Well, for, it's probably for several reasons, but one reason would be how easy do you want to make it for people not to verify the whole chain.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:22:18\"}, {\"type\":\"paragraph\",\"text\":\"Even if you're using this Neutrino solution just like the specific solution which we discussed at first, you're still not getting full security.\\nYou're still trusting hash power as I've mentioned in both cases.\\nSo you're trusting that at least a majority of miners isn't lying to you, essentially.\\nSo then the question is, okay, we can make it very easy to run light clients, but do we actually want to make it very easy for people to run light clients because that way they're all going to trust on miners and maybe that's not such a good idea in the first place.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:22:55\"}, {\"type\":\"paragraph\",\"text\":\"Exactly.\\nAnd there's kind of two forces where people are drawn to.\\nOn the one hand, you could say, well, if it's difficult to run a light client, maybe more people will run a full node on a good computer.\\nBut there's another attracting force that will just get people to use custodial wallets or some other thing.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:23:11\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, or not Bitcoin at all.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:23:13\"}, {\"type\":\"paragraph\",\"text\":\"Exactly.\\nAnd it's hard to say, and in the long run, maybe it's different.\\nMaybe in the short run, by supporting this, you get lots of mobile adoption of people who at least, you know, use Bitcoin, at least check the headers, rather than check absolutely nothing.\\nBut maybe on the very long run, that doesn't happen.\\nNow, in the longer run, we have Moore's Law.\\nSo if the block size doesn't increase, and if networks and computers do get better, then maybe in a couple of decades, I think Luke Dashjr did a calculation on it, maybe in a couple of decades, it becomes real practical to run this thing on your phone.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:23:46\"}, {\"type\":\"paragraph\",\"text\":\"I guess this would also assume Moore's Law holding up, right?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:23:51\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, or at least somewhat holds up.\\nOtherwise it takes even longer.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:23:56\"}, {\"type\":\"paragraph\",\"text\":\"We could also decrease the block size limit as Luke suggests, and that way it would be shorter that that way we could use full nodes on our phone sooner.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:24:07\"}, {\"type\":\"paragraph\",\"text\":\"I don't know if that's worth having a giant civil war over (that) though.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:23:56\"}, {\"type\":\"paragraph\",\"text\":\"I think only Luke thinks that, well not just Luke there's a couple more people but it's probably not gonna happen.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:24:20\"}, {\"type\":\"paragraph\",\"text\":\"So this goes back to our Utreexo episode where we discussed another way to verify blocks that takes less RAM and one particular advantage of that approach is that you could sync a note on your computer and then just have a QR code on your computer because you trust your own computer.\\nYou scan it with your phone and boom, your note on your mobile phone is synced.\\nSo that gets rid of the initial sync problem.\\nAnd this Utreexo technique allows you to work with very little RAM, which probably means that you can sync your phone on Wi-Fi and it'll be fast and then maybe you use some of these light client techniques if you're outside doing something.\\nSo when you're outside you make a payment or you receive a payment and you kind of trust it, but when you get home, you can immediately see if something went wrong.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:25:06\"}, {\"type\":\"paragraph\",\"text\":\"Yeah.\\nSo the episode is short.\\nNeutrino compact side block filters.\\nThey're new type of light clients that offer more privacy.\\nThey are being used in Lightning wallets, but they're not specifically for Lightning wallets.\\nAre they used in normal light wallets by now?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:25:23\"}, {\"type\":\"paragraph\",\"text\":\"I don't know.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:25:24\"}, {\"type\":\"paragraph\",\"text\":\"I don't think so.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:25:25\"}, {\"type\":\"paragraph\",\"text\":\"I haven't kept track of new normal light wallets, but I guess most of them are Lightning wallets nowadays, the new wallets.\\nAren't they?\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:25:33\"}, {\"type\":\"paragraph\",\"text\":\"New wallets, sure, but I think Electrum, they would be interested to maybe implement it as well, but I don't think they have yet.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:25:41\"}, {\"type\":\"paragraph\",\"text\":\"That might be worth a brief mention too.\\nThe third solution that people are using is Electrum.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:25:46\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, that is another sort of in-between solution.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:25:49\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, as far as I know Electrum will just say here are my addresses give me transactions and then it will get SPV proofs.\\nSo you get less privacy than Bloom filters but we already discussed that the privacy might be zero, but you do get the same security in terms of proving that these transactions are real.\\nAnd the same lying by omission and the same problem with potential spy nodes.\\nYeah, I guess that's all we've got here.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:26:12\"}, {\"type\":\"paragraph\",\"text\":\"I think so.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:26:14\"}, {\"type\":\"paragraph\",\"text\":\"In that case, thank you for listening to The Van Wirdum Sjorsnado.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:26:17\"}, {\"type\":\"paragraph\",\"text\":\"There you go.\"}",
    "body": "## Introduction\n\nAaron van Wirdum: 00:01:34\n\nLive from Utrecht, this is The Van Wirdum Sjorsnado.\n\nSjors Provoost: 00:01:37\n\nHello.\n\nAaron van Wirdum: 00:01:38\n\nVan Wirdum Sjorsnado.\nDid I say it right this time?\n\nSjors Provoost: 00:01:42\n\nI don't know.\nWe're not going to check again.\nThis is take number three.\nNow you're going to ask me whether I rioted and I'm gonna say no.\n\nAaron van Wirdum: 00:01:51\n\nYou're like psychic.\n\nSjors Provoost: 00:01:53\n\nYes.\n\nAaron van Wirdum: 00:01:54\n\nYou're able to predict the future.\nOkay, so let's skip all the rioting jokes and all the pronunciation jokes and get to it.\n\nSjors Provoost: 00:02:02\n\nYes.\n\nAaron van Wirdum: 00:02:03\n\nWhat are we gonna discuss?\n\nSjors Provoost: 00:02:04\n\nI think we're gonna talk about compact block filters.\n\nAaron van Wirdum: 00:02:06\n\nYes aka Neutrino.\n\n## What are Light Clients\n\nAaron van Wirdum: 00:02:09\n\nThese are a new type of filters for light clients so first let's start at the beginning Sjors what are light clients?\n\nSjors Provoost: 00:02:20\n\nYeah we should also caveat that by new type, we mean from 2018 or something.\n\nAaron van Wirdum: 00:02:25\n\nIt's not brand new, but it's still fairly new.\n\nSjors Provoost: 00:02:27\n\nYeah, we mentioned in the last episode that we were going to talk about that at some point.\n\nAaron van Wirdum: 00:02:31\n\nYeah, we did, because we did a Bitcoin Core 21 episode and it's one of the new features in Bitcoin Core 21.\n\nSjors Provoost: 00:02:38\n\nThat's right.\n\nAaron van Wirdum: 00:02:39\n\nAnd now we're gonna get more in depth about Neutrino.\nSo what are light clients?\n\nSjors Provoost: 00:02:44\n\nSo the idea of a light client is that you don't want to download the whole blockchain.\nAnd Satoshi made some remarks about that in the original white paper, how you could avoid downloading the entire blockchain, maybe if you were on a mobile device.\n\nAaron van Wirdum: 00:02:56\n\nYeah, you want to be able to use Bitcoin, that is, send and receive Bitcoins, for example, Satoshi's, but you don't want to have to download the entire blockchain, which you normally would have to do in order to know what the current state of balances of UTXOs is, which you need to know in order to know if transactions are valid and so forth.\nThe downside is it takes about two days, I think nowadays, depending on how fast your computer is, but something like that on a reasonably fast computer.\n\nSjors Provoost: 00:03:27\n\nYeah, I think I can do it in five hours.\n\nAaron van Wirdum: 00:03:30\n\nYeah, because you've got like a wizard's computer, but normal people would take like two days.\nBut even on your phones, you couldn't do it in five hours.\n\nSjors Provoost: 00:03:39\n\nNo, on a phone it's horrible.\nIt's days if not weeks.\n\nAaron van Wirdum: 00:03:42\n\nYeah, so that's where light clients come in.\nSo what are light clients?\n\nSjors Provoost: 00:03:46\n\nYeah, so of course there are different ways to do it.\nThe very lightest of lightest clients would be a custodial wallet, but we don't want to talk about that.\nBut here, what we're talking about is something that uses SPV, so simplified payment verification.\n\nAaron van Wirdum: 00:04:00\n\nOh yeah, so custodial is one way to do it.\nThe other way is to sort of connect a wallet to a full node, which you're running on some other device.\nBut what we're going to discuss here is yet another solution, which, yeah, SPV, as you mentioned.\n\nSjors Provoost: 00:04:15\n\nYeah, so simplified payment verification, as it says, it is a simple way to verify payments.\nAnd why do you care about that?\nBecause the real, one of the things you care about when using Bitcoin is that you actually got the coins that you think you have.\nThat may be something you want to verify.\nAnd there's actually a way to do that, which involves knowing the headers, and the headers are 80 bytes each per block, so it's pretty small.\n\nAaron van Wirdum: 00:04:39\n\nYeah, the block headers.\n\nSjors Provoost: 00:04:40\n\nAnd then in addition to that, a proof, a Merkle proof that shows that this transaction is actually inside the block.\nSo if you know what a transaction is and you know that it's in the block, then you know you've received it, assuming that the rest of the block was valid and nobody did any shenanigans with the history, etc.\n\nAaron van Wirdum: 00:05:01\n\nYeah, so in a way you're kind of trusting hash power you're trusting that whoever invested all this energy in hash power did so because it would be too expensive to do this while mining an invalid block.\n\nSjors Provoost: 00:05:19\n\nExactly, so you're trusting other people to do the verification.\nThe other thing is that somebody can prove that you did receive a transaction this way, they can give you that proof.\nFor example, the person who paid you, but also the wallet has a way to fetch it which we'll talk about but it doesn't work the other way around so just because nobody's giving you a proof doesn't mean that you did not receive the transaction you cannot prove that a transaction does not exist.\n\n## Bloom Filters for Light Clients\n\nAaron van Wirdum: 00:05:44\n\nSo let's say I'm running an SPV client and someone told me they paid me, then I want to know if that's really true.\nSo I would ask you, Sjors, who's running a full node, you could tell me I didn't receive anything, even if I did.\nI'm still trusting you in that way.\n\nSjors Provoost: 00:06:03\n\nYeah, we can go into a little bit more detail about how that works.\nSo the naive way would be, okay, if somebody makes a payment to you, then that person should send the proof.\nThat's possible, but it's not very convenient.\nSo what instead happens is something called Bloom Filters.\nAnd what your lightweight wallet does is it creates a filter which says, give me all the transactions that relate to this address.\nBut It doesn't really say which address it is, but there's some magic math going on so that when a node sees a certain address, it'll know that it has to send you a signal.\nSo for example, it would say, give me all the transactions in which an address starts with an A.\nAnd that's not exactly how it works.\nIt's mathematically more sophisticated than that.\nBut you can understand intuitively what the privacy benefit of that is.\nLike I'm not telling you that which address I have.\nI'm just telling you tell me everything that has an A in it.\nAnd you can configure that.\nSo you can say well give me every address with ABCDEF.\nSome more specific things.\nSo you get only the transactions you care about.\nIf you care a bit more about privacy, you ask for a bit more, but it comes at the cost of bandwidth.\n\nAaron van Wirdum: 00:07:13\n\nSo the thing is, your actual addresses are a subset of the addresses you're asking about.\n\nSjors Provoost: 00:07:19\n\nExactly.\nSo in practice, your light wallet sends a message to a full node somewhere on the network, one of its peers, and this full node will then keep an eye on that.\nAs long as you're connected to it, it will keep an eye on those addresses and it will send you a block, but with only those transactions in it that match.\nAnd each of those transactions will have the correct proof that it actually belongs in the block.\n\nAaron van Wirdum: 00:07:41\n\nWhich the light client is then able to check.\nSo the light client checks, okay, is this actually the address I cared about or is this a false positive is the block valid as far as hash power goes and then is the transaction valid I guess and if that all checks out then the light client sort of knows fairly sure that it has been paid even though they're still trusting hashpower.\n\nSjors Provoost: 00:08:04\n\nYeah, so there's a couple of issues with this and we talked about one already.\n\nAaron van Wirdum: 00:08:08\n\nYeah, just to be clear in case any listeners are confused this is not what the rest of the episode is going to be about.\nThis is like a trick that exists, has been existing for the past, what is it?\nEight years, something like that?\n\nSjors Provoost: 00:08:21\n\nYeah.\n\nAaron van Wirdum: 00:08:22\n\nProbably longer than that.\nWhat we're actually gonna discuss in this improvement on this solution, because there are problems with this solution and that's what Sjors is gonna explain now.\nWhat are the problems with this solution?\n\n### Problems\n\nSjors Provoost: 00:08:35\n\nYeah, so one problem is privacy and particularly because you don't want to use too much data, there apparently are quite a few wallets out there that will use the lowest false positive rate possible.\nSo you can say okay you know do I want lots of false positives so lots of information about other addresses so I have good privacy but you can also set it very low and apparently they use a very low one which means that you're really just telling the full node that you're talking to, okay, this is the address I care about.\nAnd that's a problem because that full node you're talking to might be Chainalysis.\n\nAaron van Wirdum: 00:09:10\n\nYeah, and I think it's not just that, I think there's also some additional puzzling the full nodes can do.\nLike if he would be interested in this address, he wouldn't be asking about this or with change or something.\nI don't know the details.\nI just know that this solution, this SPV solution is broken privacy-wise.\nI think Nick Jonas broke it a long time ago.\nHe works for Blockstream now.\nAnd since then, everyone agrees that this is broken privacy-wise.\nIf you're using SPV in this way, you're essentially giving away all of your addresses to a random node on the Bitcoin network.\n\nSjors Provoost: 00:09:47\n\nOkay, so that's also bad.\n\nAaron van Wirdum: 00:09:48\n\nOr several, probably even several nodes.\nYou're just giving away your privacy.\nIt's broken.\n\nSjors Provoost: 00:09:54\n\nYeah, the other problem is that it's pretty intense on the node that has to do this, that has to provide these filters, because if you're running a full node, now some random node starts talking to you and says, hey, please give me updates about these addresses.\nAnd so you need to do a bunch of CPU use for people, and you're just doing it voluntarily.\nAnd it turns out that that's even exploitable.\nIf you create a special filter, you can create a lot of CPU load for somebody even though you don't actually care about those transactions.\nSo you can write especially those Raspberry Pis which is turned into steaming you know.\n\nAaron van Wirdum: 00:10:29\n\nYeah, so in this case the the light client, the SPV client, is making the filter for the addresses it cares about plus false positives, gives this filter to a full node on a network, and then this full node has to decipher which addresses the light client is interested in.\nThis is costing the full node's CPU power.\nSo it's costly, and the full node isn't earning anything by it, unless it's a spy node, and then we're back to problem one.\n\n## Compact Block Filters\n\nSjors Provoost: 00:10:59\n\nWell, and that creates a perverse incentive of course, because for normal people there is really no reason to do this other than altruism, but for spy nodes there is a financial motive to do this, so guess who are serving this.\nSo let's move on to a new approach that was produced, I believe proposed around 2018, maybe 2019.\n\nAaron van Wirdum: 00:11:18\n\nBy Lalu (Rosebeef), Lightning Labs' CTO.\n\nSjors Provoost: 00:11:30\n\nThis is often referred to as Neutrino, but technically Neutrino is an implementation of that.\n\nAaron van Wirdum: 00:11:36\n\nOf the general idea?\n\nSjors Provoost: 00:11:37\n\nYeah, of the idea of compact block filters.\nThe BIPs you want to look for are BIP 157 and BIP 158.\nSo, I think we should first talk about high level, what's going on and why it's good.\nAnd then I'll try to do a quick explainer on what it's actually doing at a more nitty gritty technical level, because it's kind of cool, I think.\n\nAaron van Wirdum: 00:11:58\n\nSounds good to me.\nStart with the high level stuff.\n\nSjors Provoost: 00:12:01\n\nSo the high level stuff, if you're running a full node, you're no longer getting custom filters from the peers that connect to you.\nThere is only one filter.\nBasically what you do as a full node is you process all your blocks and you create an index for every block.\nThere is a couple kilobytes of information that you need to keep track of.\nAnd you do that once and then peers can ask for it and you just give it to them.\nSo every peer gets the same information from you.\n\nAaron van Wirdum: 00:12:27\n\nI think what you're trying to say is with the SPV solution we discussed a minute ago, the light client creates a filter that includes the addresses it cares about plus false positives and in this Neutrino solution or compact block side filters or whatever it was called officially, This is reversed and the full node actually creates the filter.\n\nSjors Provoost: 00:12:52\n\nThat's right and the filter just covers everything.\n\nAaron van Wirdum: 00:12:55\n\nEverything that's in the block.\n\nSjors Provoost: 00:12:57\n\nWell, every output script that's in the block And for every input, the output script that corresponds to it, which would be in the previous block that it's spinning from.\n\nAaron van Wirdum: 00:13:06\n\nSo this means that any full node, especially now with Bitcoin Core 21, any full node can create a filter.\nAnd they would all be the same because they're all seeing the same block?\n\nSjors Provoost: 00:13:17\n\nYes.\nAnd now on the client side what you do is you connect to any peer and you say give me the filters.\nYou know you're not giving away any information when you're doing that other than that you're a light client.\n\nAaron van Wirdum: 00:13:29\n\nThe light client just asks for the filter.\n\nSjors Provoost: 00:13:32\n\nRight and it could you know in theory it could ask multiple peers and make sure that they get the same filter.\n\nAaron van Wirdum: 00:13:37\n\nThen what does the light client do with the filter?\n\nSjors Provoost: 00:13:40\n\nSo what the light client is going to do is it's going to see it's going to go through its own addresses and it's going to see does the filter match any of those addresses.\nSo basically you can see for every block you run your addresses through the filter and it'll say yes this block contains transactions pertaining to the filter.\n\nAaron van Wirdum: 00:14:01\n\nThere are still false positives.\nSo what light clients really do is they put their address through this filter or whatever they actually do technically, you're going to explain it in a minute.\nAnd then a computer is going to tell them yes there might be relevant transactions in this block or no there are definitely no relevant transactions for you in this block.\n\nSjors Provoost: 00:14:29\n\nYeah and so this false positive story is as far as I know is not because of privacy, it's just because math can't do better.\nThis has to do with like, if you want less false positives, then the files that the node need to keep track of need to be bigger.\nSo if you make the filters really big, then you never get false positives, but then you might as well download the whole block.\n\nAaron van Wirdum: 00:14:50\n\nSo if the computer says no, there are definitely no relevant transactions in this block for you, then the light client just ignores the block.\n\nSjors Provoost: 00:15:01\n\nExactly, you can do that.\nAssuming the filters are not a lie, it should work.\n\nAaron van Wirdum: 00:15:07\n\nWhat if the computer says yes?\n\nSjors Provoost: 00:15:09\n\nIf the computer says yes, you have to download this block.\n\nAaron van Wirdum: 00:15:11\n\nThen you download the full block.\nSo even a light client in that case downloads, well, whatever it is, 2 megabytes of data, just downloads the whole block.\nAnd then searches in this block to see if there was actually a transaction pertaining to that client in the block.\n\nSjors Provoost: 00:15:28\n\nYeah, so if your wallet is tracking thousands of addresses then maybe you have to download one in a hundred blocks as a false positive even though you haven't done anything right so this depends on how many addresses you're watching you get a little bit more false positives but yeah you have to download a bunch of blocks.\n\nAaron van Wirdum: 00:15:47\n\nSo you actually have to download slightly more data compared to the previous privacy-broken SPV solution.\n\nSjors Provoost: 00:15:55\n\nBut you get much better privacy.\n\nAaron van Wirdum: 00:15:56\n\nBecause now sometimes you need to download a block.\n\nSjors Provoost: 00:16:00\n\nYeah\n\nAaron van Wirdum: 00:16:00\n\nEven sometimes if there's a false positive, so sometimes you download a block for nothing, but sometimes you've got to download a block, but then you get much better privacy.\n\nSjors Provoost: 00:16:09\n\nYeah, and you could even be smarter about it.\nLike you could request one block per peer so that the only thing each peer knows is that you may care about something in that block which is not a lot of information maybe you fetch them over Tor if you want to be even better so that's kind of nice privacy wise but it reuses a bit more bandwidth\n\nAaron van Wirdum: 00:16:29\n\nIs that a high level part?\n\n## Downsides\n\nSjors Provoost: 00:16:31\n\nNo so we can also talk about some of the downsides.\nSo the biggest problem is that the filters can be fake, as in a node can just give you a complete nonsense and then you start asking for blocks.\nFirst of all then it would match at the wrong block, so you wouldn't be able to find the blocks that pertain to you.\nOf course, at some point, maybe you can figure that out if you ask multiple peers for their filters and then you start comparing which one is lying.\nBut that's the kind of worms.\nThe good news is it is being used by a lot of the, especially Lightning mobile wallets.\nAnd they seem to work, but maybe we still live in this happy time.\nSo I think we talked about that last time.\nWhere now everybody's being nice to each other, but maybe one day people are stopping nice to each other and then I don't know what's gonna happen.\n\nAaron van Wirdum: 00:17:20\n\nYeah we we spoke about it in the podcast but I think in a different context right?\n\nSjors Provoost: 00:17:25\n\nYeah.\n\nAaron van Wirdum: 00:17:26\n\nOr not.\nWell anyways so one problem is that you're a light client, I'm a light client, I'm downloading this filter from you, Sjors, who's running a full node, and then I actually have no idea if this filter is actually a filter or just gibberish.\nIs that what you're telling me?\n\nSjors Provoost: 00:17:42\n\nYeah, not just gibberish, but just wrong.\nLike it has the wrong transactions in it, it will match the wrong things.\n\nAaron van Wirdum: 00:17:48\n\nRight, and there's no way for me to tell the difference.\n\nSjors Provoost: 00:17:51\n\nNo, and unfortunately, it's also the case that if you download a block, you cannot recreate the filter.\nSo the only way to create the filter is to download the entire blockchain.\nAnd the reason for that is that the filter contains not just the outputs, because the outputs you know.\nIf you download a block you know what outputs are in that block.\nBut it also contains the outputs for every input.\nAnd so that refers to earlier blocks.\nSo the only way to really check whether it's not lying would be to find a block and then make sure that you find all the blocks for those inputs and it would just be a mess.\nSo that's unfortunate.\n\nAaron van Wirdum: 00:18:32\n\nThis sounds like a very big downside.\nIt sounds like if someone would want to attack these kind of light clients.\n\nSjors Provoost: 00:18:41\n\nYeah but then you have to maybe compare it to the you know earlier situation that we had with the Bloom filters.\nIt's kind of also about lying by omission.\n\nAaron van Wirdum: 00:18:49\n\nThat's really the problem.\nAnd it's sort of a DOS factor this time on the client, because the client could be having to download every single block because it doesn't know which one to download.\n\nAaron van Wirdum: 00:19:00\n\nIs that a high-level part?\n\n## Technical Details\n\nSjors Provoost: 00:19:02\n\nYeah, I think in the long run, one of the thoughts is to turn that into a commitment into the block, but that itself is controversial, but that would at least solve this trust problem, because if the filters are committed in a block, then you do know that they're correct, at least you're back to SPV proof.\n\nAaron van Wirdum: 00:19:18\n\nYou're at least back to trusting the hash power.\n\nSjors Provoost: 00:19:20\n\nYeah, so then you're at the same trust as you were with the bloom filters, in terms of trusting hash power.\nOkay, so let's maybe talk about how this works.\n\nAaron van Wirdum: 00:19:32\n\nYeah, you want to get more technical?\n\nSjors Provoost: 00:19:34\n\nYeah, so here's the recipe.\nIf you're serving these filters, what you do is you go through a block, for each block, you take all the output scripts, except `OP_RETURN`, because that's not interesting, And for every input you take all the output scripts it refers to.\nAnd you just put those in a row.\nAnd now, for every item you're going to hash it, there's a special hash function for it.\nWe talked about hash functions, I think, in another episode.\nSo now you have these hashes, which are just essentially all semi-random.\nJust looks like noise.\n\nAaron van Wirdum: 00:20:08\n\nLooks like random numbers.\n\nSjors Provoost: 00:20:10\n\nYes.\nThey're deterministically random, so if you take an output script, you will get the same hash.\nAnd then you're going to sort those hashes and you're going to calculate the difference between the hashes.\nBecause hashes are just big numbers.\nSo you can subtract, you sort them and then you subtract them.\nAnd it turns out that this is something you can compress with Golomb coding.\nAnd this is just some mathematical trick that I don't understand, but it turns out that if you have a pattern like this, a bunch of sorted random things, you can compress it very efficiently.\nAnd so you do that, and now the client gets this compressed piece of data and what it's going to do is it's going to look at the addresses that it is interested in, the scripts that it is interested in, and it's going to hash its own scripts.\nAnd remember the hashes were sorted so now you can actually check the filter for the first hash and then the second hash and the third hash etc.\nAnd see if you have a match and then you can stop when your hash is higher, is a greater number than the last hash you checked.\n\nAaron van Wirdum: 00:21:22\n\nI don't understand that at all, but sounds interesting.\n\nSjors Provoost: 00:21:26\n\nOkay, well that's fine.\nIt wasn't the best explanation probably, but you can find it on the internet.\nBut basically, it's kind of cool fancy math that lets you you know very efficiently communicate a lot of information.\n\nAaron van Wirdum: 00:21:37\n\nLove it.\nOkay so that was the high level explanation and then after that the mathematical explanation which I didn't understand but maybe some of our listeners did.\n\nSjors Provoost: 00:21:48\n\nProbably only if they already understood it.\n\n## Final Thoughts\n\nAaron van Wirdum: 00:21:51\n\nNext question.\nYou just mentioned embedding the filters into blocks.\nWhy is it not already the case?\nTo just put it bluntly.\n\nSjors Provoost: 00:22:00\n\nFirst of all because it's a soft fork and we've talked about (how) soft forks are the kind of things you want to be very careful with.\n\nAaron van Wirdum: 00:22:07\n\nBut also because it's controversial.\nBecause why is it controversial?\n\nSjors Provoost: 00:22:10\n\nWell, for, it's probably for several reasons, but one reason would be how easy do you want to make it for people not to verify the whole chain.\n\nAaron van Wirdum: 00:22:18\n\nEven if you're using this Neutrino solution just like the specific solution which we discussed at first, you're still not getting full security.\nYou're still trusting hash power as I've mentioned in both cases.\nSo you're trusting that at least a majority of miners isn't lying to you, essentially.\nSo then the question is, okay, we can make it very easy to run light clients, but do we actually want to make it very easy for people to run light clients because that way they're all going to trust on miners and maybe that's not such a good idea in the first place.\n\nSjors Provoost: 00:22:55\n\nExactly.\nAnd there's kind of two forces where people are drawn to.\nOn the one hand, you could say, well, if it's difficult to run a light client, maybe more people will run a full node on a good computer.\nBut there's another attracting force that will just get people to use custodial wallets or some other thing.\n\nAaron van Wirdum: 00:23:11\n\nYeah, or not Bitcoin at all.\n\nSjors Provoost: 00:23:13\n\nExactly.\nAnd it's hard to say, and in the long run, maybe it's different.\nMaybe in the short run, by supporting this, you get lots of mobile adoption of people who at least, you know, use Bitcoin, at least check the headers, rather than check absolutely nothing.\nBut maybe on the very long run, that doesn't happen.\nNow, in the longer run, we have Moore's Law.\nSo if the block size doesn't increase, and if networks and computers do get better, then maybe in a couple of decades, I think Luke Dashjr did a calculation on it, maybe in a couple of decades, it becomes real practical to run this thing on your phone.\n\nAaron van Wirdum: 00:23:46\n\nI guess this would also assume Moore's Law holding up, right?\n\nSjors Provoost: 00:23:51\n\nYeah, or at least somewhat holds up.\nOtherwise it takes even longer.\n\nAaron van Wirdum: 00:23:56\n\nWe could also decrease the block size limit as Luke suggests, and that way it would be shorter that that way we could use full nodes on our phone sooner.\n\nSjors Provoost: 00:24:07\n\nI don't know if that's worth having a giant civil war over (that) though.\n\nAaron van Wirdum: 00:23:56\n\nI think only Luke thinks that, well not just Luke there's a couple more people but it's probably not gonna happen.\n\nSjors Provoost: 00:24:20\n\nSo this goes back to our Utreexo episode where we discussed another way to verify blocks that takes less RAM and one particular advantage of that approach is that you could sync a note on your computer and then just have a QR code on your computer because you trust your own computer.\nYou scan it with your phone and boom, your note on your mobile phone is synced.\nSo that gets rid of the initial sync problem.\nAnd this Utreexo technique allows you to work with very little RAM, which probably means that you can sync your phone on Wi-Fi and it'll be fast and then maybe you use some of these light client techniques if you're outside doing something.\nSo when you're outside you make a payment or you receive a payment and you kind of trust it, but when you get home, you can immediately see if something went wrong.\n\nAaron van Wirdum: 00:25:06\n\nYeah.\nSo the episode is short.\nNeutrino compact side block filters.\nThey're new type of light clients that offer more privacy.\nThey are being used in Lightning wallets, but they're not specifically for Lightning wallets.\nAre they used in normal light wallets by now?\n\nSjors Provoost: 00:25:23\n\nI don't know.\n\nAaron van Wirdum: 00:25:24\n\nI don't think so.\n\nSjors Provoost: 00:25:25\n\nI haven't kept track of new normal light wallets, but I guess most of them are Lightning wallets nowadays, the new wallets.\nAren't they?\n\nAaron van Wirdum: 00:25:33\n\nNew wallets, sure, but I think Electrum, they would be interested to maybe implement it as well, but I don't think they have yet.\n\nSjors Provoost: 00:25:41\n\nThat might be worth a brief mention too.\nThe third solution that people are using is Electrum.\n\nAaron van Wirdum: 00:25:46\n\nYeah, that is another sort of in-between solution.\n\nSjors Provoost: 00:25:49\n\nYeah, as far as I know Electrum will just say here are my addresses give me transactions and then it will get SPV proofs.\nSo you get less privacy than Bloom filters but we already discussed that the privacy might be zero, but you do get the same security in terms of proving that these transactions are real.\nAnd the same lying by omission and the same problem with potential spy nodes.\nYeah, I guess that's all we've got here.\n\nAaron van Wirdum: 00:26:12\n\nI think so.\n\nSjors Provoost: 00:26:14\n\nIn that case, thank you for listening to The Van Wirdum Sjorsnado.\n\nAaron van Wirdum: 00:26:17\n\nThere you go.\n\n",
    "body_type": "markdown",
    "created_at": "2021-01-29T00:00:00.000Z",
    "domain": "https://btctranscripts.com/",
    "url": "https://btctranscripts.com/bitcoin-explained/compact-client-side-filtering",
    "categories": [
        "podcast"
    ],
    "tags": [
        "compact-block-filters"
    ],
    "media": "https://www.youtube.com/watch?v=HGrdiwqlKhU",
    "authors": [
        "Sjors Provoost",
        "Aaron van Wirdum"
    ],
    "indexed_at": "2024-03-21T16:33:36.111Z",
    "transcript_by": "NeroCherubino via review.btctranscripts.com",
    "summary": "In a recent engaging episode of The Van Wirdum Sjorsnado, hosts Sjors Provoost and Aaron van Wirdum embark on a deep dive into the realm of Neutrino compact block filters, shedding light on their significance in enhancing privacy for Bitcoin's light client users. At the core of their discussion lies the innovative approach introduced by Lalu, the CTO of Lightning Labs, which revolves around compact block filters encapsulated within BIP 157 and BIP 158. This method represents a significant shift from traditional Simplified Payment Verification (SPV) models, which, despite enabling lightweight clients to verify transactions without the need to download the entire blockchain, have raised concerns over user privacy and the computational burden placed on full nodes.\n\nThe hosts explore the intricacies of compact block filters, emphasizing how this technology reverses the dynamics of transaction verification by placing the responsibility on full nodes to create a singular, comprehensive filter for each block. Such an approach not only streamlines the verification process but greatly enhances user privacy by eliminating the need for light clients to disclose their interest in specific transactions, thereby reducing exposure to potential security threats. Provoost delves into the technical aspects, explaining how full nodes process all transactions within a block to generate a concise index that includes every output script and corresponding input scripts from previous blocks. This enables light clients to use these filters to determine if a block contains relevant transactions without revealing specific details, significantly improving privacy despite the mathematical limitations that may lead to false positives.\n\nHowever, the discussion also brings to light the challenges associated with this system, notably the risk of full nodes providing fraudulent filters. This underscores the importance of cross-verifying filters across multiple peers to ensure reliability, though it adds complexity and potential security risks. Provoost further elucidates the deterministic randomness achieved through specialized hashing functions in generating compact block filters, maintaining the integrity of the transaction verification process.\n\nAs the conversation progresses, the hosts critically examine the reasons behind the non-implementation of these filters directly into Bitcoin blocks and the controversies surrounding soft forks and the balance between facilitating light client usage and preserving the decentralization and security principles fundamental to Bitcoin. They ponder the future of Bitcoin usability, especially concerning mobile adoption, and speculate on the evolving landscape of wallet technologies and the potential for wider integration of Neutrino filters.\n\nBy the conclusion of the episode, Provoost and van Wirdum have covered a broad spectrum of topics, from the technical specifics of Neutrino filters to philosophical debates on Bitcoin's development trajectory. Their insightful exchange offers listeners a comprehensive overview of the challenges and trends shaping the future of Bitcoin, highlighting the ongoing commitment within the community to enhance security, privacy, and accessibility in the digital currency ecosystem. Through their detailed and thought-provoking dialogue, the hosts successfully bridge the gap between complex technological concepts and the broader audience, providing a valuable resource for understanding the intricate dynamics at play in advancing cryptocurrency technology."
}