{
    "id": "bitcointranscripts+bitcoin-explained+bitcoin-core-v24-bug",
    "title": "Bitcoin Core 24.0 Bug",
    "body_formatted": "{\"type\":\"heading\",\"text\":\"Introduction\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:00:20\"}, {\"type\":\"paragraph\",\"text\":\"Live from Utrecht, this is Bitcoin Explained.\\nSjors, welcome back.\\nI saw you were promoting your book everywhere in the world over the past couple of weeks.\\nWhere did you go?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:00:31\"}, {\"type\":\"paragraph\",\"text\":\"Absolutely.\\nI went to a place called New York, a place called Nashville and a place called Austin and those are all in the United States.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:00:39\"}, {\"type\":\"paragraph\",\"text\":\"That sounds very exotic.\\nAnd you were promoting your book.\\nWhich book is this yours?\\nDo you want to promote it on our show as well?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:00:46\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, in case nobody's heard of it, it is called Bitcoin: A Work in Progress.\\nAnd if you want to find it, because of the way that Amazon actually messed up the indexing, so they basically took the colon in the name, Bitcoin: A Work in Progress, and treated that one as a title and the other as a subtitle.\\nSo you want to look for Sjors Bitcoin and then you'll find it.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:08\"}, {\"type\":\"paragraph\",\"text\":\"Great sales pitch.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:09\"}, {\"type\":\"paragraph\",\"text\":\"Or you can go to btcwip.com and you'll find it too.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:12\"}, {\"type\":\"paragraph\",\"text\":\"So I saw you promoted on Marty Bent's podcast.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:16\"}, {\"type\":\"paragraph\",\"text\":\"Exactly.\\nTFTC.\\nYeah, that was a bit unplanned because we happen to be in the same building and they said hey do you want to come on the podcast and we could talk about the book so we talked about that.\\nTales from the Crypt.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:27\"}, {\"type\":\"paragraph\",\"text\":\"Yeah so that's why there was no Bitcoin Explained episode for the past couple of weeks.\\nBut we're back, our dear new listener, with this Christmas special of Bitcoin Explained.\\nActually, I guess by the time this is released, it's not going to be Christmas anymore, but we're recording it.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:45\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, the last episode of 2022.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:47\"}, {\"type\":\"paragraph\",\"text\":\"Pretty close to Christmas anyways.\\nYeah, I guess it kind of depends on how...I'm not 100% sure if our great, super talented editor is actually working between Christmas and New Year's.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:01\"}, {\"type\":\"paragraph\",\"text\":\"Well, it's the last episode that was recorded in 2022.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:04\"}, {\"type\":\"paragraph\",\"text\":\"Yes, that's for sure.\\nSo we've got a very special episode for you today.\\nDear listener, I hope you're strapped in.\\nThis is going to be a major one.\\nSjors is going to educate you about the most important development of the year.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:19\"}, {\"type\":\"paragraph\",\"text\":\"Yes, we have scraped the absolute bottom of the absolute last barrel that we could find after like an hour of brainstorming topics.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:26\"}, {\"type\":\"paragraph\",\"text\":\"We wanted to bring you something before the end of the year, because otherwise you would have had to manage probably five to six weeks without our voice.\\nAnd we didn't want to do that to you, the listeners.\\nSo here we are back with an episode about a bug that was in Bitcoin Core 24.0. But, first of all, let's back up a little bit here.\\nLet's take it seriously.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:40\"}, {\"type\":\"paragraph\",\"text\":\"It's a serious issue.\"}, {\"type\":\"heading\",\"text\":\"Explanation of Bitcoin release process\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:41\"}, {\"type\":\"paragraph\",\"text\":\"We had an episode on Bitcoin Core 24.0. But then the release of Bitcoin Core 24.0 was delayed by quite a bit.\\nAnd that was because of a discussion about full RBF, there was an option to switch on full RBF in the Bitcoin Core 24 node.\\nAnd that sort of pushed back the actual release of Bitcoin Core 24.\\nAnd then finally Bitcoin Core 24 was released, but then it kind of wasn't.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:03:27\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, there was a bug in it.\\nBut the release was announced.\\nBut if you went to the website bitcoincore.org, you would actually still find version 23.\\nSo only some advanced users would have been able to download the actual release.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:03:39\"}, {\"type\":\"paragraph\",\"text\":\"So hang on, if Bitcoin Core 24 is not on bitcoincore.org, is it really released?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:03:47\"}, {\"type\":\"paragraph\",\"text\":\"In a sense, yes, because there was a tag made on GitHub, which is signed and there was an announcement so people would be able to download it if they went straight to the FTP download site, where you just see the list of files, but not if you went to the main website because that page takes a little bit longer for people to look at and then that gets released as well.\\nThe page that points to the release.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:04:09\"}, {\"type\":\"paragraph\",\"text\":\"Wait, so does the page usually refresh automatically to include the latest release?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:04:15\"}, {\"type\":\"paragraph\",\"text\":\"No, the website is on GitHub too.\\nSo people make a pull request to add a page that points to the new release and maybe some release notes and other remarks.\\nAnd that always takes a few days and within that few days, the bug was found.\\nAnd so it was postponed.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:04:31\"}, {\"type\":\"paragraph\",\"text\":\"Okay, I see.\\nSo there was technically an official Bitcoin Core 24 release, but that release never showed up on bitcoincore.org.\\nWhat you do find on bitcoincore.org right now is Bitcoin Core 24.0.1. And this is because there was a bug in the original, technically officially released Bitcoin Core 24 release.\\nIs that right?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:04:56\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, exactly.\\nAnd when something like that happens, then the next release can be just called 24.0.1, basically not immediately 24.1. Because it's like a quick enough fix, basically.\\nProbably nobody's gonna be running the old version.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:05:12\"}, {\"type\":\"paragraph\",\"text\":\"So first of all, there was a bug in 24, but that was not caught in the release process.\\nThat's why there is the release candidate process, right?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:05:29\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so the idea is the release candidate, you hope that people test it and find bugs.\\nBut of course, not everybody's doing that and not everybody will be testing every single possible feature in every way that they, every way that you can break it.\\nSo that was not found in time.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:05:43\"}, {\"type\":\"paragraph\",\"text\":\"So a bug was found after it was officially released, but before it was published on the bitcoincore.org website.\\nOkay, Sjors, what's the bug?\\nWhat happened?\\nWhat went wrong?\"}, {\"type\":\"paragraph\",\"text\":\"[omitted podcasting 2.0/boosts segment]\"}, {\"type\":\"heading\",\"text\":\"What makes a non-RBF transaction new?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:07:10\"}, {\"type\":\"paragraph\",\"text\":\"He or she is paying 10,000 sats and has a question which is related to the topic we talked about earlier, namely RBF.\\nWhat makes a non-RBF transaction new to a node and when is it just another version?\\nIs it easy to consider the new transaction if some of the input UTXO changes.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:33\"}, {\"type\":\"paragraph\",\"text\":\"Sorry can you repeat the question?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:07:36\"}, {\"type\":\"paragraph\",\"text\":\"What makes a non-RBF transaction new?\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:40\"}, {\"type\":\"paragraph\",\"text\":\"What makes a non-RBF transaction new?\\nAlright so what makes a transaction new?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:07:44\"}, {\"type\":\"paragraph\",\"text\":\"Rather than another version.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:45\"}, {\"type\":\"paragraph\",\"text\":\"Okay yeah.\\nDo you want to answer that?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:07:49\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so my guess is, it depends on how the node, how your wallet wants to interpret these things.\\nIn essence, a transaction spends outputs.\\nSo if any output is spent by another transaction, then that is a different transaction.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:08:01\"}, {\"type\":\"paragraph\",\"text\":\"I guess technically on the consensus level, any change to a transaction makes it a new transaction, right?\\nBut there's some nuance here maybe when it comes to relaying.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:08:12\"}, {\"type\":\"paragraph\",\"text\":\"What makes it new versus another one?\\nYou could have two, if you have one input and one transaction and then another input and another transaction and those are different transactions, they don't exclude each other but the case we're interested here is when you're replacing a transaction that means that you have another transaction that spends the same input.\\nOr at least one of the same inputs, so that only one of those two can exist.\\nAnd then the question is, what is new and what is old?\\nWell, part of that just depends on what you saw the first as a node before RBF, which would be like, if I already know a transaction, then whatever else comes in is new.\\nBut that could be different for different nodes because you might receive them in different order.\\nBut whether you call it another version or whether you call it new, it just depends on the interpretation of the wallet, how it wants to display it.\\nSo it could, I think in Bitcoin Core, it'll put a cross through the old one and then just put the new one in its place.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:09:04\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, I guess this question sort of derives probably from our conversation about these kinds of topics where we're using terms like new and version, but in actual Bitcoin protocol, there's no such distinction, right?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:09:21\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, exactly.\\nAt least I think not, because you have the end version field, but I think with RBF, it's just a flag.\\nIt's not a number that goes up.\\nThe only thing that goes up is the fee.\\nSo if a wallet wants to be a little bit smart about it, it could look at which one pays the highest fee.\\nAnd then that's sort of the newer one.\\nThat's probably intended as the newer one.\\nSo if you want to make a good wallet UI, you might want to show something that it increased the fee rather than showing two transactions.\\nBut that's really just up to the wallet authors, how they want to interpret what they're seeing on the chain.\\nThe blockchain doesn't really care.\\nWell, the mempool doesn't really care.\\nThe blockchain definitely doesn't care.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:09:59\"}, {\"type\":\"paragraph\",\"text\":\"Yeah.\\nI guess it's just way more binary.\\nEither a transaction is valid or it's not.\\nAnd if it's not, that can be because it's conflicting with the previous transaction.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:10:10\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, but then valid in the mempool depends on your mempool policy, right?\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:10:16\"}, {\"type\":\"paragraph\",\"text\":\"All right.\\nWell, that was maybe a very confusing answer.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:10:23\"}, {\"type\":\"paragraph\",\"text\":\"It's a good question.\\nI would also recommend people, if you have questions, also ask them on Stack Overflow.\\nOr Stack Exchange because you'll get better answers.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:10:31\"}, {\"type\":\"paragraph\",\"text\":\"Like I said, I think the question kind of derives from our conversation about it.\\nAnd it doesn't really map on the actual Bitcoin protocol.\\nSo that makes it a little bit hard to answer.\\nBut hopefully our attempt is at least worth something.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:10:44\"}, {\"type\":\"paragraph\",\"text\":\"How much did they pay for?\\n10,000 Satoshis.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:10:49\"}, {\"type\":\"paragraph\",\"text\":\"All right.\\nDo you think this answer was worth 10,000 Satoshis?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:10:52\"}, {\"type\":\"paragraph\",\"text\":\"I think it was worth way more than 10,000 Satoshis.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:10:56\"}, {\"type\":\"paragraph\",\"text\":\"Okay, cool.\"}, {\"type\":\"heading\",\"text\":\"Explanation of the bug\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:11:57\"}, {\"type\":\"paragraph\",\"text\":\"So then we're back to the main topic, Sjors.\\nHere you finally get the answer you've been waiting for.\\nThere was a bug in Bitcoin Core 24.\\nThat's why there was a Bitcoin Core 24.0.1 release.\\nWhat was this bug?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:12:14\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, it was a bit of a foot gun basically.\\nI don't know if foot gun is the right word.\\nYou could lose a bunch of money.\\nSo in Bitcoin Core when you're sending money you can either let the wallet decide automatically which of your coins to use to send the money or you can manually specify exactly which coins you want to use or some combination of both where you say well I want to pay one Bitcoin to this guy and I want to use this specific 0.3 Bitcoin coin that I have but other than that you figure it out which coins to take from the wallet.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:12:44\"}, {\"type\":\"paragraph\",\"text\":\"Right, when you're saying coins the technical term here is UTXOs.\\nI guess people that know that know what you mean anyway.\\nSo yeah, my addition doesn't really help anyone.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:12:54\"}, {\"type\":\"paragraph\",\"text\":\"No, that's fine.\\nSo the analogy is you have a wallet and there's a bunch of coins and paper notes in it and you have to pay something and you take one euro coin out of it and you say I definitely want to use this but then you have some other guy going through your wallet and deciding which other coins to use to add up to 10.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:13:14\"}, {\"type\":\"paragraph\",\"text\":\"Well if you want to use the analogy, sometimes when you're abroad in a country where you don't know which coins are what and you don't want to waste time, you just sort of show all your coins to the merchant and then they'll just pick.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:13:24\"}, {\"type\":\"paragraph\",\"text\":\"They'll do the coin selection for you.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:13:26\"}, {\"type\":\"paragraph\",\"text\":\"Exactly.\\nThat happens sometimes.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:13:27\"}, {\"type\":\"paragraph\",\"text\":\"I have done that a few times.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:13:28\"}, {\"type\":\"paragraph\",\"text\":\"So that would be the analogy here.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:13:31\"}, {\"type\":\"paragraph\",\"text\":\"So anyway, there was a bug in that where you would basically select a couple of coins and then due to the bug it would use those coins twice to calculate what was going on.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:13:54\"}, {\"type\":\"paragraph\",\"text\":\"Ah, wait, so you got a number of coins, UTXOs, and when you're manually selecting them, then for the fee calculation it would falsely assume that you selected them double?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:08\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, exactly.\\nAnd for some reason the net result of that mistake is that you might be paying a very very large fee because you think you're paying say one cent of fees but actually because you've counted this 10 euros twice it somehow includes it twice.\\nI don't completely understand how it happened but that was basically the nature of the bug.\\nSo you'd be paying a very large fee now fortunately there is a warning system if you pay a really really high fee it will abort but there's another feature in the wallet where you say I want to pay this address and I don't care about the precise amount, I just want to send this coin or this set of coins.\\nYou select the coins that you want to send over.\\nSo this can be useful for privacy.\\nIf you receive your salary or whatever, and that's one coin, essentially, and you want to send only your salary to an exchange and none of the other coins in your wallet, so you select your salary and you send it to the exchange and if you use that feature in combination with this bug you would lose even more money and then the warning system didn't work correctly.\\nAs you notice I'm being a bit vague because the actual bug is not described very well.\\nThat is the actual implication of the bug is not described very well.\\nThe bug itself is described as what was wrong in the code and that's pretty obvious.\\nSo there was a pretty bad way to lose some money.\\nSo don't use 24.0, just use 24.0.1.\"}, {\"type\":\"heading\",\"text\":\"How did the bug get released?\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:15:38\"}, {\"type\":\"paragraph\",\"text\":\"All right.\\nWell, this sounds like a bug, a glitch.\\nAnd I think you mentioned, I'm still going to ask.\\nSo how does this get into the code?\\nWhy is this in there?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:15:49\"}, {\"type\":\"paragraph\",\"text\":\"So this is interesting, of course, to look at what exactly went wrong here.\\nSo the bug itself was like one line of code that should not be there.\\nI think it was a command called break, which jumps out of a loop, and that command was a mistake.\\nNow how does that get there?\\nIt was part of a refactoring.\\nSo basically refactoring means you take an existing piece of code that may be ugly and you rewrite the same code but prettier in a way that it doesn't change any of the behavior.\\nAnd so that's good because better, cleaner, more readable code in the future will lead to fewer bugs.\\nHowever, you might make a mistake replicating the original behavior and that's what happened here.\\nSo I think in practice here, there were a bunch of different functions that were responsible for removing.\\nSo if you take these coins that you've manually selected, then it would have to remove those from like another set of coins so that you don't select coins twice, something like that.\\nAnd because the coin selection algorithm, it looks through the coins in your wallet it tries to see which coins can I add to this transaction but it shouldn't be adding coins that are already in your transaction so it kind of had to do the subtraction there and that code was doing the subtraction only once.\\nI think it was only subtracting one coin that you selected, but not all of them.\\nSo this is the kind of bug that you might not see if you only select one coin, you'd only see if you select two coins.\\nSo it's, difficult to run into this.\\nSo the code was doing 12 separate steps to remove these coins.\\nAnd with the new version, it would only need two steps to remove the coin.\\nSo it was cleaner, but it had the mistake in there and the mistake was not caught.\\nIt wasn't caught during the code review by the people looking at it.\\nThere were also no tests that failed.\\nSo there was no test where this precise scenario of adding two coins, etc., etc. was there.\\nBecause either could have caught it.\\nSomebody could have caught it in a review or somebody, some automated test could have caught it, but it didn't.\\nAnd so the way that that is fixed is, first you fix the original bug, and second, you add tests that would have caught it, so that at least the same bug could not happen again.\\nThat's pretty much what happened.\\nAnd the other reason it wasn't noticed is that it was only in the release and not in the master branch.\\nSo that's an interesting aspect there.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:18:15\"}, {\"type\":\"paragraph\",\"text\":\"The master branch is the main thing that Bitcoin Core developers work on.\\nAnd once in a while, Bitcoin Core developers say, from here on out, this is the new release.\\nAnd they keep working on the master branch for new features, and the new release is going to be released.\\nAnd somehow this bug was only in the release.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:18:30\"}, {\"type\":\"paragraph\",\"text\":\"Yes, exactly.\\nBecause the bug was introduced in this refactor and then after that bug was introduced, the split to the release was made and then somewhat later on master the bug was accidentally fixed.\\nNot deliberately fixed.\\nAnd the way you accidentally fix something is you do another refactor and something and then you actually make another mistake because you're not replicating the original behavior.\\nBecause nobody wanted that original behavior, nobody would have noticed that either.\\nSo it was accidentally fixed on master and that also has to do with the odds of finding it because who is testing Bitcoin Core?\\nWell, part of it is people running the master branch.\\nThose are probably other Bitcoin Core developers that are just trying, snapshots off the master branch that, are not supposed to be very safe.\\nIt's supposed to be correct but it's more likely to have bugs.\\nBut because the bug was not in the master branch, nobody testing the master branch would have noticed this.\\nOnly people testing the release branch and that might be a much smaller group of people in practice.\\nAnd like we described it's not the easiest thing to trip on.\\nBut if you do trip on it, it's very painful.\\nSo it was definitely worth fixing.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:19:33\"}, {\"type\":\"paragraph\",\"text\":\"Well, there you have it.\\nThat's why the new release is Bitcoin Core 24.0.1 instead of just Bitcoin Core 24.\\nYou are enlightened, our dear listener.\"}, {\"type\":\"heading\",\"text\":\"Additional bug fixes\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:19:45\"}, {\"type\":\"paragraph\",\"text\":\"Yes, there are two other bugs in there too, but they're less important and in very different areas.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:19:50\"}, {\"type\":\"paragraph\",\"text\":\"Oh, that's a kind of a depressing note to close the episode on.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:19:54\"}, {\"type\":\"paragraph\",\"text\":\"There's always bugs.\\nSo what happens is after a release, the developers pile up existing bug fixes for a future release.\\nSo, there'll be a version 25.0, which will have the new master branch on it, but there'll also be a version 24.1, 24.2, which will have only sort of bug fixes in it that are important enough to put on the old releases.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:20:21\"}, {\"type\":\"paragraph\",\"text\":\"Wait, wait, wait, wait.\\nAre there still bugs in Bitcoin Core 24.0.1 as far as we know right now?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:20:25\"}, {\"type\":\"paragraph\",\"text\":\"I don't know.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:20:26\"}, {\"type\":\"paragraph\",\"text\":\"I thought that's what you said, but maybe I misheard.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:20:28\"}, {\"type\":\"paragraph\",\"text\":\"No, the general process is that we'll collect bug fixes over time.\\nSo maybe immediately after release, there is no known bug, or maybe there's a known bug, but there's no fix for it yet.\\nBut then over time, say the next six months or a year, bugs will get fixed.\\nWe'll find out there were bugs in version 24.\\nAnd then you can do two things to your users.\\nYou can say, tough, just download version 25 if you want that bug fixed.\\nBut then they have to download all these new changes in version 25, which people don't like.\\nSo there will also be version 24.1, which only fixes the bugs, but doesn't have any of the other new changes.\\nThat's called backporting.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:21:06\"}, {\"type\":\"paragraph\",\"text\":\"Sjors, I just want you to tell our listeners that Bitcoin Core 24.0.1 is clean and we're ready for the new year.\\nWe're ready for 2023 with Bitcoin Core 24.0.1.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:21:20\"}, {\"type\":\"paragraph\",\"text\":\"Well, all I can tell you is that currently there is a milestone called 24.1 and it doesn't have any bugs in it.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:21:27\"}, {\"type\":\"paragraph\",\"text\":\"There we go end of the episode but thank you for listening to Bitcoin Explained\"}",
    "body": "## Introduction\n\nAaron van Wirdum: 00:00:20\n\nLive from Utrecht, this is Bitcoin Explained.\nSjors, welcome back.\nI saw you were promoting your book everywhere in the world over the past couple of weeks.\nWhere did you go?\n\nSjors Provoost: 00:00:31\n\nAbsolutely.\nI went to a place called New York, a place called Nashville and a place called Austin and those are all in the United States.\n\nAaron van Wirdum: 00:00:39\n\nThat sounds very exotic.\nAnd you were promoting your book.\nWhich book is this yours?\nDo you want to promote it on our show as well?\n\nSjors Provoost: 00:00:46\n\nYeah, in case nobody's heard of it, it is called Bitcoin: A Work in Progress.\nAnd if you want to find it, because of the way that Amazon actually messed up the indexing, so they basically took the colon in the name, Bitcoin: A Work in Progress, and treated that one as a title and the other as a subtitle.\nSo you want to look for Sjors Bitcoin and then you'll find it.\n\nAaron van Wirdum: 00:01:08\n\nGreat sales pitch.\n\nSjors Provoost: 00:01:09\n\nOr you can go to btcwip.com and you'll find it too.\n\nAaron van Wirdum: 00:01:12\n\nSo I saw you promoted on Marty Bent's podcast.\n\nSjors Provoost: 00:01:16\n\nExactly.\nTFTC.\nYeah, that was a bit unplanned because we happen to be in the same building and they said hey do you want to come on the podcast and we could talk about the book so we talked about that.\nTales from the Crypt.\n\nAaron van Wirdum: 00:01:27\n\nYeah so that's why there was no Bitcoin Explained episode for the past couple of weeks.\nBut we're back, our dear new listener, with this Christmas special of Bitcoin Explained.\nActually, I guess by the time this is released, it's not going to be Christmas anymore, but we're recording it.\n\nSjors Provoost: 00:01:45\n\nYeah, the last episode of 2022.\n\nAaron van Wirdum: 00:01:47\n\nPretty close to Christmas anyways.\nYeah, I guess it kind of depends on how...I'm not 100% sure if our great, super talented editor is actually working between Christmas and New Year's.\n\nSjors Provoost: 00:02:01\n\nWell, it's the last episode that was recorded in 2022.\n\nAaron van Wirdum: 00:02:04\n\nYes, that's for sure.\nSo we've got a very special episode for you today.\nDear listener, I hope you're strapped in.\nThis is going to be a major one.\nSjors is going to educate you about the most important development of the year.\n\nSjors Provoost: 00:02:19\n\nYes, we have scraped the absolute bottom of the absolute last barrel that we could find after like an hour of brainstorming topics.\n\nAaron van Wirdum: 00:02:26\n\nWe wanted to bring you something before the end of the year, because otherwise you would have had to manage probably five to six weeks without our voice.\nAnd we didn't want to do that to you, the listeners.\nSo here we are back with an episode about a bug that was in Bitcoin Core 24.0. But, first of all, let's back up a little bit here.\nLet's take it seriously.\n\nSjors Provoost: 00:02:40\n\nIt's a serious issue.\n\n## Explanation of Bitcoin release process\n\nAaron van Wirdum: 00:02:41\n\nWe had an episode on Bitcoin Core 24.0. But then the release of Bitcoin Core 24.0 was delayed by quite a bit.\nAnd that was because of a discussion about full RBF, there was an option to switch on full RBF in the Bitcoin Core 24 node.\nAnd that sort of pushed back the actual release of Bitcoin Core 24.\nAnd then finally Bitcoin Core 24 was released, but then it kind of wasn't.\n\nSjors Provoost: 00:03:27\n\nYeah, there was a bug in it.\nBut the release was announced.\nBut if you went to the website bitcoincore.org, you would actually still find version 23.\nSo only some advanced users would have been able to download the actual release.\n\nAaron van Wirdum: 00:03:39\n\nSo hang on, if Bitcoin Core 24 is not on bitcoincore.org, is it really released?\n\nSjors Provoost: 00:03:47\n\nIn a sense, yes, because there was a tag made on GitHub, which is signed and there was an announcement so people would be able to download it if they went straight to the FTP download site, where you just see the list of files, but not if you went to the main website because that page takes a little bit longer for people to look at and then that gets released as well.\nThe page that points to the release.\n\nAaron van Wirdum: 00:04:09\n\nWait, so does the page usually refresh automatically to include the latest release?\n\nSjors Provoost: 00:04:15\n\nNo, the website is on GitHub too.\nSo people make a pull request to add a page that points to the new release and maybe some release notes and other remarks.\nAnd that always takes a few days and within that few days, the bug was found.\nAnd so it was postponed.\n\nAaron van Wirdum: 00:04:31\n\nOkay, I see.\nSo there was technically an official Bitcoin Core 24 release, but that release never showed up on bitcoincore.org.\nWhat you do find on bitcoincore.org right now is Bitcoin Core 24.0.1. And this is because there was a bug in the original, technically officially released Bitcoin Core 24 release.\nIs that right?\n\nSjors Provoost: 00:04:56\n\nYeah, exactly.\nAnd when something like that happens, then the next release can be just called 24.0.1, basically not immediately 24.1. Because it's like a quick enough fix, basically.\nProbably nobody's gonna be running the old version.\n\nAaron van Wirdum: 00:05:12\n\nSo first of all, there was a bug in 24, but that was not caught in the release process.\nThat's why there is the release candidate process, right?\n\nSjors Provoost: 00:05:29\n\nYeah, so the idea is the release candidate, you hope that people test it and find bugs.\nBut of course, not everybody's doing that and not everybody will be testing every single possible feature in every way that they, every way that you can break it.\nSo that was not found in time.\n\nAaron van Wirdum: 00:05:43\n\nSo a bug was found after it was officially released, but before it was published on the bitcoincore.org website.\nOkay, Sjors, what's the bug?\nWhat happened?\nWhat went wrong?\n\n[omitted podcasting 2.0/boosts segment]\n\n## What makes a non-RBF transaction new?\n\nSjors Provoost: 00:07:10\n\nHe or she is paying 10,000 sats and has a question which is related to the topic we talked about earlier, namely RBF.\nWhat makes a non-RBF transaction new to a node and when is it just another version?\nIs it easy to consider the new transaction if some of the input UTXO changes.\n\nAaron van Wirdum: 00:07:33\n\nSorry can you repeat the question?\n\nSjors Provoost: 00:07:36\n\nWhat makes a non-RBF transaction new?\n\nAaron van Wirdum: 00:07:40\n\nWhat makes a non-RBF transaction new?\nAlright so what makes a transaction new?\n\nSjors Provoost: 00:07:44\n\nRather than another version.\n\nAaron van Wirdum: 00:07:45\n\nOkay yeah.\nDo you want to answer that?\n\nSjors Provoost: 00:07:49\n\nYeah, so my guess is, it depends on how the node, how your wallet wants to interpret these things.\nIn essence, a transaction spends outputs.\nSo if any output is spent by another transaction, then that is a different transaction.\n\nAaron van Wirdum: 00:08:01\n\nI guess technically on the consensus level, any change to a transaction makes it a new transaction, right?\nBut there's some nuance here maybe when it comes to relaying.\n\nSjors Provoost: 00:08:12\n\nWhat makes it new versus another one?\nYou could have two, if you have one input and one transaction and then another input and another transaction and those are different transactions, they don't exclude each other but the case we're interested here is when you're replacing a transaction that means that you have another transaction that spends the same input.\nOr at least one of the same inputs, so that only one of those two can exist.\nAnd then the question is, what is new and what is old?\nWell, part of that just depends on what you saw the first as a node before RBF, which would be like, if I already know a transaction, then whatever else comes in is new.\nBut that could be different for different nodes because you might receive them in different order.\nBut whether you call it another version or whether you call it new, it just depends on the interpretation of the wallet, how it wants to display it.\nSo it could, I think in Bitcoin Core, it'll put a cross through the old one and then just put the new one in its place.\n\nAaron van Wirdum: 00:09:04\n\nYeah, I guess this question sort of derives probably from our conversation about these kinds of topics where we're using terms like new and version, but in actual Bitcoin protocol, there's no such distinction, right?\n\nSjors Provoost: 00:09:21\n\nYeah, exactly.\nAt least I think not, because you have the end version field, but I think with RBF, it's just a flag.\nIt's not a number that goes up.\nThe only thing that goes up is the fee.\nSo if a wallet wants to be a little bit smart about it, it could look at which one pays the highest fee.\nAnd then that's sort of the newer one.\nThat's probably intended as the newer one.\nSo if you want to make a good wallet UI, you might want to show something that it increased the fee rather than showing two transactions.\nBut that's really just up to the wallet authors, how they want to interpret what they're seeing on the chain.\nThe blockchain doesn't really care.\nWell, the mempool doesn't really care.\nThe blockchain definitely doesn't care.\n\nAaron van Wirdum: 00:09:59\n\nYeah.\nI guess it's just way more binary.\nEither a transaction is valid or it's not.\nAnd if it's not, that can be because it's conflicting with the previous transaction.\n\nSjors Provoost: 00:10:10\n\nYeah, but then valid in the mempool depends on your mempool policy, right?\n\nAaron van Wirdum: 00:10:16\n\nAll right.\nWell, that was maybe a very confusing answer.\n\nSjors Provoost: 00:10:23\n\nIt's a good question.\nI would also recommend people, if you have questions, also ask them on Stack Overflow.\nOr Stack Exchange because you'll get better answers.\n\nAaron van Wirdum: 00:10:31\n\nLike I said, I think the question kind of derives from our conversation about it.\nAnd it doesn't really map on the actual Bitcoin protocol.\nSo that makes it a little bit hard to answer.\nBut hopefully our attempt is at least worth something.\n\nSjors Provoost: 00:10:44\n\nHow much did they pay for?\n10,000 Satoshis.\n\nAaron van Wirdum: 00:10:49\n\nAll right.\nDo you think this answer was worth 10,000 Satoshis?\n\nSjors Provoost: 00:10:52\n\nI think it was worth way more than 10,000 Satoshis.\n\nAaron van Wirdum: 00:10:56\n\nOkay, cool.\n\n## Explanation of the bug\n\nAaron van Wirdum: 00:11:57\n\nSo then we're back to the main topic, Sjors.\nHere you finally get the answer you've been waiting for.\nThere was a bug in Bitcoin Core 24.\nThat's why there was a Bitcoin Core 24.0.1 release.\nWhat was this bug?\n\nSjors Provoost: 00:12:14\n\nYeah, it was a bit of a foot gun basically.\nI don't know if foot gun is the right word.\nYou could lose a bunch of money.\nSo in Bitcoin Core when you're sending money you can either let the wallet decide automatically which of your coins to use to send the money or you can manually specify exactly which coins you want to use or some combination of both where you say well I want to pay one Bitcoin to this guy and I want to use this specific 0.3 Bitcoin coin that I have but other than that you figure it out which coins to take from the wallet.\n\nAaron van Wirdum: 00:12:44\n\nRight, when you're saying coins the technical term here is UTXOs.\nI guess people that know that know what you mean anyway.\nSo yeah, my addition doesn't really help anyone.\n\nSjors Provoost: 00:12:54\n\nNo, that's fine.\nSo the analogy is you have a wallet and there's a bunch of coins and paper notes in it and you have to pay something and you take one euro coin out of it and you say I definitely want to use this but then you have some other guy going through your wallet and deciding which other coins to use to add up to 10.\n\nAaron van Wirdum: 00:13:14\n\nWell if you want to use the analogy, sometimes when you're abroad in a country where you don't know which coins are what and you don't want to waste time, you just sort of show all your coins to the merchant and then they'll just pick.\n\nSjors Provoost: 00:13:24\n\nThey'll do the coin selection for you.\n\nAaron van Wirdum: 00:13:26\n\nExactly.\nThat happens sometimes.\n\nSjors Provoost: 00:13:27\n\nI have done that a few times.\n\nAaron van Wirdum: 00:13:28\n\nSo that would be the analogy here.\n\nSjors Provoost: 00:13:31\n\nSo anyway, there was a bug in that where you would basically select a couple of coins and then due to the bug it would use those coins twice to calculate what was going on.\n\nAaron van Wirdum: 00:13:54\n\nAh, wait, so you got a number of coins, UTXOs, and when you're manually selecting them, then for the fee calculation it would falsely assume that you selected them double?\n\nSjors Provoost: 00:14:08\n\nYeah, exactly.\nAnd for some reason the net result of that mistake is that you might be paying a very very large fee because you think you're paying say one cent of fees but actually because you've counted this 10 euros twice it somehow includes it twice.\nI don't completely understand how it happened but that was basically the nature of the bug.\nSo you'd be paying a very large fee now fortunately there is a warning system if you pay a really really high fee it will abort but there's another feature in the wallet where you say I want to pay this address and I don't care about the precise amount, I just want to send this coin or this set of coins.\nYou select the coins that you want to send over.\nSo this can be useful for privacy.\nIf you receive your salary or whatever, and that's one coin, essentially, and you want to send only your salary to an exchange and none of the other coins in your wallet, so you select your salary and you send it to the exchange and if you use that feature in combination with this bug you would lose even more money and then the warning system didn't work correctly.\nAs you notice I'm being a bit vague because the actual bug is not described very well.\nThat is the actual implication of the bug is not described very well.\nThe bug itself is described as what was wrong in the code and that's pretty obvious.\nSo there was a pretty bad way to lose some money.\nSo don't use 24.0, just use 24.0.1.\n\n## How did the bug get released?\n\nAaron van Wirdum: 00:15:38\n\nAll right.\nWell, this sounds like a bug, a glitch.\nAnd I think you mentioned, I'm still going to ask.\nSo how does this get into the code?\nWhy is this in there?\n\nSjors Provoost: 00:15:49\n\nSo this is interesting, of course, to look at what exactly went wrong here.\nSo the bug itself was like one line of code that should not be there.\nI think it was a command called break, which jumps out of a loop, and that command was a mistake.\nNow how does that get there?\nIt was part of a refactoring.\nSo basically refactoring means you take an existing piece of code that may be ugly and you rewrite the same code but prettier in a way that it doesn't change any of the behavior.\nAnd so that's good because better, cleaner, more readable code in the future will lead to fewer bugs.\nHowever, you might make a mistake replicating the original behavior and that's what happened here.\nSo I think in practice here, there were a bunch of different functions that were responsible for removing.\nSo if you take these coins that you've manually selected, then it would have to remove those from like another set of coins so that you don't select coins twice, something like that.\nAnd because the coin selection algorithm, it looks through the coins in your wallet it tries to see which coins can I add to this transaction but it shouldn't be adding coins that are already in your transaction so it kind of had to do the subtraction there and that code was doing the subtraction only once.\nI think it was only subtracting one coin that you selected, but not all of them.\nSo this is the kind of bug that you might not see if you only select one coin, you'd only see if you select two coins.\nSo it's, difficult to run into this.\nSo the code was doing 12 separate steps to remove these coins.\nAnd with the new version, it would only need two steps to remove the coin.\nSo it was cleaner, but it had the mistake in there and the mistake was not caught.\nIt wasn't caught during the code review by the people looking at it.\nThere were also no tests that failed.\nSo there was no test where this precise scenario of adding two coins, etc., etc. was there.\nBecause either could have caught it.\nSomebody could have caught it in a review or somebody, some automated test could have caught it, but it didn't.\nAnd so the way that that is fixed is, first you fix the original bug, and second, you add tests that would have caught it, so that at least the same bug could not happen again.\nThat's pretty much what happened.\nAnd the other reason it wasn't noticed is that it was only in the release and not in the master branch.\nSo that's an interesting aspect there.\n\nAaron van Wirdum: 00:18:15\n\nThe master branch is the main thing that Bitcoin Core developers work on.\nAnd once in a while, Bitcoin Core developers say, from here on out, this is the new release.\nAnd they keep working on the master branch for new features, and the new release is going to be released.\nAnd somehow this bug was only in the release.\n\nSjors Provoost: 00:18:30\n\nYes, exactly.\nBecause the bug was introduced in this refactor and then after that bug was introduced, the split to the release was made and then somewhat later on master the bug was accidentally fixed.\nNot deliberately fixed.\nAnd the way you accidentally fix something is you do another refactor and something and then you actually make another mistake because you're not replicating the original behavior.\nBecause nobody wanted that original behavior, nobody would have noticed that either.\nSo it was accidentally fixed on master and that also has to do with the odds of finding it because who is testing Bitcoin Core?\nWell, part of it is people running the master branch.\nThose are probably other Bitcoin Core developers that are just trying, snapshots off the master branch that, are not supposed to be very safe.\nIt's supposed to be correct but it's more likely to have bugs.\nBut because the bug was not in the master branch, nobody testing the master branch would have noticed this.\nOnly people testing the release branch and that might be a much smaller group of people in practice.\nAnd like we described it's not the easiest thing to trip on.\nBut if you do trip on it, it's very painful.\nSo it was definitely worth fixing.\n\nAaron van Wirdum: 00:19:33\n\nWell, there you have it.\nThat's why the new release is Bitcoin Core 24.0.1 instead of just Bitcoin Core 24.\nYou are enlightened, our dear listener.\n\n## Additional bug fixes\n\nSjors Provoost: 00:19:45\n\nYes, there are two other bugs in there too, but they're less important and in very different areas.\n\nAaron van Wirdum: 00:19:50\n\nOh, that's a kind of a depressing note to close the episode on.\n\nSjors Provoost: 00:19:54\n\nThere's always bugs.\nSo what happens is after a release, the developers pile up existing bug fixes for a future release.\nSo, there'll be a version 25.0, which will have the new master branch on it, but there'll also be a version 24.1, 24.2, which will have only sort of bug fixes in it that are important enough to put on the old releases.\n\nAaron van Wirdum: 00:20:21\n\nWait, wait, wait, wait.\nAre there still bugs in Bitcoin Core 24.0.1 as far as we know right now?\n\nSjors Provoost: 00:20:25\n\nI don't know.\n\nAaron van Wirdum: 00:20:26\n\nI thought that's what you said, but maybe I misheard.\n\nSjors Provoost: 00:20:28\n\nNo, the general process is that we'll collect bug fixes over time.\nSo maybe immediately after release, there is no known bug, or maybe there's a known bug, but there's no fix for it yet.\nBut then over time, say the next six months or a year, bugs will get fixed.\nWe'll find out there were bugs in version 24.\nAnd then you can do two things to your users.\nYou can say, tough, just download version 25 if you want that bug fixed.\nBut then they have to download all these new changes in version 25, which people don't like.\nSo there will also be version 24.1, which only fixes the bugs, but doesn't have any of the other new changes.\nThat's called backporting.\n\nAaron van Wirdum: 00:21:06\n\nSjors, I just want you to tell our listeners that Bitcoin Core 24.0.1 is clean and we're ready for the new year.\nWe're ready for 2023 with Bitcoin Core 24.0.1.\n\nSjors Provoost: 00:21:20\n\nWell, all I can tell you is that currently there is a milestone called 24.1 and it doesn't have any bugs in it.\n\nAaron van Wirdum: 00:21:27\n\nThere we go end of the episode but thank you for listening to Bitcoin Explained\n\n",
    "body_type": "markdown",
    "created_at": "2022-12-29T00:00:00.000Z",
    "domain": "https://btctranscripts.com/",
    "url": "https://btctranscripts.com/bitcoin-explained/bitcoin-core-v24-bug",
    "categories": [
        "podcast"
    ],
    "tags": [
        "bitcoin-core"
    ],
    "media": "https://www.youtube.com/watch?v=66W6_AVSxME",
    "authors": [
        "Sjors Provoost",
        "Aaron van Wirdum"
    ],
    "indexed_at": "2024-03-21T16:33:36.093Z",
    "transcript_by": "jeffreyweier via review.btctranscripts.com",
    "summary": "In a recent episode of Bitcoin Explained, hosted by Aaron van Wirdum and featuring Sjors Provoost, a deep dive was taken into the technical and community aspects of Bitcoin, encompassing everything from book tours to bug discoveries in Bitcoin Core software. The episode began with Provoost recounting his experiences while on tour promoting his book, \"Bitcoin: A Work in Progress\". He shared insights into the challenges of marketing a niche publication within various cities in the United States and through appearances on platforms like Marty Bent's podcast, Tales from the Crypt (TFTC), highlighting unexpected hurdles such as Amazon's indexing errors.\n\nThe conversation transitioned to a critical discussion about the significant bug discovered in Bitcoin Core 24.0, which prompted an expedited release of version 24.0.1. This bug, originating from a flaw in the coin selection mechanism, could inadvertently cause users to pay much higher transaction fees than necessary. Provoost explained that this issue arose when Unspent Transaction Outputs (UTXOs) were mistakenly counted twice during fee calculation due to a single line of errant code introduced during refactoring. This error not only inflated fee estimates but also risked bypassing built-in alerts for high fees, particularly affecting those who manually select UTXOs for privacy considerations.\n\nFurther exploration into how such a critical bug was missed highlighted the complexities of software development. The absence of specific tests for this scenario and oversight during code reviews underscored the challenges faced in maintaining robust software platforms like Bitcoin Core. Interestingly, it was noted that this bug was unique to the stable release of Bitcoin Core 24 and had already been accidentally fixed in the master branch through unrelated refactoring, emphasizing the serendipitous nature of some software solutions.\n\nAdditionally, the episode addressed a listener's query about Replace-By-Fee (RBF) transactions, clarifying how new transactions are distinguished from mere updates and shedding light on the roles of transaction inputs, mempool policies, and wallet UI design in ensuring transaction validity and replacement. This part of the discussion aimed to demystify certain protocol aspects for the audience, providing a clearer understanding of Bitcoin's operational intricacies.\n\nProvoost and van Wirdum also touched upon the general process of managing bugs in software development, highlighting the practice of backporting fixes to ensure users have access to secure and stable versions without needing to adopt new features prematurely. This approach reinforces the developers' commitment to security and stability across the board.\n\nBy weaving together personal anecdotes with detailed technical discussions, the episode offered a comprehensive view of the current state of Bitcoin development and community engagement. From the tangible efforts of promoting a book on Bitcoin's ongoing evolution to addressing the abstract complexities of software bugs and protocol nuances, the hosts successfully covered a broad spectrum of topics. This narrative not only illuminated the multifaceted nature of the Bitcoin ecosystem but also underscored the continuous dedication required to foster its growth and ensure its integrity."
}