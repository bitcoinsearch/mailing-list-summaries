{
    "id": "bitcointranscripts+bitcoin-explained+hardware-wallet-integration-in-bitcoin-core-and-hwi",
    "title": "Hardware Wallet Integration in Bitcoin Core and HWI",
    "body_formatted": "{\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:46\"}, {\"type\":\"paragraph\",\"text\":\"Live from Utrecht this is The Van Wirdum Sjorsnado.\\nHello!\\nAre you running the BIP8 True independent client yet?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:56\"}, {\"type\":\"paragraph\",\"text\":\"Negative.\\nI did not even know there was one.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:59\"}, {\"type\":\"paragraph\",\"text\":\"One has been launched, started.\\nI don't think it's actually a client yet, a project has started.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:05\"}, {\"type\":\"paragraph\",\"text\":\"Okay, a project has started, it's not a binary or a code that you can compile.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:09\"}, {\"type\":\"paragraph\",\"text\":\"But I did see you were reviewing the BIP 8 code a little bit.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:16\"}, {\"type\":\"paragraph\",\"text\":\"Yes, I mean it's a pull request that has a bunch of changes in it.\\nA lot of them are totally not controversial.\\nSo I'm just working on it from top to bottom.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:26\"}, {\"type\":\"paragraph\",\"text\":\"Just code review?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:28\"}, {\"type\":\"paragraph\",\"text\":\"Code review, and I've also started my own pull request where I've taken a couple of commits from that just to split it up.\\nMakes everybody's review life easier.\\nIf everybody's talking about `LOT=True` or `LOT=False` on a pull request but there's a lot of nitty-gritty stuff that you really don't want to screw up just because you're talking about one little thing.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:46\"}, {\"type\":\"paragraph\",\"text\":\"That's good.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:48\"}, {\"type\":\"paragraph\",\"text\":\"So that's all good and we'll see where that ends.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:50\"}, {\"type\":\"paragraph\",\"text\":\"And I think you were working on something else as well and that's actually what this episode is going to be about.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:55\"}, {\"type\":\"paragraph\",\"text\":\"But by the way, if there are independent clients, just be sure to listen to our earlier episodes about open source and deterministic builds and all the things that can go wrong there and then do it right.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:03:07\"}, {\"type\":\"paragraph\",\"text\":\"Other project, other thing, the other thing you're working on.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:03:10\"}, {\"type\":\"paragraph\",\"text\":\"Hardware wallet stuff.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:03:11\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, you're working on, not just you, but I think you're one of the core devs working on hardware wallet integration for Bitcoin Core, is that correct?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:03:21\"}, {\"type\":\"paragraph\",\"text\":\"Yes, right.\\nIt's me, it's Andrew Chow, Instagibbs, as he likes to call himself on GitHub.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:03:27\"}, {\"type\":\"paragraph\",\"text\":\"And you've made some good progress.\\nThere was a new merge this week.\\nAnd we're basically going to discuss hardware integration in Bitcoin Core in a general sense in this episode, I think.\\nSo basically your top specialty maybe.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:03:42\"}, {\"type\":\"paragraph\",\"text\":\"Definitely one of my favorite topics.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:03:45\"}, {\"type\":\"paragraph\",\"text\":\"You wanted to refer to some previous episodes where we discussed some of this stuff, I think?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:03:49\"}, {\"type\":\"paragraph\",\"text\":\"We talked in the first episode about hardware wallets, sort of the security things you need to worry about when it comes to change and etc.\\nSo that might be a nice refresher.\\nApologies for the atrocious audio in the first episode there was a literal tornado.\\nI think in episode 7 we explained to Peter McCormack but also to other listeners what an XPUB is which is quite relevant when it comes to hardware wallets because an XPUB represents like a whole bunch of addresses.\\nAnd hardware wallets like to communicate that.\\nAnd then there was episode 21.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:04:28\"}, {\"type\":\"paragraph\",\"text\":\"You put it in a show note, so it has some relevancy.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:04:31\"}, {\"type\":\"paragraph\",\"text\":\"That's right.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:04:32\"}, {\"type\":\"paragraph\",\"text\":\"Okay, where are we with hardware wallet integration for Bitcoin Core?\\nLet's just start from the top.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:04:38\"}, {\"type\":\"paragraph\",\"text\":\"There was a lot of things that needed to happen and mainly that which has been done a while ago is to rewrite the entire wallet that Bitcoin Core comes with because it was atrocious.\\nAnd that's mostly been done by Andrew Chow.\\nI've done a lot of testing and reviewing for that.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:04:56\"}, {\"type\":\"paragraph\",\"text\":\"What was the problem?\\nWhat was so bad about it?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:04:58\"}, {\"type\":\"paragraph\",\"text\":\"It was started by Satoshi and it just had pay to public key addresses in it and then pay to public key hash I guess was added and then there was other things added and then segwit was added and it just became an unmaintainable mess.\\nSo all that unmaintainable mess has been put in a box and that box has been abstracted in a way that you can create another box that has the same functionality but the implementation can be rewritten from scratch and so that's kind of what we did.\\nWe put the existing stuff in a box because we don't want to understand it anymore.\\nAnd we created a new box to replace it with the same form.\\nAnd that uses descriptors.\\nAnd I guess we'll dedicate some other episode in explaining what output descriptors are.\\nBut they're kind of a nice, elegant way to describe how to derive your addresses, for example, from the seed.\\nSo it would say okay take the seed and then take the first account and then here's an XPUB and then you know take these address derivations and then I want you to make it a native SegWit address.\\nYou can express that in one string and that gets just to the hardware wallet part is because a hardware wallet can then spit out that information so the hardware wallet can tell you okay these are the addresses I have and then you just import it and when your hardware wallet is disconnected you can you know exactly which addresses the hardware wallet has and you only need to connect when you want to sign something.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:06:24\"}, {\"type\":\"paragraph\",\"text\":\"Would the hardware wallet in that case spit out the XPUB?\\nIs that why you mentioned XPUB just now?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:06:30\"}, {\"type\":\"paragraph\",\"text\":\"Actually currently indeed it spits out XPUBs.\\nIdeally it would spit out these descriptors, because a hardware wallet might not understand what taproot is, or it might not understand even what segwit is.\\nAnd if it just gives you an XPUB, well, that XPUB doesn't really tell you anything.\\nIt's just a way to derive addresses, but it doesn't tell you what kind of things it can do.\\nSo you really want some way for a hardware wallet to tell it what it's capable of.\\nBut for now, we've avoided having to think about that using a project called HWI.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:05\"}, {\"type\":\"paragraph\",\"text\":\"I've seen it a lot, HWI what does it stand for?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:07:08\"}, {\"type\":\"paragraph\",\"text\":\"Hardware Wallet Integration.\\nOr interface I guess.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:12\"}, {\"type\":\"paragraph\",\"text\":\"Which one is it Sjors?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:07:13\"}, {\"type\":\"paragraph\",\"text\":\"I don't care I think it's interface.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:16\"}, {\"type\":\"paragraph\",\"text\":\"Okay.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:07:17\"}, {\"type\":\"paragraph\",\"text\":\"So that is a Python library.\\nAnd again, mostly by Andrew Chow.\\nWhat he did is, because all these hardware wallets, like the Trezor and the Ledger and the KeepKey and the Coldcard, et cetera, they all have their own little Python libraries that you can find on GitHub because it's all open source.\\nBut they're all different.\\nThey all have different ways to display an address.\\nThey have different ways to get an XPUB.\\nThey have different ways to sign a transaction.\\nWhat he did is he combined all these drivers, stripped all the shit coins out of them, because some of them would do Ethereum things and we don't want Ethereum code.\\nAnd then basically put that all together in one little library and made it consistent.\\nAs far as the user is concerned, you tell HWI, enumerate, and it will give you the list of all the connected hardware wallets using all these different drivers to find them.\\nAnd if you say, get descriptors, then it will give you a list of descriptors that describe exactly what keys, what addresses the hardware wallet has, and it does all the magic of fetching XPUBs using whatever method is necessary.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:08:22\"}, {\"type\":\"paragraph\",\"text\":\"So could I describe HWI as sort of like a meta protocol that communicates with all of the different hardware wallet protocols, I'd say?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:08:34\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, I guess.\\nAnother way to say it is that HWI is a tool, but it has a way of communicating, you have a way of giving it commands, and that is a protocol, essentially.\\nSo somebody else could make a tool that is behaves the same as HWI but is you know just for their own hardware wallet so hardware wallet manufacturer you know doesn't have to let people use HWI they could make their own driver that just behaves the same way as HWI and then Bitcoin Core as we'll discuss next we'll know how to talk to it.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:09:06\"}, {\"type\":\"paragraph\",\"text\":\"If someone brings a new hardware wallet to the market which does its own thing again then HWI will be updated potentially to be able to communicate with that as well?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:09:18\"}, {\"type\":\"paragraph\",\"text\":\"Depending on the enthusiasm of the maintainers of HWI, they might go out and find that driver and include it.\\nIf the enthusiasm is slightly less, then the manufacturer or a fan, a user, can go to HWI, make a pull request, and say, \\\"Hey, here's the support for this new hardware wallet\\\".\\nAnd then recently there were some guidelines merged for that.\\nSo the hardware wallet has to be open source.\\nAt least the firmware that runs on it has to be open source, with the only exception being if there's a secure element in it that's under NDA, that's okay.\\nAnd it has to be sort of what, maintainable, the software.\\nBut then, yeah, anybody can just make support, add support for any other hardware wallet to HWI.\\nBut again, it's not necessary.\\nThe hardware manufacturer could also make their own software that just speaks the same language as HWI.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:10:14\"}, {\"type\":\"paragraph\",\"text\":\"And HWI was already merged into Bitcoin Core?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:10:18\"}, {\"type\":\"paragraph\",\"text\":\"HWI is a separate program that's in the Bitcoin, not in the Bitcoin Core repository, but there is a GitHub organization called Bitcoin Core, which has a bunch of repositories, and that includes HWI.\\nSo it's separate from Bitcoin Core because it's all this Python stuff and USB drivers.\\nSo I guess we don't want to put that in the Bitcoin source code because that's too scary with all the dependencies.\\nBut it is maintained by Bitcoin Core people.\\nSo it's a trust slightly less or I don't know how to put it.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:10:49\"}, {\"type\":\"paragraph\",\"text\":\"HWI is a separate program essentially and it needs to be installed separately if you want to use it.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:11:00\"}, {\"type\":\"paragraph\",\"text\":\"Exactly, you can download it separately, install it separately, or just put it somewhere.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:11:04\"}, {\"type\":\"paragraph\",\"text\":\"It's not in the Bitcoin Core client that I'm running at home?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:11:09\"}, {\"type\":\"paragraph\",\"text\":\"No, because in order for that to happen, first of all, it would probably have to be written in C++ or in Rust or something like that.\\nAnd all the USB drivers would have to be inspected with a tooth comb, and that'll take forever.\\nIt's something you install separately, and there is some risk, obviously, with just running that software.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:11:28\"}, {\"type\":\"paragraph\",\"text\":\"This is not new, is it?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:11:31\"}, {\"type\":\"paragraph\",\"text\":\"That's right.\\nHWI has been around for at least a year.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:11:40\"}, {\"type\":\"paragraph\",\"text\":\"What was merged last week?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:11:42\"}, {\"type\":\"paragraph\",\"text\":\"Before last week, if you wanted to use HWI with Bitcoin Core you can do that but you have to execute a bunch of commands manually so for example if you wanted to sign a transaction you would tell Bitcoin Core okay I'd like to create a PSBT so we explained PSBT in an earlier episode.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:11:59\"}, {\"type\":\"paragraph\",\"text\":\"Yeah partially signed Bitcoin transactions.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:12:01\"}, {\"type\":\"paragraph\",\"text\":\"Exactly, you tell Bitcoin Core okay give me a PSBT, a partially signed transaction, in this case actually an unsigned transaction probably and to the destination and then you would copy paste the result and you'd say, okay, HWI, please sign this thing.\\nAnd then HWI would do its thing.\\nAnd then you get a result and you copy paste that back into Bitcoin Core and say, \\\"Bitcoin Core, please process this thing and send this thing\\\".\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:12:24\"}, {\"type\":\"paragraph\",\"text\":\"You're running both programs, the Bitcoin Core program and the HWI program, and then you're manually copy pasting data from one to the other.\\nUsing your hardware wallet on HWI, getting some signature and then copy pasting it to Bitcoin Core, and that's how it would work.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:12:42\"}, {\"type\":\"paragraph\",\"text\":\"Exactly.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:12:43\"}, {\"type\":\"paragraph\",\"text\":\"And you're doing this all in the command line, I assume?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:12:46\"}, {\"type\":\"paragraph\",\"text\":\"Yes, That's right.\\nThere was already some help with that because HWI also comes with a little graphical program where you can actually click buttons to make it do these things, but you'd still be copy pasting back and forth with Bitcoin Core.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:12:58\"}, {\"type\":\"paragraph\",\"text\":\"I love buttons.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:13:00\"}, {\"type\":\"paragraph\",\"text\":\"What is new now is that Bitcoin Core now knows how to communicate with HWI.\\nStill from the command line, but it still gets easier.\\nBecause now when you want to send coins, you just tell Bitcoin Core, send, and then the destination and the amount.\\nAnd it will know that it needs the hardware wallet.\\nSo it will say, \\\"Hello, HWI, please do these things\\\".\\nAnd it will wait for the results.\\nAnd it will process the results.\\nAnd it will send the transaction.\\nSo you go from four back and forths with copy-pasting to just send.\\nAnd it works.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:13:34\"}, {\"type\":\"paragraph\",\"text\":\"No more copy-pasting.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:13:35\"}, {\"type\":\"paragraph\",\"text\":\"All you need to do is tell Bitcoin Core where HWI lives, so where on your computer you installed it, and then it will just call it for you.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:13:43\"}, {\"type\":\"paragraph\",\"text\":\"If you know how to work the command line this is pretty big improvement I guess.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:13:49\"}, {\"type\":\"paragraph\",\"text\":\"This is significantly less tedious.\\nThe approaches like with the manual back and forth and with this it's much easier.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:13:56\"}, {\"type\":\"paragraph\",\"text\":\"But you do still need to use the command line.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:13:59\"}, {\"type\":\"paragraph\",\"text\":\"In Bitcoin Core you have this window, the debug console, which is essentially a little command line.\\nBut you cannot do it in the user interface, but you can actually open this window console and then you can just type send, and it'll work.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:15\"}, {\"type\":\"paragraph\",\"text\":\"This was merged into Bitcoin Core, which will be released in, I guess, it will probably be Bitcoin Core 22?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:23\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, Bitcoin Core 22 should be out in fall.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:27\"}, {\"type\":\"paragraph\",\"text\":\"Might it also come into a minor release?\\nI guess that might depend on taproot activation stuff.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:32\"}, {\"type\":\"paragraph\",\"text\":\"This is not the kind of stuff that would be backported.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:35\"}, {\"type\":\"paragraph\",\"text\":\"So it's definitely gonna be a major release is that what you're saying?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:38\"}, {\"type\":\"paragraph\",\"text\":\"Because in order for things to backport has to be simple enough or like a really critical bug fix but usually the only things that are backported are bug fixes and soft forks but not entire new features.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:51\"}, {\"type\":\"paragraph\",\"text\":\"This will be in the upcoming Bitcoin Core 22 release.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:55\"}, {\"type\":\"paragraph\",\"text\":\"Or if you compile the master branch yourself.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:59\"}, {\"type\":\"paragraph\",\"text\":\"The step after that I would assume would be GUI support.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:15:04\"}, {\"type\":\"paragraph\",\"text\":\"GUI support that's right, because having to type commands is kind of annoying.\\nSo I have a pull request open that builds on top of this, and it adds a couple of things.\\nIt adds something to the settings screen.\\nSo there is a settings screen in Bitcoin Core.\\nAnd there you tell it where HWI lives.\\nYou don't have to give that to the command line.\\nYou just copy paste that file directory.\\nAnd then when you go to the menu to create a wallet, if you have this HWI path correctly, and you have a hardware wallet inside your computer and it's like unlocked if you create a new wallet it'll detect it so it'll say \\\"Oh would you like to use this ledger X or whatever\\\"\\nand then you click next and it will automatically pull the keys from the device and your wallet will just look like any other wallet.\\nYou can click on receive address, you'll see an address.\\nAnd then the other feature is that if you click on a receive address, so in Bitcoin Core, you click on, get me a new address, then it kind of makes a little mini address book and you can right click on that, I believe, and then click on verify.\\nThat's a new button.\\nAnd the verify button, again, if the device is plugged in, will automatically show the address on the hardware wallet.\\nYou can check that it's real.\\nAnd then the third thing that's added is you can now just send Bitcoin as you would in Bitcoin Core.\\nJust click on send and type the destination, set the fee area.\\nAnd when you hit send, if the device is plugged in, it'll show up on the device and you click on approve and it just sends it.\\nNow the downside is that if anything does not go exactly right as I just described it, it will probably crash.\\nSo it's still a work in progress.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:16:54\"}, {\"type\":\"paragraph\",\"text\":\"Would it work with all of Bitcoin Core's current futures?\\nThat would be for example be RBF I guess and sent to many or whatever it's called, batching, these kinds of things.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:17:05\"}, {\"type\":\"paragraph\",\"text\":\"If in the graphical interface you can send a transaction, you can send it to like 10 different recipients if you want to, that'll work.\\nI believe RBF I have not implemented because internally that does a few other things.\\nYou can try.\\nBut it would be trivial to add that as a follow-up.\\nBut I try to keep these pull requests as minimum as possible.\\nThese are like three features that I think are really at least good enough.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:17:30\"}, {\"type\":\"paragraph\",\"text\":\"Are these things possible now?\\nAre we just talking about the UI?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:17:35\"}, {\"type\":\"paragraph\",\"text\":\"This is the GUI pull request.\\nRight now you can do all these things with the command line, but they'll work in the GUI, which is very nice, especially coin selection.\\nSo in the command line, typing send an address and an amount that's not too bad.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:17:50\"}, {\"type\":\"paragraph\",\"text\":\"Other good example, coin selection.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:17:52\"}, {\"type\":\"paragraph\",\"text\":\"But the coin selection is only practical in the GUI so you can actually like decide which coins to spend and having coin selection with hardware wallets is very nice.\\nIt does work but it only works if it doesn't crash.\\nThat just needs more review and requires me to fix things and maybe make it asynchronous so the screen doesn't block while the hardware wallet is doing something.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:18:16\"}, {\"type\":\"paragraph\",\"text\":\"This will probably not be ready before Bitcoin Core 22.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:18:20\"}, {\"type\":\"paragraph\",\"text\":\"I'm bullish.\\nI think it might be possible.\\nIt depends on the review because I have a couple things that I want to improve about it but I tend to get more motivated when people start screaming at me in the reviews.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:18:31\"}, {\"type\":\"paragraph\",\"text\":\"I can scream at you in the reviews.\\nI won't say anything useful, but I can scream at you.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:18:36\"}, {\"type\":\"paragraph\",\"text\":\"You do have to actually test it.\\nDon't just come in from Twitter and comment on it.\\nBut if you actually run the code and something goes wrong, then I'll try to help or fix the bug.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:18:45\"}, {\"type\":\"paragraph\",\"text\":\"What about multi-sig?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:18:53\"}, {\"type\":\"paragraph\",\"text\":\"Everything I've described is for a single-sig.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:18:57\"}, {\"type\":\"paragraph\",\"text\":\"If you'd want to use three hardware wallets, and then two out of three, stuff like that.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:19:04\"}, {\"type\":\"paragraph\",\"text\":\"Eventually I'd like to see something similar to how Electrum, just let you make a pie chart.\\nNone of that is there yet, not even in the command line.\\nIt is possible, I think I once made an experimental pull request that did do multi-sig at least from the command line.\\nBut there's a lot of moving parts.\\nI'd like to get all the single-sig stuff merged.\\nThen we'll move on to multi-sig.\\nBitcoin Core multi-sig with hardware wallets will be a while.\\nThere's another project, is called Specter.\\nSpecter is also a hardware wallet but in this case what we're talking about is the Specter desktop software, another Python project.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:19:49\"}, {\"type\":\"paragraph\",\"text\":\"There's a device, a Specter device?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:19:51\"}, {\"type\":\"paragraph\",\"text\":\"Yes.\\nIt's very cool I should have brought it with me, but it's a do-it-yourself hardware wallet.\\nYou can actually order the components from any manufacturer that sort of makes these Arduino-like or smartphone-like things.\\nAnd you take a QR scanner and you solder it on it.\\nThis is by Stepan Snigirev.\\nHe's been working on that.\\nHe's also been working, I believe, on support for actual secure elements, so that you can buy your own secure element from like a manufacturer that makes a lot of these general-purpose secure elements so they might not even know that you're using it for Bitcoin purposes which is very nice supply chain wise and you don't have to trust them.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:20:33\"}, {\"type\":\"paragraph\",\"text\":\"That's the device.\\nWe were actually going to talk about the wallet, I guess, the software.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:20:37\"}, {\"type\":\"paragraph\",\"text\":\"Because I guess in order for them to develop that device, they wanted to use that inside a multi-sig setup.\\nAnd so they spent a lot of time building a multi-sig system.\\nAnd that is called the Specter Desktop.\\nWhat it does is, again, it's a program you download and it opens on your computer.\\nAnd then it says, \\\"hey, where's Bitcoin Core?\\\"\\nOr hopefully it finds it.\\nAnd then if it finds Bitcoin Core, it says, \\\"Bitcoin Core is synced, tt's got all the blocks\\\".\\nDo you have any devices you'd like to configure?\\nAnd then you say, OK, yeah, I have a Ledger wallet, and I have a Trezor wallet, and whatever.\\nYou add those devices one by one by just plugging it in.\\nAnd under the hood, that uses HWI.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:21:18\"}, {\"type\":\"paragraph\",\"text\":\"Specter uses HWI as well.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:21:21\"}, {\"type\":\"paragraph\",\"text\":\"It just comes bundled with it.\\nSo it knows how to detect them it knows how to add them.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:21:25\"}, {\"type\":\"paragraph\",\"text\":\"So you need to install HWI as well?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:21:27\"}, {\"type\":\"paragraph\",\"text\":\"No I think Specter just has.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:21:29\"}, {\"type\":\"paragraph\",\"text\":\"It includes it.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:21:31\"}, {\"type\":\"paragraph\",\"text\":\"That's the trade-off right so in Bitcoin Core we don't just want to add HWI, but in Specter, they do.\\nAnd then basically you add devices and then you say I'd like to configure a wallet.\\nAnd the terminology is a bit confusing.\\nThat's why I used the word device, or the device because the device is also a wallet.\\nWe create a wallet and you say I want to combine the Trezor and the Ledger and I want a two of two.\\nOr one of two.\\nAnd then it says I'm going to create a wallet now.\\nAnd it creates that wallet in Bitcoin core so that means that Specter does not have to maintain like all the code necessary to create a whole wallet from scratch because that's a lot of work it lets Bitcoin core do that it also means it can let Bitcoin Core do all the coin selection magic.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:22:17\"}, {\"type\":\"paragraph\",\"text\":\"And this uses the GUI of Bitcoin Core?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:22:20\"}, {\"type\":\"paragraph\",\"text\":\"No, it's its own GUI, which is basically just a little web server on your own computer, kind of like how a modem looks if you log in to the admin panel.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:22:29\"}, {\"type\":\"paragraph\",\"text\":\"It uses Bitcoin Core as a back end, but you're actually looking at Specter, which also includes HWI.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:22:39\"}, {\"type\":\"paragraph\",\"text\":\"And I guess one scenario where this might be nice is if you run Bitcoin Core, not on your computer, but on a Raspberry Pi somewhere, which might not have a screen, or at least you don't want to use the screen and you could imagine remote connecting to your Raspberry Pi with Bitcoin Core running on it and you're not worried because your keys are not on Bitcoin Core it's just the read-only stuff is on Bitcoin Core.\\nSo your Raspberry Pi in your living room with no security is not really a threat but it is a full node and you can use it that way.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:23:11\"}, {\"type\":\"paragraph\",\"text\":\"That's one way.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:23:12\"}, {\"type\":\"paragraph\",\"text\":\"It looks pretty slick it's very easy to use in my experience once you get it running.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:23:15\"}, {\"type\":\"paragraph\",\"text\":\"That's one way to use a hardware wallet in combination with Bitcoin Core already, including multi-sig solutions.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:23:25\"}, {\"type\":\"paragraph\",\"text\":\"Especially the latter.\\nI guess soon, TM, you'll be able to use Bitcoin Core with single-sig.\\nAnd then I would say the fewer moving parts you have, the better.\\nNothing against Specter, but if you don't need it, then don't run additional code.\\nBut for multi-SIG, it's great.\\nAnd to get that kind of UI, especially in Bitcoin Core, that's going to take a while.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:23:45\"}, {\"type\":\"paragraph\",\"text\":\"There are a couple of other solutions like this.\\nYou already mentioned Electrum, which you could of course also run in combination with your personal Electrum server, in which case you're also using full node security.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:23:57\"}, {\"type\":\"paragraph\",\"text\":\"Although I'd have to see, I don't know if Electrum Personal Server also has support for multi-sig, but in theory that could be added.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:24:07\"}, {\"type\":\"paragraph\",\"text\":\"There's something called a Lily Wallet.\\nI don't know if that uses full node security, I've never used it.\\nIt looks very slick, I've seen that.\\nBut that also allows for hardware wallets multi-setup stuff I think but I could be wrong I think that's spv light client type of wallet though.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:24:25\"}, {\"type\":\"paragraph\",\"text\":\"I don't know.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:24:26\"}, {\"type\":\"paragraph\",\"text\":\"I think there's also one called caravan.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:24:29\"}, {\"type\":\"paragraph\",\"text\":\"Caravan I've heard of that.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:24:30\"}, {\"type\":\"paragraph\",\"text\":\"I don't know much about caravan, I know it does something similar.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:24:35\"}, {\"type\":\"paragraph\",\"text\":\"That's what I heard too and then there is Casa, I don't know how they do it, there's all sorts of ways.\\nI imagine in the future this is gonna get better and better.\\nWe talked about very simple multi-sig setups, but imagine a scenario where we have not just taproot.\\nWe have taproot.\\nAnd then we have Miniscript, which we talked about in an earlier episode, which allows you to make far more complicated setups.\\nNow you can imagine instead of a two or three setting where you have two hardware wallets, one you keep in a vault somewhere, one you keep wherever you are, and then the third key quote unquote is not actually a single key, it's not a single device.\\nIt is some sort of bank, some sort of bank that helps you.\\nAnd they internally use some extremely complicated setup, which you don't have to understand.\\nFrom your point of view, it just looks like one signature.\\nIn reality, it's very complicated.\\nAnd it can all be communicated through Miniscript and then you do something like Specter so you and your site can make sure everything works and only when you need the bank then you need to ask them for a signature but other than that all just works from your end.\\nEven though they have some super complicated rules set, for you it's just a third party and you don't care.\\nSo I'm very bullish on the future but this is gonna take a while.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:25:56\"}, {\"type\":\"paragraph\",\"text\":\"Well Sjors, thanks for the update.\\nThis is where we are with hardware wallet integration in Bitcoin Core now and soon TM.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:26:04\"}, {\"type\":\"paragraph\",\"text\":\"That's right, anything else?\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:26:06\"}, {\"type\":\"paragraph\",\"text\":\"I think that's it for me.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:26:07\"}, {\"type\":\"paragraph\",\"text\":\"Alright.\\nThank you for listening The Van Wirdum Sjorsnado.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:26:10\"}, {\"type\":\"paragraph\",\"text\":\"There you go.\"}",
    "body": "Aaron van Wirdum: 00:01:46\n\nLive from Utrecht this is The Van Wirdum Sjorsnado.\nHello!\nAre you running the BIP8 True independent client yet?\n\nSjors Provoost: 00:01:56\n\nNegative.\nI did not even know there was one.\n\nAaron van Wirdum: 00:01:59\n\nOne has been launched, started.\nI don't think it's actually a client yet, a project has started.\n\nSjors Provoost: 00:02:05\n\nOkay, a project has started, it's not a binary or a code that you can compile.\n\nAaron van Wirdum: 00:02:09\n\nBut I did see you were reviewing the BIP 8 code a little bit.\n\nSjors Provoost: 00:02:16\n\nYes, I mean it's a pull request that has a bunch of changes in it.\nA lot of them are totally not controversial.\nSo I'm just working on it from top to bottom.\n\nAaron van Wirdum: 00:02:26\n\nJust code review?\n\nSjors Provoost: 00:02:28\n\nCode review, and I've also started my own pull request where I've taken a couple of commits from that just to split it up.\nMakes everybody's review life easier.\nIf everybody's talking about `LOT=True` or `LOT=False` on a pull request but there's a lot of nitty-gritty stuff that you really don't want to screw up just because you're talking about one little thing.\n\nAaron van Wirdum: 00:02:46\n\nThat's good.\n\nSjors Provoost: 00:02:48\n\nSo that's all good and we'll see where that ends.\n\nAaron van Wirdum: 00:02:50\n\nAnd I think you were working on something else as well and that's actually what this episode is going to be about.\n\nSjors Provoost: 00:02:55\n\nBut by the way, if there are independent clients, just be sure to listen to our earlier episodes about open source and deterministic builds and all the things that can go wrong there and then do it right.\n\nAaron van Wirdum: 00:03:07\n\nOther project, other thing, the other thing you're working on.\n\nSjors Provoost: 00:03:10\n\nHardware wallet stuff.\n\nAaron van Wirdum: 00:03:11\n\nYeah, you're working on, not just you, but I think you're one of the core devs working on hardware wallet integration for Bitcoin Core, is that correct?\n\nSjors Provoost: 00:03:21\n\nYes, right.\nIt's me, it's Andrew Chow, Instagibbs, as he likes to call himself on GitHub.\n\nAaron van Wirdum: 00:03:27\n\nAnd you've made some good progress.\nThere was a new merge this week.\nAnd we're basically going to discuss hardware integration in Bitcoin Core in a general sense in this episode, I think.\nSo basically your top specialty maybe.\n\nSjors Provoost: 00:03:42\n\nDefinitely one of my favorite topics.\n\nAaron van Wirdum: 00:03:45\n\nYou wanted to refer to some previous episodes where we discussed some of this stuff, I think?\n\nSjors Provoost: 00:03:49\n\nWe talked in the first episode about hardware wallets, sort of the security things you need to worry about when it comes to change and etc.\nSo that might be a nice refresher.\nApologies for the atrocious audio in the first episode there was a literal tornado.\nI think in episode 7 we explained to Peter McCormack but also to other listeners what an XPUB is which is quite relevant when it comes to hardware wallets because an XPUB represents like a whole bunch of addresses.\nAnd hardware wallets like to communicate that.\nAnd then there was episode 21.\n\nAaron van Wirdum: 00:04:28\n\nYou put it in a show note, so it has some relevancy.\n\nSjors Provoost: 00:04:31\n\nThat's right.\n\nAaron van Wirdum: 00:04:32\n\nOkay, where are we with hardware wallet integration for Bitcoin Core?\nLet's just start from the top.\n\nSjors Provoost: 00:04:38\n\nThere was a lot of things that needed to happen and mainly that which has been done a while ago is to rewrite the entire wallet that Bitcoin Core comes with because it was atrocious.\nAnd that's mostly been done by Andrew Chow.\nI've done a lot of testing and reviewing for that.\n\nAaron van Wirdum: 00:04:56\n\nWhat was the problem?\nWhat was so bad about it?\n\nSjors Provoost: 00:04:58\n\nIt was started by Satoshi and it just had pay to public key addresses in it and then pay to public key hash I guess was added and then there was other things added and then segwit was added and it just became an unmaintainable mess.\nSo all that unmaintainable mess has been put in a box and that box has been abstracted in a way that you can create another box that has the same functionality but the implementation can be rewritten from scratch and so that's kind of what we did.\nWe put the existing stuff in a box because we don't want to understand it anymore.\nAnd we created a new box to replace it with the same form.\nAnd that uses descriptors.\nAnd I guess we'll dedicate some other episode in explaining what output descriptors are.\nBut they're kind of a nice, elegant way to describe how to derive your addresses, for example, from the seed.\nSo it would say okay take the seed and then take the first account and then here's an XPUB and then you know take these address derivations and then I want you to make it a native SegWit address.\nYou can express that in one string and that gets just to the hardware wallet part is because a hardware wallet can then spit out that information so the hardware wallet can tell you okay these are the addresses I have and then you just import it and when your hardware wallet is disconnected you can you know exactly which addresses the hardware wallet has and you only need to connect when you want to sign something.\n\nAaron van Wirdum: 00:06:24\n\nWould the hardware wallet in that case spit out the XPUB?\nIs that why you mentioned XPUB just now?\n\nSjors Provoost: 00:06:30\n\nActually currently indeed it spits out XPUBs.\nIdeally it would spit out these descriptors, because a hardware wallet might not understand what taproot is, or it might not understand even what segwit is.\nAnd if it just gives you an XPUB, well, that XPUB doesn't really tell you anything.\nIt's just a way to derive addresses, but it doesn't tell you what kind of things it can do.\nSo you really want some way for a hardware wallet to tell it what it's capable of.\nBut for now, we've avoided having to think about that using a project called HWI.\n\nAaron van Wirdum: 00:07:05\n\nI've seen it a lot, HWI what does it stand for?\n\nSjors Provoost: 00:07:08\n\nHardware Wallet Integration.\nOr interface I guess.\n\nAaron van Wirdum: 00:07:12\n\nWhich one is it Sjors?\n\nSjors Provoost: 00:07:13\n\nI don't care I think it's interface.\n\nAaron van Wirdum: 00:07:16\n\nOkay.\n\nSjors Provoost: 00:07:17\n\nSo that is a Python library.\nAnd again, mostly by Andrew Chow.\nWhat he did is, because all these hardware wallets, like the Trezor and the Ledger and the KeepKey and the Coldcard, et cetera, they all have their own little Python libraries that you can find on GitHub because it's all open source.\nBut they're all different.\nThey all have different ways to display an address.\nThey have different ways to get an XPUB.\nThey have different ways to sign a transaction.\nWhat he did is he combined all these drivers, stripped all the shit coins out of them, because some of them would do Ethereum things and we don't want Ethereum code.\nAnd then basically put that all together in one little library and made it consistent.\nAs far as the user is concerned, you tell HWI, enumerate, and it will give you the list of all the connected hardware wallets using all these different drivers to find them.\nAnd if you say, get descriptors, then it will give you a list of descriptors that describe exactly what keys, what addresses the hardware wallet has, and it does all the magic of fetching XPUBs using whatever method is necessary.\n\nAaron van Wirdum: 00:08:22\n\nSo could I describe HWI as sort of like a meta protocol that communicates with all of the different hardware wallet protocols, I'd say?\n\nSjors Provoost: 00:08:34\n\nYeah, I guess.\nAnother way to say it is that HWI is a tool, but it has a way of communicating, you have a way of giving it commands, and that is a protocol, essentially.\nSo somebody else could make a tool that is behaves the same as HWI but is you know just for their own hardware wallet so hardware wallet manufacturer you know doesn't have to let people use HWI they could make their own driver that just behaves the same way as HWI and then Bitcoin Core as we'll discuss next we'll know how to talk to it.\n\nAaron van Wirdum: 00:09:06\n\nIf someone brings a new hardware wallet to the market which does its own thing again then HWI will be updated potentially to be able to communicate with that as well?\n\nSjors Provoost: 00:09:18\n\nDepending on the enthusiasm of the maintainers of HWI, they might go out and find that driver and include it.\nIf the enthusiasm is slightly less, then the manufacturer or a fan, a user, can go to HWI, make a pull request, and say, \"Hey, here's the support for this new hardware wallet\".\nAnd then recently there were some guidelines merged for that.\nSo the hardware wallet has to be open source.\nAt least the firmware that runs on it has to be open source, with the only exception being if there's a secure element in it that's under NDA, that's okay.\nAnd it has to be sort of what, maintainable, the software.\nBut then, yeah, anybody can just make support, add support for any other hardware wallet to HWI.\nBut again, it's not necessary.\nThe hardware manufacturer could also make their own software that just speaks the same language as HWI.\n\nAaron van Wirdum: 00:10:14\n\nAnd HWI was already merged into Bitcoin Core?\n\nSjors Provoost: 00:10:18\n\nHWI is a separate program that's in the Bitcoin, not in the Bitcoin Core repository, but there is a GitHub organization called Bitcoin Core, which has a bunch of repositories, and that includes HWI.\nSo it's separate from Bitcoin Core because it's all this Python stuff and USB drivers.\nSo I guess we don't want to put that in the Bitcoin source code because that's too scary with all the dependencies.\nBut it is maintained by Bitcoin Core people.\nSo it's a trust slightly less or I don't know how to put it.\n\nAaron van Wirdum: 00:10:49\n\nHWI is a separate program essentially and it needs to be installed separately if you want to use it.\n\nSjors Provoost: 00:11:00\n\nExactly, you can download it separately, install it separately, or just put it somewhere.\n\nAaron van Wirdum: 00:11:04\n\nIt's not in the Bitcoin Core client that I'm running at home?\n\nSjors Provoost: 00:11:09\n\nNo, because in order for that to happen, first of all, it would probably have to be written in C++ or in Rust or something like that.\nAnd all the USB drivers would have to be inspected with a tooth comb, and that'll take forever.\nIt's something you install separately, and there is some risk, obviously, with just running that software.\n\nAaron van Wirdum: 00:11:28\n\nThis is not new, is it?\n\nSjors Provoost: 00:11:31\n\nThat's right.\nHWI has been around for at least a year.\n\nAaron van Wirdum: 00:11:40\n\nWhat was merged last week?\n\nSjors Provoost: 00:11:42\n\nBefore last week, if you wanted to use HWI with Bitcoin Core you can do that but you have to execute a bunch of commands manually so for example if you wanted to sign a transaction you would tell Bitcoin Core okay I'd like to create a PSBT so we explained PSBT in an earlier episode.\n\nAaron van Wirdum: 00:11:59\n\nYeah partially signed Bitcoin transactions.\n\nSjors Provoost: 00:12:01\n\nExactly, you tell Bitcoin Core okay give me a PSBT, a partially signed transaction, in this case actually an unsigned transaction probably and to the destination and then you would copy paste the result and you'd say, okay, HWI, please sign this thing.\nAnd then HWI would do its thing.\nAnd then you get a result and you copy paste that back into Bitcoin Core and say, \"Bitcoin Core, please process this thing and send this thing\".\n\nAaron van Wirdum: 00:12:24\n\nYou're running both programs, the Bitcoin Core program and the HWI program, and then you're manually copy pasting data from one to the other.\nUsing your hardware wallet on HWI, getting some signature and then copy pasting it to Bitcoin Core, and that's how it would work.\n\nSjors Provoost: 00:12:42\n\nExactly.\n\nAaron van Wirdum: 00:12:43\n\nAnd you're doing this all in the command line, I assume?\n\nSjors Provoost: 00:12:46\n\nYes, That's right.\nThere was already some help with that because HWI also comes with a little graphical program where you can actually click buttons to make it do these things, but you'd still be copy pasting back and forth with Bitcoin Core.\n\nAaron van Wirdum: 00:12:58\n\nI love buttons.\n\nSjors Provoost: 00:13:00\n\nWhat is new now is that Bitcoin Core now knows how to communicate with HWI.\nStill from the command line, but it still gets easier.\nBecause now when you want to send coins, you just tell Bitcoin Core, send, and then the destination and the amount.\nAnd it will know that it needs the hardware wallet.\nSo it will say, \"Hello, HWI, please do these things\".\nAnd it will wait for the results.\nAnd it will process the results.\nAnd it will send the transaction.\nSo you go from four back and forths with copy-pasting to just send.\nAnd it works.\n\nAaron van Wirdum: 00:13:34\n\nNo more copy-pasting.\n\nSjors Provoost: 00:13:35\n\nAll you need to do is tell Bitcoin Core where HWI lives, so where on your computer you installed it, and then it will just call it for you.\n\nAaron van Wirdum: 00:13:43\n\nIf you know how to work the command line this is pretty big improvement I guess.\n\nSjors Provoost: 00:13:49\n\nThis is significantly less tedious.\nThe approaches like with the manual back and forth and with this it's much easier.\n\nAaron van Wirdum: 00:13:56\n\nBut you do still need to use the command line.\n\nSjors Provoost: 00:13:59\n\nIn Bitcoin Core you have this window, the debug console, which is essentially a little command line.\nBut you cannot do it in the user interface, but you can actually open this window console and then you can just type send, and it'll work.\n\nAaron van Wirdum: 00:14:15\n\nThis was merged into Bitcoin Core, which will be released in, I guess, it will probably be Bitcoin Core 22?\n\nSjors Provoost: 00:14:23\n\nYeah, Bitcoin Core 22 should be out in fall.\n\nAaron van Wirdum: 00:14:27\n\nMight it also come into a minor release?\nI guess that might depend on taproot activation stuff.\n\nSjors Provoost: 00:14:32\n\nThis is not the kind of stuff that would be backported.\n\nAaron van Wirdum: 00:14:35\n\nSo it's definitely gonna be a major release is that what you're saying?\n\nSjors Provoost: 00:14:38\n\nBecause in order for things to backport has to be simple enough or like a really critical bug fix but usually the only things that are backported are bug fixes and soft forks but not entire new features.\n\nAaron van Wirdum: 00:14:51\n\nThis will be in the upcoming Bitcoin Core 22 release.\n\nSjors Provoost: 00:14:55\n\nOr if you compile the master branch yourself.\n\nAaron van Wirdum: 00:14:59\n\nThe step after that I would assume would be GUI support.\n\nSjors Provoost: 00:15:04\n\nGUI support that's right, because having to type commands is kind of annoying.\nSo I have a pull request open that builds on top of this, and it adds a couple of things.\nIt adds something to the settings screen.\nSo there is a settings screen in Bitcoin Core.\nAnd there you tell it where HWI lives.\nYou don't have to give that to the command line.\nYou just copy paste that file directory.\nAnd then when you go to the menu to create a wallet, if you have this HWI path correctly, and you have a hardware wallet inside your computer and it's like unlocked if you create a new wallet it'll detect it so it'll say \"Oh would you like to use this ledger X or whatever\"\nand then you click next and it will automatically pull the keys from the device and your wallet will just look like any other wallet.\nYou can click on receive address, you'll see an address.\nAnd then the other feature is that if you click on a receive address, so in Bitcoin Core, you click on, get me a new address, then it kind of makes a little mini address book and you can right click on that, I believe, and then click on verify.\nThat's a new button.\nAnd the verify button, again, if the device is plugged in, will automatically show the address on the hardware wallet.\nYou can check that it's real.\nAnd then the third thing that's added is you can now just send Bitcoin as you would in Bitcoin Core.\nJust click on send and type the destination, set the fee area.\nAnd when you hit send, if the device is plugged in, it'll show up on the device and you click on approve and it just sends it.\nNow the downside is that if anything does not go exactly right as I just described it, it will probably crash.\nSo it's still a work in progress.\n\nAaron van Wirdum: 00:16:54\n\nWould it work with all of Bitcoin Core's current futures?\nThat would be for example be RBF I guess and sent to many or whatever it's called, batching, these kinds of things.\n\nSjors Provoost: 00:17:05\n\nIf in the graphical interface you can send a transaction, you can send it to like 10 different recipients if you want to, that'll work.\nI believe RBF I have not implemented because internally that does a few other things.\nYou can try.\nBut it would be trivial to add that as a follow-up.\nBut I try to keep these pull requests as minimum as possible.\nThese are like three features that I think are really at least good enough.\n\nAaron van Wirdum: 00:17:30\n\nAre these things possible now?\nAre we just talking about the UI?\n\nSjors Provoost: 00:17:35\n\nThis is the GUI pull request.\nRight now you can do all these things with the command line, but they'll work in the GUI, which is very nice, especially coin selection.\nSo in the command line, typing send an address and an amount that's not too bad.\n\nAaron van Wirdum: 00:17:50\n\nOther good example, coin selection.\n\nSjors Provoost: 00:17:52\n\nBut the coin selection is only practical in the GUI so you can actually like decide which coins to spend and having coin selection with hardware wallets is very nice.\nIt does work but it only works if it doesn't crash.\nThat just needs more review and requires me to fix things and maybe make it asynchronous so the screen doesn't block while the hardware wallet is doing something.\n\nAaron van Wirdum: 00:18:16\n\nThis will probably not be ready before Bitcoin Core 22.\n\nSjors Provoost: 00:18:20\n\nI'm bullish.\nI think it might be possible.\nIt depends on the review because I have a couple things that I want to improve about it but I tend to get more motivated when people start screaming at me in the reviews.\n\nAaron van Wirdum: 00:18:31\n\nI can scream at you in the reviews.\nI won't say anything useful, but I can scream at you.\n\nSjors Provoost: 00:18:36\n\nYou do have to actually test it.\nDon't just come in from Twitter and comment on it.\nBut if you actually run the code and something goes wrong, then I'll try to help or fix the bug.\n\nAaron van Wirdum: 00:18:45\n\nWhat about multi-sig?\n\nSjors Provoost: 00:18:53\n\nEverything I've described is for a single-sig.\n\nAaron van Wirdum: 00:18:57\n\nIf you'd want to use three hardware wallets, and then two out of three, stuff like that.\n\nSjors Provoost: 00:19:04\n\nEventually I'd like to see something similar to how Electrum, just let you make a pie chart.\nNone of that is there yet, not even in the command line.\nIt is possible, I think I once made an experimental pull request that did do multi-sig at least from the command line.\nBut there's a lot of moving parts.\nI'd like to get all the single-sig stuff merged.\nThen we'll move on to multi-sig.\nBitcoin Core multi-sig with hardware wallets will be a while.\nThere's another project, is called Specter.\nSpecter is also a hardware wallet but in this case what we're talking about is the Specter desktop software, another Python project.\n\nAaron van Wirdum: 00:19:49\n\nThere's a device, a Specter device?\n\nSjors Provoost: 00:19:51\n\nYes.\nIt's very cool I should have brought it with me, but it's a do-it-yourself hardware wallet.\nYou can actually order the components from any manufacturer that sort of makes these Arduino-like or smartphone-like things.\nAnd you take a QR scanner and you solder it on it.\nThis is by Stepan Snigirev.\nHe's been working on that.\nHe's also been working, I believe, on support for actual secure elements, so that you can buy your own secure element from like a manufacturer that makes a lot of these general-purpose secure elements so they might not even know that you're using it for Bitcoin purposes which is very nice supply chain wise and you don't have to trust them.\n\nAaron van Wirdum: 00:20:33\n\nThat's the device.\nWe were actually going to talk about the wallet, I guess, the software.\n\nSjors Provoost: 00:20:37\n\nBecause I guess in order for them to develop that device, they wanted to use that inside a multi-sig setup.\nAnd so they spent a lot of time building a multi-sig system.\nAnd that is called the Specter Desktop.\nWhat it does is, again, it's a program you download and it opens on your computer.\nAnd then it says, \"hey, where's Bitcoin Core?\"\nOr hopefully it finds it.\nAnd then if it finds Bitcoin Core, it says, \"Bitcoin Core is synced, tt's got all the blocks\".\nDo you have any devices you'd like to configure?\nAnd then you say, OK, yeah, I have a Ledger wallet, and I have a Trezor wallet, and whatever.\nYou add those devices one by one by just plugging it in.\nAnd under the hood, that uses HWI.\n\nAaron van Wirdum: 00:21:18\n\nSpecter uses HWI as well.\n\nSjors Provoost: 00:21:21\n\nIt just comes bundled with it.\nSo it knows how to detect them it knows how to add them.\n\nAaron van Wirdum: 00:21:25\n\nSo you need to install HWI as well?\n\nSjors Provoost: 00:21:27\n\nNo I think Specter just has.\n\nAaron van Wirdum: 00:21:29\n\nIt includes it.\n\nSjors Provoost: 00:21:31\n\nThat's the trade-off right so in Bitcoin Core we don't just want to add HWI, but in Specter, they do.\nAnd then basically you add devices and then you say I'd like to configure a wallet.\nAnd the terminology is a bit confusing.\nThat's why I used the word device, or the device because the device is also a wallet.\nWe create a wallet and you say I want to combine the Trezor and the Ledger and I want a two of two.\nOr one of two.\nAnd then it says I'm going to create a wallet now.\nAnd it creates that wallet in Bitcoin core so that means that Specter does not have to maintain like all the code necessary to create a whole wallet from scratch because that's a lot of work it lets Bitcoin core do that it also means it can let Bitcoin Core do all the coin selection magic.\n\nAaron van Wirdum: 00:22:17\n\nAnd this uses the GUI of Bitcoin Core?\n\nSjors Provoost: 00:22:20\n\nNo, it's its own GUI, which is basically just a little web server on your own computer, kind of like how a modem looks if you log in to the admin panel.\n\nAaron van Wirdum: 00:22:29\n\nIt uses Bitcoin Core as a back end, but you're actually looking at Specter, which also includes HWI.\n\nSjors Provoost: 00:22:39\n\nAnd I guess one scenario where this might be nice is if you run Bitcoin Core, not on your computer, but on a Raspberry Pi somewhere, which might not have a screen, or at least you don't want to use the screen and you could imagine remote connecting to your Raspberry Pi with Bitcoin Core running on it and you're not worried because your keys are not on Bitcoin Core it's just the read-only stuff is on Bitcoin Core.\nSo your Raspberry Pi in your living room with no security is not really a threat but it is a full node and you can use it that way.\n\nAaron van Wirdum: 00:23:11\n\nThat's one way.\n\nSjors Provoost: 00:23:12\n\nIt looks pretty slick it's very easy to use in my experience once you get it running.\n\nAaron van Wirdum: 00:23:15\n\nThat's one way to use a hardware wallet in combination with Bitcoin Core already, including multi-sig solutions.\n\nSjors Provoost: 00:23:25\n\nEspecially the latter.\nI guess soon, TM, you'll be able to use Bitcoin Core with single-sig.\nAnd then I would say the fewer moving parts you have, the better.\nNothing against Specter, but if you don't need it, then don't run additional code.\nBut for multi-SIG, it's great.\nAnd to get that kind of UI, especially in Bitcoin Core, that's going to take a while.\n\nAaron van Wirdum: 00:23:45\n\nThere are a couple of other solutions like this.\nYou already mentioned Electrum, which you could of course also run in combination with your personal Electrum server, in which case you're also using full node security.\n\nSjors Provoost: 00:23:57\n\nAlthough I'd have to see, I don't know if Electrum Personal Server also has support for multi-sig, but in theory that could be added.\n\nAaron van Wirdum: 00:24:07\n\nThere's something called a Lily Wallet.\nI don't know if that uses full node security, I've never used it.\nIt looks very slick, I've seen that.\nBut that also allows for hardware wallets multi-setup stuff I think but I could be wrong I think that's spv light client type of wallet though.\n\nSjors Provoost: 00:24:25\n\nI don't know.\n\nAaron van Wirdum: 00:24:26\n\nI think there's also one called caravan.\n\nSjors Provoost: 00:24:29\n\nCaravan I've heard of that.\n\nAaron van Wirdum: 00:24:30\n\nI don't know much about caravan, I know it does something similar.\n\nSjors Provoost: 00:24:35\n\nThat's what I heard too and then there is Casa, I don't know how they do it, there's all sorts of ways.\nI imagine in the future this is gonna get better and better.\nWe talked about very simple multi-sig setups, but imagine a scenario where we have not just taproot.\nWe have taproot.\nAnd then we have Miniscript, which we talked about in an earlier episode, which allows you to make far more complicated setups.\nNow you can imagine instead of a two or three setting where you have two hardware wallets, one you keep in a vault somewhere, one you keep wherever you are, and then the third key quote unquote is not actually a single key, it's not a single device.\nIt is some sort of bank, some sort of bank that helps you.\nAnd they internally use some extremely complicated setup, which you don't have to understand.\nFrom your point of view, it just looks like one signature.\nIn reality, it's very complicated.\nAnd it can all be communicated through Miniscript and then you do something like Specter so you and your site can make sure everything works and only when you need the bank then you need to ask them for a signature but other than that all just works from your end.\nEven though they have some super complicated rules set, for you it's just a third party and you don't care.\nSo I'm very bullish on the future but this is gonna take a while.\n\nAaron van Wirdum: 00:25:56\n\nWell Sjors, thanks for the update.\nThis is where we are with hardware wallet integration in Bitcoin Core now and soon TM.\n\nSjors Provoost: 00:26:04\n\nThat's right, anything else?\n\nAaron van Wirdum: 00:26:06\n\nI think that's it for me.\n\nSjors Provoost: 00:26:07\n\nAlright.\nThank you for listening The Van Wirdum Sjorsnado.\n\nAaron van Wirdum: 00:26:10\n\nThere you go.\n\n",
    "body_type": "markdown",
    "created_at": "2021-03-05T00:00:00.000Z",
    "domain": "https://btctranscripts.com/",
    "url": "https://btctranscripts.com/bitcoin-explained/hardware-wallet-integration-in-bitcoin-core-and-hwi",
    "categories": [
        "podcast"
    ],
    "tags": [
        "bitcoin-core",
        "hardware wallet",
        "hwi"
    ],
    "media": "https://www.youtube.com/watch?v=TXyi-G1Snx4",
    "authors": [
        "Sjors Provoost",
        "Aaron van Wirdum"
    ],
    "indexed_at": "2024-03-21T16:33:36.131Z",
    "transcript_by": "NeroCherubino via review.btctranscripts.com",
    "summary": "In a recent episode of The Van Wirdum Sjorsnado, hosted by Aaron van Wirdum and Sjors Provoost, the duo delved into the intricate advancements within the Bitcoin protocol, focusing on the improvement proposals (BIPs) and the integration of hardware wallets with Bitcoin Core. Their discussion commenced with an update on BIP 8, revealing that despite the absence of a runnable client, significant progress had been made through meticulous code reviews and adjustments, showcasing the collaborative spirit in refining these enhancements.\n\nSjors Provoost shared insights into his involvement in the BIP 8 review process, stressing the importance of breaking down the proposal into manageable segments for a more efficient analysis. This method not only simplifies the review process but also ensures a thorough examination of the details, thus promoting a refined approach to Bitcoin\u2019s development. Furthermore, Provoost discussed his efforts to segregate commits, illustrating his commitment to enhancing the underlying technology of Bitcoin through meticulous attention to detail.\n\nThe conversation then transitioned to Provoost's work on improving Bitcoin Core's compatibility with hardware wallets. He expressed enthusiasm for this area, highlighting his collaboration with other core developers like Andrew Chow and Instagibbs. This team has been instrumental in addressing the challenges posed by legacy code in Bitcoin Core\u2019s wallet component, advocating for a rewrite that leverages descriptors. Descriptors simplify the derivation of addresses from a seed, facilitating a smoother interaction between Bitcoin Core and hardware wallets.\n\nProvoost elucidated on the Hardware Wallet Interface (HWI), a Python library spearheaded by Andrew Chow, which standardizes the communication between Bitcoin Core and various hardware wallets. HWI serves as a pivotal bridge, translating the proprietary protocols of hardware wallets to a unified interface compatible with Bitcoin Core. This innovation is crucial for expanding Bitcoin Core\u2019s support for hardware wallets, thereby enhancing security and convenience for users.\n\nMoreover, the dialogue highlighted ongoing efforts to keep HWI updated with new hardware wallet models, emphasizing the open-source community's role in contributing to this endeavor. These discussions underscored the continuous push by developers to fortify Bitcoin's infrastructure, ensuring its robustness and accessibility for users across the globe.\n\nProgressing further, the hosts explored the significant advancements in user experience and functionality when using hardware wallets with Bitcoin Core. They detailed the shift from a cumbersome manual transaction process to direct communication between Bitcoin Core and HWI. This evolution reduces transaction complexity, making it more accessible to users with varying levels of technical proficiency. Additionally, they touched upon the integration of a graphical user interface (GUI) and the potential for multi-signature support, promising to make Bitcoin storage and transactions more seamless and secure.\n\nLastly, the conversation shed light on the collaboration between Specter and Bitcoin Core, particularly in configuring multi-signature wallets. While Bitcoin Core adheres to strict policies regarding direct HWI integration, Specter adopts a more flexible stance, facilitating easier setup for users. This synergy allows for remote management of Bitcoin Core on devices without screens, offering a secure and user-friendly solution for Bitcoin storage and transactions. The discussion concluded with optimism for future developments in Bitcoin scripting languages, such as Taproot and Miniscript, which could offer more complex and secure multi-signature arrangements, enhancing the overall security and usability of Bitcoin.\n\nThrough their comprehensive discussion, Provoost and van Wirdum provided valuable insights into the technical strides being made in Bitcoin's ecosystem, highlighting the dedication of the community to improve Bitcoin's infrastructure for enhanced security and user experience worldwide."
}