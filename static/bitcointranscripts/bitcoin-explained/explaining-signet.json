{
    "id": "bitcointranscripts+bitcoin-explained+explaining-signet",
    "title": "Explaining Signet",
    "body_formatted": "{\"type\":\"heading\",\"text\":\"Intro\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:00:07\"}, {\"type\":\"paragraph\",\"text\":\"Live from Utrecht, this is the Van Wirdum Sjorsnedo.\\nHello! Sjors, welcome.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:00:12\"}, {\"type\":\"paragraph\",\"text\":\"Thank you.\\nIt's good to be back.\\nWell, I never left, but...\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:00:15\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, well, we're at your home now, so you never left, I think.\\nYou probably literally never left because of corona\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:00:21\"}, {\"type\":\"paragraph\",\"text\":\"Exactly we're at my secret location\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:00:25\"}, {\"type\":\"paragraph\",\"text\":\"How are you enjoying the second wave?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:00:26\"}, {\"type\":\"paragraph\",\"text\":\"It's amazing\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:00:28\"}, {\"type\":\"paragraph\",\"text\":\"It is happening isn't it?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:00:30\"}, {\"type\":\"paragraph\",\"text\":\"Yeah it's clearly happening we've crossed every threshold value there is.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:00:34\"}, {\"type\":\"paragraph\",\"text\":\"Now it's just waiting for things to get worse\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:00:37\"}, {\"type\":\"paragraph\",\"text\":\"Yeah I mean the amazing measure after three weeks of warnings that was taken was to close bars like one hour earlier, that's not gonna do it, so...\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:00:46\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, it was like the R value was way too high, so now they made a very strict measure of closing bars one hour early.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:00:53\"}, {\"type\":\"paragraph\",\"text\":\"Yeah which I'm sure will reduce.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:00:54\"}, {\"type\":\"paragraph\",\"text\":\"Nothing's gonna change obviously.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:00:56\"}, {\"type\":\"paragraph\",\"text\":\"Well yeah but the number still keeps going up so eventually there's probably going to be some sort of lockdown.\\nBecause the difference between now and the last time is the last time the numbers were bad and everybody was worried and now the numbers are bad and nobody's worried.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:10\"}, {\"type\":\"paragraph\",\"text\":\"Yeah.\\nAre you expecting a real full-blown lockdown this time in the Netherlands?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:15\"}, {\"type\":\"paragraph\",\"text\":\"Well, we never had one.\\nI don't know.\\nI think it will be more strict than last time, but I don't think it'll be Australian style.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:22\"}, {\"type\":\"paragraph\",\"text\":\"Right.\\nYeah.\\nSo anyways, this episode is not about Corona.\\nNope.\\nThis episode is about Signet.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:29\"}, {\"type\":\"paragraph\",\"text\":\"Indeed, Signet.\"}, {\"type\":\"heading\",\"text\":\"Explaining the difference between Testnet and the real Bitcoin network technically.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:30\"}, {\"type\":\"paragraph\",\"text\":\"So Signet.\\nSo this is a new version of Testnet.\\nSo let's start with Testnet.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:34\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, or start with Mainnet.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:37\"}, {\"type\":\"paragraph\",\"text\":\"Are you going to explain everything about Mainnet now first?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:39\"}, {\"type\":\"paragraph\",\"text\":\"No, just to point out that in the early days Bitcoin was practically worthless, so you could just test everything on production.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:01:46\"}, {\"type\":\"paragraph\",\"text\":\"Okay.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:01:47\\nAnd now that Bitcoin is not worthless, you know, you don't want to test things on production.\\nIn general, you do not want to test things on production.\\nSo there's this additional network that is identical to Bitcoin and that's called Testnet.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:00\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, it's basically a clone of Mainnet which was created I think by, I think Gavin Andresen created this back in, what would have been 2011, 12, 13?\\nProbably before, I don't know.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:13\"}, {\"type\":\"paragraph\",\"text\":\"But it was designed to be worthless, but of course some people are idiots, so they started trading it.\\nBecause, you know, it's probably better than any altcoin.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:21\"}, {\"type\":\"paragraph\",\"text\":\"Right, because it's just Bitcoin.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:24\"}, {\"type\":\"paragraph\",\"text\":\"Well, Bitcoin with a few gotchas.\\nI think the main gotcha is that if nobody mines a block, the difficulty goes back down, so that anyone can mine a block again.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:33\"}, {\"type\":\"paragraph\",\"text\":\"Oh, the difficulty adjusts faster on Testnet?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:36\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, there's basically after 20 minutes what we would now call emergency difficulty adjustment, which just basically sets the difficulty right back to zero or whatever the lowest number is.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:46\"}, {\"type\":\"paragraph\",\"text\":\"Right, right, right.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:48\"}, {\"type\":\"paragraph\",\"text\":\"So what you see is usually 20 minutes, nothing, and then all of a sudden, one block comes in or a whole series of block comes in.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:02:55\"}, {\"type\":\"paragraph\",\"text\":\"And that just resets difficulty to one?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:02:58\"}, {\"type\":\"paragraph\",\"text\":\"Exactly, and the problem is that some joker with a big ASIC miner mines a bunch of blocks on Testnet and creates really high difficulty because the difficulty keeps adjusting up and then they just go away.\\nAnd nobody can mine a block anymore.\\nBut after 20 minutes it goes back.\"}, {\"type\":\"heading\",\"text\":\"Aaron and Sjors explain what's wrong with Testnet\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:03:15\"}, {\"type\":\"paragraph\",\"text\":\"So first of all, I think what you were going to say, but I'm not sure, is that the thing about Testnet is that it's not supposed to have any value.\\nAnd then if for some reason it does get value, like some people start trading it and hoarding it and holding it, then actually the whole Testnet is just reset because people are really punished in a way for giving it value.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:03:35\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, I think that happened once or twice.\\nThe current Testnet is called Testnet3.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:03:39\"}, {\"type\":\"paragraph\",\"text\":\"Right, so just to make sure that it has no value, that's the whole point of having this network.\\nIt should have no value so people can use it to test stuff on.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:03:48\"}, {\"type\":\"paragraph\",\"text\":\"That's right.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:03:48\"}, {\"type\":\"paragraph\",\"text\":\"Okay, so then the problem is, and that was the other thing you were explaining, is that this network, this test network, because it has no value, there's no real incentive and mining economy around hash power, and therefore it's unstable.\\nSo sometimes blocks are, like you mentioned, mined very fast and all of a sudden you have, you have a whole bunch of blocks and then this ASIC clown leaves and then there's no blocks for a while and it's unstable and this does not make for an ideal test environment.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:04:24\"}, {\"type\":\"paragraph\",\"text\":\"There's other problems like you might have a reorg of 15,000 blocks, which is not realistic, or I think in the beginning, SegWit blocks didn't get mined.\\nI don't even think it was censorship, it was just nobody was bothering.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:04:38\"}, {\"type\":\"paragraph\",\"text\":\"Right.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:04:39\"}, {\"type\":\"paragraph\",\"text\":\"So all these kind of problems, yeah, it's time to get rid of it.\\nWell, not to get rid of it, but time to have something else as well.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:04:45\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, so you have a proof-of-work chain without all the benefits of proof-of-work.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:04:51\"}, {\"type\":\"paragraph\",\"text\":\"Yeah it's basically the worst of both worlds.\\nIt's all the downsides of proof-of-work because you do need to you know have it but you just you don't have the incentives that go with it so it's just a mess.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:05:00\"}, {\"type\":\"paragraph\",\"text\":\"It's a messy test environment.\\nSo what's Regnet?\\nIs that what it's called?\\nRegtest?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:05:07\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, Regtest.\\nSo basically regression testing.\\nThere is another version that you can spin up that's called Regtest\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:05:14\"}, {\"type\":\"paragraph\",\"text\":\"It's version of Testnet\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:05:16\"}, {\"type\":\"paragraph\",\"text\":\"It's Testnet-ish but it's a different kind of network.\\nSo Bitcoin Core defines three types of networks: Mainnet, Testnet, and Regtest.\\nAnd the last one...\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:05:25\"}, {\"type\":\"paragraph\",\"text\":\"So, just to be clear about this, because this is maybe slightly interesting for someone who...\\nI wasn't even sure about this.\\nSo Bitcoin Core actually embeds this stuff.\\nBitcoin Core embeds Testnet.\\nThere's like an option in Bitcoin Core to use Testnet.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:05:39\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, you launch Bitcoin Core with \\\"-testnet\\\".\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:05:42\"}, {\"type\":\"paragraph\",\"text\":\"Right, so you download the Bitcoin Core software and then you can choose Mainnet or Testnet.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:05:48\"}, {\"type\":\"paragraph\",\"text\":\"Or Regtest.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:05:49\"}, {\"type\":\"paragraph\",\"text\":\"Or Regtest, which you're gonna explain now.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:05:50\"}, {\"type\":\"paragraph\",\"text\":\"And so I think the biggest difference with Regtest is that it has no difficulty adjustment.\\nOr something like that.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:05:55\"}, {\"type\":\"paragraph\",\"text\":\"Okay. Is that the biggest?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:05:55\"}, {\"type\":\"paragraph\",\"text\":\"Basically the use case for that is you run a test on your own computer.\\nSo Bitcoin Core has a whole bunch of tests.\\nAnd those tests actually spin up a node that really produces blocks and reorgs and makes transactions and rejects transactions and all these things.\\nBut you don't want to have this huge CPU waste when you're running your tests to have this difficulty.\\nSo I think they're all just trivially easy.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:06:19\"}, {\"type\":\"paragraph\",\"text\":\"But it's only on your own computer, this one.\\nYou're not sharing it with other people.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:06:24\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, not necessarily, but in practice, that's how you use it.\\nYou spin up a bunch of nodes on your own computer.\\nNow in principle, they're nodes, so they can run all over the network but the problem then is because anybody can create blocks you can just wipe out each other's chains and it wouldn't be very suitable to use with between different people on different networks it's not ideal for that.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:06:44\"}, {\"type\":\"paragraph\",\"text\":\"It's even worse than Testnet for that.\\nOkay so we have Testnet that's unstable, we have Regtest that's even more unstable especially if you use it with other people, but a bit better probably if you use it on your own.\\nBut we're looking for something better.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:06:59\"}, {\"type\":\"paragraph\",\"text\":\"Yes.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:00\"}, {\"type\":\"paragraph\",\"text\":\"We want something better or not Sjors?.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:07:02\"}, {\"type\":\"paragraph\",\"text\":\"I would like something better.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:03\"}, {\"type\":\"paragraph\",\"text\":\"That's what I thought.\\nI don't really care either way, I'm not a developer, but for you, you want something better for sure.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:07:10\"}, {\"type\":\"paragraph\",\"text\":\"Yes, it's nice to be able to develop on something and try it with other people.\\nSo when you're working with other people, it's nice to have perhaps an explorer somewhere that you can point to, a faucet somewhere, some, you know, maybe somebody takes care of occasional reorgs, so you can write software that you know every day or every hour, it's gonna be three block re-org, and you can just make sure your software actually handles that.\\nAlways kind of things you can do.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:38\"}, {\"type\":\"paragraph\",\"text\":\"So Signet is the new Testnet.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:07:40\"}, {\"type\":\"paragraph\",\"text\":\"It's not the new Testnet, it's another form.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:07:43\"}, {\"type\":\"paragraph\",\"text\":\"It's a new Testnet.\\nOkay, so once there's a Bitcoin core software release that has this implemented then you have four options. So you have Bitcoin Mainnet you have Bitcoin Testnet, you have Bitcoin Regtest and now you have another option which is Bitcoin Signet.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:08:03\"}, {\"type\":\"paragraph\",\"text\":\"That's right.\"}, {\"type\":\"heading\",\"text\":\"Sjors explains how Signet solves some of the issues with Testnet\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:08:04\"}, {\"type\":\"paragraph\",\"text\":\"Yeah what is Signet?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:08:05\"}, {\"type\":\"paragraph\",\"text\":\"Signet is signed essentially and it's completely centralized.\\nEvery block is signed.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:08:14\"}, {\"type\":\"paragraph\",\"text\":\"Every block must be signed for it to be valid.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:08:16\"}, {\"type\":\"paragraph\",\"text\":\"Correct.\\nSo when you receive a new block, you check the proof-of-work, but that can be trivially low and then...\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:08:23\"}, {\"type\":\"paragraph\",\"text\":\"Right, it still has proof-of-work as well.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:08:25\"}, {\"type\":\"paragraph\",\"text\":\"It does, yes.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:08:26\"}, {\"type\":\"paragraph\",\"text\":\"And then you need a valid signature on top of the proof-of-work for the block to be valid.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:08:31\"}, {\"type\":\"paragraph\",\"text\":\"Correct.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:08:31\"}, {\"type\":\"paragraph\",\"text\":\"Plus of course the rest of the block needs to be valid like always all the transactions.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:08:37\"}, {\"type\":\"paragraph\",\"text\":\"The signature is included in in one of the Coinbase transactions or in the Coinbase transaction as one of the outputs.\\nBasically what you do is you create a block and then you add the signature to it and then you start grinding to find a proof-of-work.\\nAnd there's a couple of fields you cannot change when you do that.\\nBut in principle, you know, you can try a couple of nonces and then you sign again and you try some other nonces.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:09:03\"}, {\"type\":\"paragraph\",\"text\":\"Eventually you mine a block.\\nSo that's all the same.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:09:05\"}, {\"type\":\"paragraph\",\"text\":\"So who's creating the signature?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:09:07\"}, {\"type\":\"paragraph\",\"text\":\"So the idea is that there can be more than one Signet, so we'll get into that, but in this case, the main Signet, the default Signet, is probably a better way to say it, is checked by a **one of two multi-sig**.\\nSo a Signet can have any arbitrary rules for what the block should be signed with, and the rule that's picked for the main one is a one out of two multi-sig.\\nSo there are two public keys out there, and I think, yeah, it's disclosed on the list.\\nSo it's Kalle Alm and AJ Towns.\\nThey have either of the keys.\\nSo if one of their computers disappears, Signet will go on.\\nBut it's very clearly very centralized in this sense.\\nSo they sign the block and then it's fine.\\nAnd they sign one every 10 minutes.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:09:51\"}, {\"type\":\"paragraph\",\"text\":\"One of them signs one every 10 minutes.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:09:54\"}, {\"type\":\"paragraph\",\"text\":\"Exactly.\\nAnd the other one just stands by if one of them goes away.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:09:57\"}, {\"type\":\"paragraph\",\"text\":\"Just in case.\\nRight, so you know for sure there's gonna be one block every 10 minutes, so that makes it stable?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:10:03\"}, {\"type\":\"paragraph\",\"text\":\"That's the idea.\\nAnd because they can both agree not to annoy each other with increasing the difficulty, you won't have that kind of problems.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:10:13\"}, {\"type\":\"paragraph\",\"text\":\"Right.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:10:13\"}, {\"type\":\"paragraph\",\"text\":\"Now, it's just a Signet.\\nIt's the default that Bitcoin Core will ship with, but you have a simple parameter that you can start Bitcoin Core with to find any other Signet.\\nSo anybody can create their own super centralized Signet.\\nThat's kind of the trade-off.\"}, {\"type\":\"paragraph\",\"text\":\"And they can have arbitrary conditions.\\nSo you could have, especially with Taproot, a 1000 out of 300000 multi-sig weird construction that could be valid too for a Signet there's probably no reason to do it it's probably enough to just have a one of two or one of three.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:10:44\"}, {\"type\":\"paragraph\",\"text\":\"Right, you can use it to test your new software or whatever you're testing.\\nI would imagine that because of this structure, wouldn't it also make it unsuited to test certain stuff?\\nI'm just thinking out loud here, but if you want to test something proof-of-work related or something like that, I can imagine that it's actually getting in the way as well sometimes or not?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:11:07\"}, {\"type\":\"paragraph\",\"text\":\"I would say you can test whatever you want, because it still has proof-of-work.\\nSo you could have a one-of-two signature and one of the two could increase the work, could just start mining with more work.\\nAnd so triggering reorgs that way.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:11:21\"}, {\"type\":\"paragraph\",\"text\":\"Are there any trade-offs or downsides then to Signet or do you think it's just strictly better than Testnet?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:11:27\"}, {\"type\":\"paragraph\",\"text\":\"Well, it's extremely centralized, the default Signet, but because everybody can make their own Signet that's kind of not an issue either\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:11:35\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, plus it's just for testing anyways and it's valueless anyways\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:11:39\"}, {\"type\":\"paragraph\",\"text\":\"Exactly, so I don't see any downside.\\nI also don't see any reason to get rid of Testnet but this is just an option you have.\\nAnd yeah, so Kalle says \\\"Hello\\\".\\nI talked to him earlier today.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:11:52\"}, {\"type\":\"paragraph\",\"text\":\"Hello.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:11:53\"}, {\"type\":\"paragraph\",\"text\":\"And one of the things he pointed out is that you can test soft forks with this pretty easily by just shipping a new version of the Signet code, or running your own branch of the Signet code, your own Bitcoin Core branch, which happens to check that soft-fork, whereas others can simply ignore the soft fork.\\nSo let's say they do an update that has Taproot in it, and they say, well, as of Signet block 1000, taproot is now activated.\\nAnd so if you run the old version of Signet code, the one that's in Bitcoin Core now, you'll just ignore it because this is a soft-fork.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:12:35\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, well you'll still follow the chain, you'll still be fine with it, you're just not enforcing.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:12:41\"}, {\"type\":\"paragraph\",\"text\":\"You're not checking any of the Taproot rules.\\nBut if you have that version you will check the Taproot rules.\\nAnd now what if Taproot rules are changed?\\nBecause it's still work in progress so the consensus rules around Taproot might change, right?\\nOr there could be a bug in the first implementation.\\nWell it's very simple.\\nYou ship a new version of this Taproot Signet code and you activate it later.\\nSo you basically say well now we activate Taproot at block 2000 and anything before that is ignored.\\nSo that means you can have a single Signet chain that everybody can point to that can have all sorts of soft forks going on at the same time and it's not really bothering anybody else.\\nSo it's kind of nice because with Testnet you really, I guess you can do the same on Testnet but yeah.\"}, {\"type\":\"heading\",\"text\":\"The main benefits of Signet\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:13:29\"}, {\"type\":\"paragraph\",\"text\":\"All right, any other benefits?\\nWhat else do our listeners need to know about Signet?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:13:33\"}, {\"type\":\"paragraph\",\"text\":\"I think the main benefit is that you can run your own if you have some sort of, you know, a large operation and you want to test all sorts of scenarios.\\nIf you want to test reorgs, then you can either ask, you know, some of the current Signet operators to do reorg for you or you can run your own Signet and have reorgs on it, and if you want to be cool and you want to do 10000 block reworks then you can do that.\\nAnd you can have other people join and you can spin up an explorer and people can point to it.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:02\"}, {\"type\":\"paragraph\",\"text\":\"All right.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:03\"}, {\"type\":\"paragraph\",\"text\":\"So I think it's pretty cool, but it's not like life changing or anything.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:07\"}, {\"type\":\"paragraph\",\"text\":\"It's been in development for a while, right?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:09\"}, {\"type\":\"paragraph\",\"text\":\"Correct, and it's already used in C-Lightning.\\nSo you can use an older version of Signet inside of C-Lightning.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:17\"}, {\"type\":\"paragraph\",\"text\":\"Okay.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:18\"}, {\"type\":\"paragraph\",\"text\":\"But they changed the Genesis block again a couple times.\\nSo C-Lightning will be updated, I think, to have the new version of it.\\nAnd so that's nice.\\nYou can test Lightning stuff on a Signet, which is, you know, it's interesting because you want to have multiple nodes with weird latency all over the world and Signet is a nice thing for that.\\nTestnet is absolutely horrible for for lightning because if you get a 15000 block reorg you know your channels just blow up.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:42\"}, {\"type\":\"paragraph\",\"text\":\"Yeah okay so and this was merged into Bitcoin Core last week or something like that?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:48\"}, {\"type\":\"paragraph\",\"text\":\"A few days ago.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:49\"}, {\"type\":\"paragraph\",\"text\":\"And that means it will be included in the next Bitcoin Core release?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:52\"}, {\"type\":\"paragraph\",\"text\":\"Yep.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:53\"}, {\"type\":\"paragraph\",\"text\":\"Which is scheduled for a couple months from now?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:14:56\"}, {\"type\":\"paragraph\",\"text\":\"This fall.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:14:57\"}, {\"type\":\"paragraph\",\"text\":\"This fall.\\nAll right.\\nSjors, anything else we need to discuss about Signet?\\nOr is that it?\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:15:04\"}, {\"type\":\"paragraph\",\"text\":\"No, I think it's a pretty brief one.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:15:06\"}, {\"type\":\"paragraph\",\"text\":\"Yeah, great.\\nI like brief ones.\"}, {\"type\":\"paragraph\",\"text\":\"Sjors Provoost: 00:15:10\"}, {\"type\":\"paragraph\",\"text\":\"All right, so thank you for listening to the Van Wirdum Sjorsnado.\"}, {\"type\":\"paragraph\",\"text\":\"Aaron van Wirdum: 00:15:17\"}, {\"type\":\"paragraph\",\"text\":\"There you go.\"}",
    "body": "## Intro\n\nAaron van Wirdum: 00:00:07\n\nLive from Utrecht, this is the Van Wirdum Sjorsnedo.\nHello! Sjors, welcome.\n\nSjors Provoost: 00:00:12\n\nThank you.\nIt's good to be back.\nWell, I never left, but...\n\nAaron van Wirdum: 00:00:15\n\nYeah, well, we're at your home now, so you never left, I think.\nYou probably literally never left because of corona\n\nSjors Provoost: 00:00:21\n\nExactly we're at my secret location\n\nAaron van Wirdum: 00:00:25\n\nHow are you enjoying the second wave?\n\nSjors Provoost: 00:00:26\n\nIt's amazing\n\nAaron van Wirdum: 00:00:28\n\nIt is happening isn't it?\n\nSjors Provoost: 00:00:30\n\nYeah it's clearly happening we've crossed every threshold value there is.\n\nAaron van Wirdum: 00:00:34\n\nNow it's just waiting for things to get worse\n\nSjors Provoost: 00:00:37\n\nYeah I mean the amazing measure after three weeks of warnings that was taken was to close bars like one hour earlier, that's not gonna do it, so...\n\nAaron van Wirdum: 00:00:46\n\nYeah, it was like the R value was way too high, so now they made a very strict measure of closing bars one hour early.\n\nSjors Provoost: 00:00:53\n\nYeah which I'm sure will reduce.\n\nAaron van Wirdum: 00:00:54\n\nNothing's gonna change obviously.\n\nSjors Provoost: 00:00:56\n\nWell yeah but the number still keeps going up so eventually there's probably going to be some sort of lockdown.\nBecause the difference between now and the last time is the last time the numbers were bad and everybody was worried and now the numbers are bad and nobody's worried.\n\nAaron van Wirdum: 00:01:10\n\nYeah.\nAre you expecting a real full-blown lockdown this time in the Netherlands?\n\nSjors Provoost: 00:01:15\n\nWell, we never had one.\nI don't know.\nI think it will be more strict than last time, but I don't think it'll be Australian style.\n\nAaron van Wirdum: 00:01:22\n\nRight.\nYeah.\nSo anyways, this episode is not about Corona.\nNope.\nThis episode is about Signet.\n\nSjors Provoost: 00:01:29\n\nIndeed, Signet.\n\n## Explaining the difference between Testnet and the real Bitcoin network technically.\n\nAaron van Wirdum: 00:01:30\n\nSo Signet.\nSo this is a new version of Testnet.\nSo let's start with Testnet.\n\nSjors Provoost: 00:01:34\n\nYeah, or start with Mainnet.\n\nAaron van Wirdum: 00:01:37\n\nAre you going to explain everything about Mainnet now first?\n\nSjors Provoost: 00:01:39\n\nNo, just to point out that in the early days Bitcoin was practically worthless, so you could just test everything on production.\n\nAaron van Wirdum: 00:01:46\n\nOkay.\n\nSjors Provoost: 00:01:47\nAnd now that Bitcoin is not worthless, you know, you don't want to test things on production.\nIn general, you do not want to test things on production.\nSo there's this additional network that is identical to Bitcoin and that's called Testnet.\n\nAaron van Wirdum: 00:02:00\n\nYeah, it's basically a clone of Mainnet which was created I think by, I think Gavin Andresen created this back in, what would have been 2011, 12, 13?\nProbably before, I don't know.\n\nSjors Provoost: 00:02:13\n\nBut it was designed to be worthless, but of course some people are idiots, so they started trading it.\nBecause, you know, it's probably better than any altcoin.\n\nAaron van Wirdum: 00:02:21\n\nRight, because it's just Bitcoin.\n\nSjors Provoost: 00:02:24\n\nWell, Bitcoin with a few gotchas.\nI think the main gotcha is that if nobody mines a block, the difficulty goes back down, so that anyone can mine a block again.\n\nAaron van Wirdum: 00:02:33\n\nOh, the difficulty adjusts faster on Testnet?\n\nSjors Provoost: 00:02:36\n\nYeah, there's basically after 20 minutes what we would now call emergency difficulty adjustment, which just basically sets the difficulty right back to zero or whatever the lowest number is.\n\nAaron van Wirdum: 00:02:46\n\nRight, right, right.\n\nSjors Provoost: 00:02:48\n\nSo what you see is usually 20 minutes, nothing, and then all of a sudden, one block comes in or a whole series of block comes in.\n\nAaron van Wirdum: 00:02:55\n\nAnd that just resets difficulty to one?\n\nSjors Provoost: 00:02:58\n\nExactly, and the problem is that some joker with a big ASIC miner mines a bunch of blocks on Testnet and creates really high difficulty because the difficulty keeps adjusting up and then they just go away.\nAnd nobody can mine a block anymore.\nBut after 20 minutes it goes back.\n\n## Aaron and Sjors explain what's wrong with Testnet\n\nAaron van Wirdum: 00:03:15\n\nSo first of all, I think what you were going to say, but I'm not sure, is that the thing about Testnet is that it's not supposed to have any value.\nAnd then if for some reason it does get value, like some people start trading it and hoarding it and holding it, then actually the whole Testnet is just reset because people are really punished in a way for giving it value.\n\nSjors Provoost: 00:03:35\n\nYeah, I think that happened once or twice.\nThe current Testnet is called Testnet3.\n\nAaron van Wirdum: 00:03:39\n\nRight, so just to make sure that it has no value, that's the whole point of having this network.\nIt should have no value so people can use it to test stuff on.\n\nSjors Provoost: 00:03:48\n\nThat's right.\n\nAaron van Wirdum: 00:03:48\n\nOkay, so then the problem is, and that was the other thing you were explaining, is that this network, this test network, because it has no value, there's no real incentive and mining economy around hash power, and therefore it's unstable.\nSo sometimes blocks are, like you mentioned, mined very fast and all of a sudden you have, you have a whole bunch of blocks and then this ASIC clown leaves and then there's no blocks for a while and it's unstable and this does not make for an ideal test environment.\n\nSjors Provoost: 00:04:24\n\nThere's other problems like you might have a reorg of 15,000 blocks, which is not realistic, or I think in the beginning, SegWit blocks didn't get mined.\nI don't even think it was censorship, it was just nobody was bothering.\n\nAaron van Wirdum: 00:04:38\n\nRight.\n\nSjors Provoost: 00:04:39\n\nSo all these kind of problems, yeah, it's time to get rid of it.\nWell, not to get rid of it, but time to have something else as well.\n\nAaron van Wirdum: 00:04:45\n\nYeah, so you have a proof-of-work chain without all the benefits of proof-of-work.\n\nSjors Provoost: 00:04:51\n\nYeah it's basically the worst of both worlds.\nIt's all the downsides of proof-of-work because you do need to you know have it but you just you don't have the incentives that go with it so it's just a mess.\n\nAaron van Wirdum: 00:05:00\n\nIt's a messy test environment.\nSo what's Regnet?\nIs that what it's called?\nRegtest?\n\nSjors Provoost: 00:05:07\n\nYeah, Regtest.\nSo basically regression testing.\nThere is another version that you can spin up that's called Regtest\n\nAaron van Wirdum: 00:05:14\n\nIt's version of Testnet\n\nSjors Provoost: 00:05:16\n\nIt's Testnet-ish but it's a different kind of network.\nSo Bitcoin Core defines three types of networks: Mainnet, Testnet, and Regtest.\nAnd the last one...\n\nAaron van Wirdum: 00:05:25\n\nSo, just to be clear about this, because this is maybe slightly interesting for someone who...\nI wasn't even sure about this.\nSo Bitcoin Core actually embeds this stuff.\nBitcoin Core embeds Testnet.\nThere's like an option in Bitcoin Core to use Testnet.\n\nSjors Provoost: 00:05:39\n\nYeah, you launch Bitcoin Core with \"-testnet\".\n\nAaron van Wirdum: 00:05:42\n\nRight, so you download the Bitcoin Core software and then you can choose Mainnet or Testnet.\n\nSjors Provoost: 00:05:48\n\nOr Regtest.\n\nAaron van Wirdum: 00:05:49\n\nOr Regtest, which you're gonna explain now.\n\nSjors Provoost: 00:05:50\n\nAnd so I think the biggest difference with Regtest is that it has no difficulty adjustment.\nOr something like that.\n\nAaron van Wirdum: 00:05:55\n\nOkay. Is that the biggest?\n\nSjors Provoost: 00:05:55\n\nBasically the use case for that is you run a test on your own computer.\nSo Bitcoin Core has a whole bunch of tests.\nAnd those tests actually spin up a node that really produces blocks and reorgs and makes transactions and rejects transactions and all these things.\nBut you don't want to have this huge CPU waste when you're running your tests to have this difficulty.\nSo I think they're all just trivially easy.\n\nAaron van Wirdum: 00:06:19\n\nBut it's only on your own computer, this one.\nYou're not sharing it with other people.\n\nSjors Provoost: 00:06:24\n\nYeah, not necessarily, but in practice, that's how you use it.\nYou spin up a bunch of nodes on your own computer.\nNow in principle, they're nodes, so they can run all over the network but the problem then is because anybody can create blocks you can just wipe out each other's chains and it wouldn't be very suitable to use with between different people on different networks it's not ideal for that.\n\nAaron van Wirdum: 00:06:44\n\nIt's even worse than Testnet for that.\nOkay so we have Testnet that's unstable, we have Regtest that's even more unstable especially if you use it with other people, but a bit better probably if you use it on your own.\nBut we're looking for something better.\n\nSjors Provoost: 00:06:59\n\nYes.\n\nAaron van Wirdum: 00:07:00\n\nWe want something better or not Sjors?.\n\nSjors Provoost: 00:07:02\n\nI would like something better.\n\nAaron van Wirdum: 00:07:03\n\nThat's what I thought.\nI don't really care either way, I'm not a developer, but for you, you want something better for sure.\n\nSjors Provoost: 00:07:10\n\nYes, it's nice to be able to develop on something and try it with other people.\nSo when you're working with other people, it's nice to have perhaps an explorer somewhere that you can point to, a faucet somewhere, some, you know, maybe somebody takes care of occasional reorgs, so you can write software that you know every day or every hour, it's gonna be three block re-org, and you can just make sure your software actually handles that.\nAlways kind of things you can do.\n\nAaron van Wirdum: 00:07:38\n\nSo Signet is the new Testnet.\n\nSjors Provoost: 00:07:40\n\nIt's not the new Testnet, it's another form.\n\nAaron van Wirdum: 00:07:43\n\nIt's a new Testnet.\nOkay, so once there's a Bitcoin core software release that has this implemented then you have four options. So you have Bitcoin Mainnet you have Bitcoin Testnet, you have Bitcoin Regtest and now you have another option which is Bitcoin Signet.\n\nSjors Provoost: 00:08:03\n\nThat's right.\n\n## Sjors explains how Signet solves some of the issues with Testnet\n\nAaron van Wirdum: 00:08:04\n\nYeah what is Signet?\n\nSjors Provoost: 00:08:05\n\nSignet is signed essentially and it's completely centralized.\nEvery block is signed.\n\nAaron van Wirdum: 00:08:14\n\nEvery block must be signed for it to be valid.\n\nSjors Provoost: 00:08:16\n\nCorrect.\nSo when you receive a new block, you check the proof-of-work, but that can be trivially low and then...\n\nAaron van Wirdum: 00:08:23\n\nRight, it still has proof-of-work as well.\n\nSjors Provoost: 00:08:25\n\nIt does, yes.\n\nAaron van Wirdum: 00:08:26\n\nAnd then you need a valid signature on top of the proof-of-work for the block to be valid.\n\nSjors Provoost: 00:08:31\n\nCorrect.\n\nAaron van Wirdum: 00:08:31\n\nPlus of course the rest of the block needs to be valid like always all the transactions.\n\nSjors Provoost: 00:08:37\n\nThe signature is included in in one of the Coinbase transactions or in the Coinbase transaction as one of the outputs.\nBasically what you do is you create a block and then you add the signature to it and then you start grinding to find a proof-of-work.\nAnd there's a couple of fields you cannot change when you do that.\nBut in principle, you know, you can try a couple of nonces and then you sign again and you try some other nonces.\n\nSjors Provoost: 00:09:03\n\nEventually you mine a block.\nSo that's all the same.\n\nAaron van Wirdum: 00:09:05\n\nSo who's creating the signature?\n\nSjors Provoost: 00:09:07\n\nSo the idea is that there can be more than one Signet, so we'll get into that, but in this case, the main Signet, the default Signet, is probably a better way to say it, is checked by a **one of two multi-sig**.\nSo a Signet can have any arbitrary rules for what the block should be signed with, and the rule that's picked for the main one is a one out of two multi-sig.\nSo there are two public keys out there, and I think, yeah, it's disclosed on the list.\nSo it's Kalle Alm and AJ Towns.\nThey have either of the keys.\nSo if one of their computers disappears, Signet will go on.\nBut it's very clearly very centralized in this sense.\nSo they sign the block and then it's fine.\nAnd they sign one every 10 minutes.\n\nAaron van Wirdum: 00:09:51\n\nOne of them signs one every 10 minutes.\n\nSjors Provoost: 00:09:54\n\nExactly.\nAnd the other one just stands by if one of them goes away.\n\nAaron van Wirdum: 00:09:57\n\nJust in case.\nRight, so you know for sure there's gonna be one block every 10 minutes, so that makes it stable?\n\nSjors Provoost: 00:10:03\n\nThat's the idea.\nAnd because they can both agree not to annoy each other with increasing the difficulty, you won't have that kind of problems.\n\nAaron van Wirdum: 00:10:13\n\nRight.\n\nSjors Provoost: 00:10:13\n\nNow, it's just a Signet.\nIt's the default that Bitcoin Core will ship with, but you have a simple parameter that you can start Bitcoin Core with to find any other Signet.\nSo anybody can create their own super centralized Signet.\nThat's kind of the trade-off.\n\nAnd they can have arbitrary conditions.\nSo you could have, especially with Taproot, a 1000 out of 300000 multi-sig weird construction that could be valid too for a Signet there's probably no reason to do it it's probably enough to just have a one of two or one of three.\n\nAaron van Wirdum: 00:10:44\n\nRight, you can use it to test your new software or whatever you're testing.\nI would imagine that because of this structure, wouldn't it also make it unsuited to test certain stuff?\nI'm just thinking out loud here, but if you want to test something proof-of-work related or something like that, I can imagine that it's actually getting in the way as well sometimes or not?\n\nSjors Provoost: 00:11:07\n\nI would say you can test whatever you want, because it still has proof-of-work.\nSo you could have a one-of-two signature and one of the two could increase the work, could just start mining with more work.\nAnd so triggering reorgs that way.\n\nAaron van Wirdum: 00:11:21\n\nAre there any trade-offs or downsides then to Signet or do you think it's just strictly better than Testnet?\n\nSjors Provoost: 00:11:27\n\nWell, it's extremely centralized, the default Signet, but because everybody can make their own Signet that's kind of not an issue either\n\nAaron van Wirdum: 00:11:35\n\nYeah, plus it's just for testing anyways and it's valueless anyways\n\nSjors Provoost: 00:11:39\n\nExactly, so I don't see any downside.\nI also don't see any reason to get rid of Testnet but this is just an option you have.\nAnd yeah, so Kalle says \"Hello\".\nI talked to him earlier today.\n\nAaron van Wirdum: 00:11:52\n\nHello.\n\nSjors Provoost: 00:11:53\n\nAnd one of the things he pointed out is that you can test soft forks with this pretty easily by just shipping a new version of the Signet code, or running your own branch of the Signet code, your own Bitcoin Core branch, which happens to check that soft-fork, whereas others can simply ignore the soft fork.\nSo let's say they do an update that has Taproot in it, and they say, well, as of Signet block 1000, taproot is now activated.\nAnd so if you run the old version of Signet code, the one that's in Bitcoin Core now, you'll just ignore it because this is a soft-fork.\n\nAaron van Wirdum: 00:12:35\n\nYeah, well you'll still follow the chain, you'll still be fine with it, you're just not enforcing.\n\nSjors Provoost: 00:12:41\n\nYou're not checking any of the Taproot rules.\nBut if you have that version you will check the Taproot rules.\nAnd now what if Taproot rules are changed?\nBecause it's still work in progress so the consensus rules around Taproot might change, right?\nOr there could be a bug in the first implementation.\nWell it's very simple.\nYou ship a new version of this Taproot Signet code and you activate it later.\nSo you basically say well now we activate Taproot at block 2000 and anything before that is ignored.\nSo that means you can have a single Signet chain that everybody can point to that can have all sorts of soft forks going on at the same time and it's not really bothering anybody else.\nSo it's kind of nice because with Testnet you really, I guess you can do the same on Testnet but yeah.\n\n## The main benefits of Signet\n\nAaron van Wirdum: 00:13:29\n\nAll right, any other benefits?\nWhat else do our listeners need to know about Signet?\n\nSjors Provoost: 00:13:33\n\nI think the main benefit is that you can run your own if you have some sort of, you know, a large operation and you want to test all sorts of scenarios.\nIf you want to test reorgs, then you can either ask, you know, some of the current Signet operators to do reorg for you or you can run your own Signet and have reorgs on it, and if you want to be cool and you want to do 10000 block reworks then you can do that.\nAnd you can have other people join and you can spin up an explorer and people can point to it.\n\nAaron van Wirdum: 00:14:02\n\nAll right.\n\nSjors Provoost: 00:14:03\n\nSo I think it's pretty cool, but it's not like life changing or anything.\n\nAaron van Wirdum: 00:14:07\n\nIt's been in development for a while, right?\n\nSjors Provoost: 00:14:09\n\nCorrect, and it's already used in C-Lightning.\nSo you can use an older version of Signet inside of C-Lightning.\n\nAaron van Wirdum: 00:14:17\n\nOkay.\n\nSjors Provoost: 00:14:18\n\nBut they changed the Genesis block again a couple times.\nSo C-Lightning will be updated, I think, to have the new version of it.\nAnd so that's nice.\nYou can test Lightning stuff on a Signet, which is, you know, it's interesting because you want to have multiple nodes with weird latency all over the world and Signet is a nice thing for that.\nTestnet is absolutely horrible for for lightning because if you get a 15000 block reorg you know your channels just blow up.\n\nAaron van Wirdum: 00:14:42\n\nYeah okay so and this was merged into Bitcoin Core last week or something like that?\n\nSjors Provoost: 00:14:48\n\nA few days ago.\n\nAaron van Wirdum: 00:14:49\n\nAnd that means it will be included in the next Bitcoin Core release?\n\nSjors Provoost: 00:14:52\n\nYep.\n\nAaron van Wirdum: 00:14:53\n\nWhich is scheduled for a couple months from now?\n\nSjors Provoost: 00:14:56\n\nThis fall.\n\nAaron van Wirdum: 00:14:57\n\nThis fall.\nAll right.\nSjors, anything else we need to discuss about Signet?\nOr is that it?\n\nSjors Provoost: 00:15:04\n\nNo, I think it's a pretty brief one.\n\nAaron van Wirdum: 00:15:06\n\nYeah, great.\nI like brief ones.\n\nSjors Provoost: 00:15:10\n\nAll right, so thank you for listening to the Van Wirdum Sjorsnado.\n\nAaron van Wirdum: 00:15:17\n\nThere you go.\n\n",
    "body_type": "markdown",
    "created_at": "2020-09-25T00:00:00.000Z",
    "domain": "https://btctranscripts.com/",
    "url": "https://btctranscripts.com/bitcoin-explained/explaining-signet",
    "categories": [
        "podcast"
    ],
    "tags": [
        "signet"
    ],
    "media": "https://www.youtube.com/watch?v=lGJaIbpf6bk",
    "authors": [
        "Sjors Provoost",
        "Aaron van Wirdum"
    ],
    "indexed_at": "2024-03-21T16:33:36.129Z",
    "transcript_by": "sir-oro via review.btctranscripts.com",
    "summary": "In the latest episode of the Van Wirdum Sjorsnedo podcast, Sjors Provoost and Aaron van Wirdum embarked on an insightful discussion about the evolution and significance of Bitcoin's test environments, with a special focus on the innovative introduction of Signet. Amidst the backdrop of a global pandemic, their conversation transitioned from light-hearted banter to a deep dive into the technical intricacies of Bitcoin's development challenges and solutions. This blog post aims to encapsulate the essence and key insights of their dialogue.\n\nThe necessity of a testing ground separate from Bitcoin's Mainnet became evident as the cryptocurrency gained value and prominence. Initially, developers conducted tests directly on the Mainnet due to its negligible value, but this practice soon became impractical. To address this, Gavin Andresen introduced Testnet, a clone of Mainnet for developmental purposes without financial stakes. Despite its intended purpose, Testnet inadvertently acquired value, leading to its periodic resets. However, erratic block production rates and unrealistic reorganization events due to its lack of a real mining incentive structure rendered Testnet less effective for development and testing.\n\nAcknowledging the limitations of Testnet and Regtest, the latter being unsuitable for collaborative or network-wide testing scenarios due to its isolated nature, the hosts introduced Signet as a beacon of hope. Signet, the new and improved version of Testnet, offers a more stable and realistic testing environment by providing a controlled setting where developers can simulate network conditions accurately without the unpredictability associated with Testnet\u2019s mining dynamics. This advancement is crucial for ensuring robustness before deployment on Mainnet, fostering innovation, and maintaining the integrity of new features within the Bitcoin ecosystem.\n\nDelving deeper, Sjors Provoost shed light on Signet's architecture, which relies on a one-of-two multi-signature scheme for block validation, primarily managed by Kalle Alm and AJ Towns. Unlike traditional testnets, Signet ensures the validity of every block through centralized signing, offering stability and predictability with block generation every 10 minutes. Its flexibility allows for the creation of custom Signets, enabling varied testing scenarios and making it an invaluable tool for developers experimenting with new features or updates before their mainnet deployment.\n\nMoreover, Signet facilitates the testing of soft forks, such as Taproot, by allowing different versions to coexist under specific consensus rules. This capability simplifies the process of introducing and validating new features within the Bitcoin protocol and provides a reliable testing ground for second-layer solutions like C-Lightning on the Lightning Network. The inclusion of Signet in the upcoming Bitcoin Core release underscores its value and potential impact on the Bitcoin ecosystem, marking a significant step toward more efficient, reliable, and flexible testing environments for developers and contributors.\n\nIn conclusion, the advent of Signet represents a pivotal enhancement in the realm of Bitcoin development, addressing past inefficiencies and paving the way for a smoother integration of future upgrades and enhancements. Through their comprehensive analysis, Provoost and van Wirdum have highlighted the critical role of reliable testing environments like Signet in advancing the technological foundations of Bitcoin, promising to bolster the quality and safety of future Bitcoin technologies."
}