{
    "id": "bitcointranscripts+bitcoin-core-dev-tech+2023-04+2023-04-27-asmap",
    "title": "ASMap",
    "body_formatted": "{\"type\":\"heading\",\"text\":\"Should we ship it every Core release?\"}, {\"type\":\"list\"}, {\"type\":\"heading\",\"text\":\"How to validate it?\"}, {\"type\":\"list\"}, {\"type\":\"heading\",\"text\":\"Network topology\"}, {\"type\":\"list\"}, {\"type\":\"heading\",\"text\":\"Documentation\"}, {\"type\":\"list\"}, {\"type\":\"heading\",\"text\":\"Reliability on data sources\"}, {\"type\":\"list\"}",
    "body": "## Should we ship it every Core release?\n\n- The initial idea is shipping a map file every Core release. Fabian wrote an article about how would be integrated into the deployment (<https://gist.github.com/fjahr/f879769228f4f1c49b49d348f80d7635>).\n- Some devs pointed out an option would be to have it separated to the release process, any regular contributor could update it whenever they like (who would do it? frequency?). Then when the release comes around one of the recent ones will be chosen. People running their own node can also choose the latest version from this repo and use it if they want a newer version.\n\n## How to validate it?\n\n- Validation has been pointed out as the most difficult step of the process.\n- In order to give a definitive answer that an asmap file is definitely not malicious we would need some manual work, potentially a lot and more than we can handle for a single release, we have tools to compare different files, but it's hard to check what the diffs mean.\n- Certain checks can still be done in a timely manner and even automated, we will try to do that as much as possible\n- PeeringDB has a track record of ASes, could help on this process? Someone used it for manual verification.\n\n## Network topology\n\n- There were some discussions about topology. If most nodes adopt asmap, would it probably affect network topology?\n- (This discussion was based on a presentation of vir7u but most hadn\u2019t seen the presentation so it stayed mostly hypothetical. Contributors will reach out to him to get more insights and the recording of the talk should be uploaded shortly.)\n\n## Documentation\n\n- Do we have documentation about how users could generate their own file? (maybe in Core?) Yes but currently there are three different tools that make it possible and we need to get to consensus which tool should be used for what and then we can update the docs.\n\n## Reliability on data sources\n\n- To build it, we fetch data from RIPE RIS, RPKI and IRR. Some people pointed out about the reliability of these data sources. Should we trust them? How can we know if they are not acting maliciously at some point? The data sources were selected and are preferred based on the security they provide. RPKI is the most secure but only provides 70% coverage so we need the other sources (see in-depth discussion of data sources here: <https://gist.github.com/fjahr/bf0ff0917e03a4e49fac0617b2b35747>)\n\n- Someone asked whether one the data sources has signatures.\n  - RPKI is used to let the legitimate holder of a block of IP addresses make an authoritative statement about which AS is authorized to originate their prefix in the BGP\n\n",
    "body_type": "markdown",
    "created_at": "2023-04-25T00:00:00.000Z",
    "domain": "https://btctranscripts.com/",
    "url": "https://btctranscripts.com/bitcoin-core-dev-tech/2023-04/2023-04-27-asmap",
    "categories": [
        "core-dev-tech"
    ],
    "tags": [
        "bitcoin core",
        "security-enhancements"
    ],
    "authors": [
        "Fabian Jahr"
    ],
    "indexed_at": "2024-03-21T16:33:36.018Z",
    "summary": "In the realm of Bitcoin Core development, a new proposition has been outlined by Fabian Jahr regarding the integration of map files with each Core release. This innovative approach aims to enhance the deployment process by including a map file, which could significantly streamline the update and maintenance procedures for nodes within the network. However, this suggestion has sparked a debate among developers concerning the feasibility and practicality of merging this process with the regular release cycle. An alternative proposal suggests maintaining the map file updates separately from the Core releases, allowing contributors to make adjustments independently. This method would enable node operators to select the most recent map file at their discretion, ensuring they have access to the latest version without waiting for an official release.\n\nThe validation of these map files emerges as a critical challenge, underscored by the necessity to ensure their integrity and non-malicious nature. Given the potential complexities involved in manually scrutinizing these files, the developer community acknowledges the need for substantial effort in this area, possibly exceeding the resources available for any single release. While there are tools available for comparing different map files, deciphering the implications of the differences remains a formidable task. Despite these hurdles, some automation and timely checks are considered achievable, aiming to streamline the validation process as much as possible. Additionally, leveraging databases like PeeringDB, known for its track record with Autonomous Systems (ASes), could facilitate manual verification efforts, offering a layer of reassurance about the map files' authenticity.\n\nThe conversation around map files also extends into discussions on network topology. Speculation abounds regarding the impact widespread adoption of map files could have, potentially altering the network's structure. Although these discussions were primarily hypothetical, owing to the lack of widespread familiarity with a pertinent presentation by vir7u, there's concerted interest in further exploration. The intent is to gather more insights and review the recorded talk for a deeper understanding of the possible topological ramifications.\n\nDocumentation, or the lack thereof, presents another obstacle in the broader implementation of map files. Currently, there are three distinct tools available for generating one's own map file, yet consensus on which tool serves best for specific scenarios is pending. Recognizing this gap, there's an acknowledged need for cohesive documentation, which would guide users in selecting and utilizing the appropriate tool for their needs.\n\nUnderpinning the construction of map files is the reliability of various data sources, such as RIPE RIS, RPKI, and IRR. Concerns have been raised regarding the trustworthiness of these sources, prompting a thorough evaluation of their security measures. Despite apprehensions, the selection of these data repositories was based on their provided security level, with RPKI, despite only covering 70% of the necessary data, being recognized for its robustness. This discussion highlights the ongoing vigilance required in safeguarding against potential malicious activities, underscoring the importance of verifying the legitimacy of data sources in the context of map file generation.\n\nIn summary, the integration of map files into Bitcoin Core releases presents a promising avenue for enhancing node operation and network health. However, it introduces challenges that require careful consideration, including validation processes, network topology effects, documentation clarity, and the reliability of underlying data sources. As the community navigates these issues, the collaborative effort towards refining and implementing this feature reflects the dynamic and meticulous nature of Bitcoin Core development."
}