{
    "id": "bitcointranscripts+bitcoin-core-dev-tech+2023-09+package-relay-planning",
    "title": "Package Relay Planning",
    "body_formatted": "{\"type\":\"heading\",\"text\":\"Package Relay Planning\"}, {\"type\":\"paragraph\",\"text\":\"What can we do better, keep doing?\"}, {\"type\":\"paragraph\",\"text\":\"This is all the work that needs to be done for package relay -> big chart\"}, {\"type\":\"paragraph\",\"text\":\"![package relay PRs](/bitcoin-core-dev-tech/2023-09/package-relay-todos.png)\"}, {\"type\":\"paragraph\",\"text\":\"Left part is mempool validation stuff. It\u2019s how we decide if we put transactions in the mempool after receiving them \u201csomehow\u201d.\"}, {\"type\":\"paragraph\",\"text\":\"Right is peer to peer stuff\"}, {\"type\":\"paragraph\",\"text\":\"Current master is accepting parents-and-child packages(every tx but last must be a parent of child), one by one, then all at the same time.\"}, {\"type\":\"paragraph\",\"text\":\"It's a simplification, but also economically wrong. Missing general ancestor packages. Required topo sorting. Allows \u201cparent pays for child\u201d weirdness.\"}, {\"type\":\"paragraph\",\"text\":\"What does [#26711](https://github.com/bitcoin/bitcoin/pull/26711) do? Sipa's recap:\"}, {\"type\":\"list\"}, {\"type\":\"paragraph\",\"text\":\"Rationale: No quadratic validation, easier to reason about, captures most of the economic value in CPFP situations.\"}, {\"type\":\"paragraph\",\"text\":\"We don\u2019t want to cause additional relay failure due to inconsistency\"}, {\"type\":\"paragraph\",\"text\":\"Don't trust just \\\"total package feerate\\\", parent-pays-for-child. Hard to prove who is being pathological though, no way to punish. Just drop those last transactions in that case.\"}, {\"type\":\"paragraph\",\"text\":\"Get submitpackage to MVP, on mainnet? Get it out for experimentation.\"}, {\"type\":\"heading\",\"text\":\"P2P\"}, {\"type\":\"paragraph\",\"text\":\"Modularize orphan handling to make more robust,\\nonly behavior change is we can try resolution\\nwith multiple peers. Required change for package relay.\\nAttacker announces packages first, withholds.\"}, {\"type\":\"paragraph\",\"text\":\"Second part introduces some p2p messages\\nincluding negotiation, ancestor package messages.\\nGet all unconfirmed transactions by WTXID.\"}, {\"type\":\"paragraph\",\"text\":\"Third introduces rest. Adds getpkgtxns,  pktxns, use\\nProcessNewPackage. Exposes package relay in proper,\\nallows package CPFP.\"}, {\"type\":\"paragraph\",\"text\":\"Orphanage token system. Don't want honest users knocked\\nout of mempool.\"}, {\"type\":\"paragraph\",\"text\":\"Laid out her plan of attack, what can be done to make\\nreview more open or appealing?\"}, {\"type\":\"paragraph\",\"text\":\"\\\"Does it make sense to have both of these branches in parallel?\\\" meaning\\nDoes it make sense to focus on one side or another?\"}, {\"type\":\"paragraph\",\"text\":\"Focus on package evaluation, get that in, then rebase p2p on that?\"}, {\"type\":\"paragraph\",\"text\":\"Could put all other PRs in draft, currently only top\\np2p one is not in draft.\"}, {\"type\":\"paragraph\",\"text\":\"Ask people if targeting 27.0 for submitpackage mainnet?\"}, {\"type\":\"paragraph\",\"text\":\"Find the people who have the depth of understanding on the systems\\nyou are trying to design. Would a design document help? Did it help\\nprevious projects? Could just be it's hard to rally review for other\\nreasons.\"}, {\"type\":\"paragraph\",\"text\":\"Based on our current understanding, the package evaluation\\nPRs look to be approach ACK'd. Right hand p2p side less so. There\\nare scattered docs, combine and present to key stakeholders.\"}, {\"type\":\"paragraph\",\"text\":\"Start review on left, document right.\"}",
    "body": "\n## Package Relay Planning\n\nWhat can we do better, keep doing?\n\nThis is all the work that needs to be done for package relay -> big chart\n\n![package relay PRs](/bitcoin-core-dev-tech/2023-09/package-relay-todos.png)\n\nLeft part is mempool validation stuff. It\u2019s how we decide if we put transactions in the mempool after receiving them \u201csomehow\u201d.\n\nRight is peer to peer stuff\n\nCurrent master is accepting parents-and-child packages(every tx but last must be a parent of child), one by one, then all at the same time.\n\nIt's a simplification, but also economically wrong. Missing general ancestor packages. Required topo sorting. Allows \u201cparent pays for child\u201d weirdness.\n\nWhat does [#26711](https://github.com/bitcoin/bitcoin/pull/26711) do? Sipa's recap:\n\n1) topo sort\n2) linearization step, Ancestor set scoring\n3) one by one evaluate subpackages in linearized order\n4) is this package acceptable to mempool from fee perspective?\n5) if so, accept try submitting, if not, keep going\n6) If accepted, ends up in mempool\n7) if failure(should be non-fee related), drop the rest of the package\n\nRationale: No quadratic validation, easier to reason about, captures most of the economic value in CPFP situations.\n\nWe don\u2019t want to cause additional relay failure due to inconsistency\n\nDon't trust just \"total package feerate\", parent-pays-for-child. Hard to prove who is being pathological though, no way to punish. Just drop those last transactions in that case.\n\nGet submitpackage to MVP, on mainnet? Get it out for experimentation.\n\n## P2P\n\nModularize orphan handling to make more robust,\nonly behavior change is we can try resolution\nwith multiple peers. Required change for package relay.\nAttacker announces packages first, withholds.\n\nSecond part introduces some p2p messages\nincluding negotiation, ancestor package messages.\nGet all unconfirmed transactions by WTXID.\n\nThird introduces rest. Adds getpkgtxns,  pktxns, use\nProcessNewPackage. Exposes package relay in proper,\nallows package CPFP.\n\nOrphanage token system. Don't want honest users knocked\nout of mempool.\n\nLaid out her plan of attack, what can be done to make\nreview more open or appealing?\n\n\"Does it make sense to have both of these branches in parallel?\" meaning\nDoes it make sense to focus on one side or another?\n\nFocus on package evaluation, get that in, then rebase p2p on that?\n\nCould put all other PRs in draft, currently only top\np2p one is not in draft.\n\nAsk people if targeting 27.0 for submitpackage mainnet?\n\nFind the people who have the depth of understanding on the systems\nyou are trying to design. Would a design document help? Did it help\nprevious projects? Could just be it's hard to rally review for other\nreasons.\n\nBased on our current understanding, the package evaluation\nPRs look to be approach ACK'd. Right hand p2p side less so. There\nare scattered docs, combine and present to key stakeholders.\n\nStart review on left, document right.\n\n",
    "body_type": "markdown",
    "created_at": "2023-09-20T00:00:00.000Z",
    "domain": "https://btctranscripts.com/",
    "url": "https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/package-relay-planning",
    "categories": [
        "core-dev-tech"
    ],
    "tags": [
        "bitcoin core",
        "package relay"
    ],
    "authors": [
        "Gloria Zhao"
    ],
    "indexed_at": "2024-03-21T16:33:36.032Z",
    "summary": "In a recent episode focusing on the development of Bitcoin Core, Gloria Zhao delves into the complexities and future plans for package relay improvements, an essential aspect of transaction processing and peer-to-peer communication within the network. Zhao outlines the current mechanisms and identifies areas for enhancement, providing a detailed roadmap for both mempool validation processes and peer-to-peer interactions that are pivotal for the efficient relay of transaction packages.\n\nThe conversation starts with an examination of the existing structure for handling transactions in Bitcoin Core, particularly how it deals with parent-and-child transaction packages. Zhao points out the limitations of the current system, such as its inability to process general ancestor packages and its requirement for topological sorting, which leads to economic inefficiencies and certain exploitable behaviors. This critique sets the stage for the introduction of a proposed solution encapsulated in GitHub pull request #26711, initially recapped by developer Pieter Wuille (Sipa).\n\nPull Request #26711 aims to address these concerns by introducing a series of steps including topological sorting, linearization of ancestor sets for scoring, and a methodical evaluation of subpackages based on their fee viability for mempool acceptance. This approach intends to eliminate quadratic validation issues, simplify the reasoning about transaction packages, and more accurately capture the economic incentives inherent in Child Pays For Parent (CPFP) scenarios. Zhao emphasizes the importance of avoiding additional relay failures due to inconsistencies in the evaluation process, advocating for a cautious approach to assessing combined transaction fees to maintain network integrity.\n\nShifting focus to the peer-to-peer (P2P) aspects of package relay, Zhao discusses efforts to modularize orphan transaction handling as a fundamental change required to support package relay. This includes the proposal of new P2P messages and negotiation protocols to facilitate the exchange of unconfirmed transactions, laying the groundwork for a more robust mechanism for Child Pays For Parent (CPFP) transactions through package relay. The introduction of an orphanage token system is highlighted as a measure to protect against malicious actors and ensure that honest users' transactions are not unfairly excluded from the mempool.\n\nZhao also touches upon the strategic approach to development, pondering whether to prioritize package evaluation improvements or P2P enhancements, and how to effectively organize and present proposed changes to garner support and thorough review from the developer community. The discussion concludes with an acknowledgment of the challenges in rallying review and the potential benefits of creating a comprehensive design document to facilitate understanding and feedback from stakeholders with deep knowledge of the system.\n\nThis episode provides valuable insights into the ongoing efforts to optimize Bitcoin Core's transaction processing and network communication capabilities. Through a careful analysis of existing shortcomings and a strategic plan for future development, Zhao and her collaborators aim to enhance the efficiency, security, and economic alignment of package relay within the Bitcoin network, ensuring its continued evolution and adaptability."
}