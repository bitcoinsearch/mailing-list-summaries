{
    "id": "bitcointranscripts+bitcoin-core-dev-tech+2023-09+p2p-design-goals",
    "title": "P2P Design Goals",
    "body_formatted": "{\"type\":\"heading\",\"text\":\"Guiding Questions\"}, {\"type\":\"list\"}, {\"type\":\"paragraph\",\"text\":\"Could give up fast propagations for privacy for txs that would be fine but not for blocks. Speed is the most important factor.\"}, {\"type\":\"paragraph\",\"text\":\"More difficult to censor transactions because we have this decentralized network\"}, {\"type\":\"paragraph\",\"text\":\"Want a transaction to get to a miner\"}, {\"type\":\"paragraph\",\"text\":\"If there is an attacker which censors a transaction so that it is not propagated is a bigger concern. So the number 1 concern for a tx is censorship resistance then.\"}, {\"type\":\"paragraph\",\"text\":\"This is where different kind of actors come into play. If you try to stop the block propagation then\"}, {\"type\":\"paragraph\",\"text\":\"The pools are running bitcoin core nodes - fast connection to get to send in the blockshares and get the blocktemplate but they connect to pools\"}, {\"type\":\"paragraph\",\"text\":\"Censoring the chaintip is a big deal but not having your tx in my mempool isn\u2019t a huge problem\"}, {\"type\":\"list\"}, {\"type\":\"paragraph\",\"text\":\"Censorship resistance - create a network where everyone where connects and passes around information\"}, {\"type\":\"list\"}",
    "body": "\n## Guiding Questions\n\n- _What are we trying to achieve?_\n- _What are we trying to prevent?_\n- _How so we weight performance over privacy?_\n- _What is our tolerance level for net attacks?_\n\n- Are we trying to add stuff to the network or are we trying to prevent people getting information?\n  - Network topology: By design we are trying to prevent the topology being known\n\n- Information creation, addresses, txs or blocks\n  - We want blocks at tips fast - consensus critical information needs to be as fast as possible - ability to get the information - forgetting that there are multiple networks - the purpose is to know what the current most work chain tip is\n    - Even the addr relay network - everything falls apart if you can\u2019t get that information\n    - The crux of the p2p network is to propagate what is the most work\n  - Txs can take much much longer but don\u2019t want to leak the source of the origin\n    - The privacy implications of Txs makes it difficult\n\nCould give up fast propagations for privacy for txs that would be fine but not for blocks. Speed is the most important factor.\n\nMore difficult to censor transactions because we have this decentralized network\n\nWant a transaction to get to a miner\n\nIf there is an attacker which censors a transaction so that it is not propagated is a bigger concern. So the number 1 concern for a tx is censorship resistance then.\n\nThis is where different kind of actors come into play. If you try to stop the block propagation then\n\nThe pools are running bitcoin core nodes - fast connection to get to send in the blockshares and get the blocktemplate but they connect to pools\n\nCensoring the chaintip is a big deal but not having your tx in my mempool isn\u2019t a huge problem\n\n- addrRelay exists to support these goals\n  - The goal of addr is decentralization\n  - Addr message may reveal about the network topology for example\n\nCensorship resistance - create a network where everyone where connects and passes around information\n\n- Your node doesn\u2019t know if you are a reachable node. The network will tell you if it is reachable. From a network perspective:\n  - Is providing inbounds purely altruistic\n  - From a personal standpoint, are there any advantages to accepting inbounds?\n    - Diversity? You have no guarantees that they aren\u2019t the same entities.\n    - If you are enabling inbounds - surface area vulnerability - we have mitigations in place but we have more influence on who you outbounds are over time\n    - We need peers that accept inbound connections because we need that for the network to run\n\n- We have completely different goals of outbound vs inbound conns\n  - Inbound - DoS defense and diversity\n  - Why are spynodes alway connected?\n    - They may be evicted but then they will just reconnect\n    - Or can connect from a different IP address\n    - They can use a different port\n    - It is intractable to keep track of them\n\n- Is Inbound defense below our tolerance level for network attacks?\n  - A ton of inbound conns to every listening node\n  - They would be evicted\n  - E.g. [Linking Lion](https://b10c.me/observations/06-linkinglion/):\n    - They would disconnect their own conn when they make a new conn (which was stupid)\n\n- Transaction requirements:\n  - As a user we want some degree to\n  - We are currently slowing down transactions for privacy considerations\n  - Dandelion might slow down propagation is on the order of 3 to 7 slow down - this is the current trickling?\n    - If there were requests to lower the propagation speed, would we push back?\n    - Network wide - we would index more on protecting the topology of the network over speed of propagation.\n  - Any transaction propagation delay around a block for LN is an issue. Would change all the computations for fee bumpings, etc.\n  - What is the threshold for slowing down the transactions for privacy benefits?\n  - Our design goals depends on who the user is\n  - NoBan... - turns off trickling for transactions - it\u2019s not safe, it\u2019s something we use in the tests\n\n- What do you feel is the tolerance level of attacks?\n  - This comes up for fingerprinting?\n    - Should we not care or not try to fix it?\n    - If you had infinite resources - you could partition the network and do bad things\n  - Think about it in terms of the cost of the attack\n    - Partition the network may cost X\n    - Map the topology may cost Y\n    - How do we make that cost go higher? How do we make the decision for how much is enough.\n\n",
    "body_type": "markdown",
    "created_at": "2023-09-20T00:00:00.000Z",
    "domain": "https://btctranscripts.com/",
    "url": "https://btctranscripts.com/bitcoin-core-dev-tech/2023-09/p2p-design-goals",
    "categories": [
        "core-dev-tech"
    ],
    "tags": [
        "bitcoin core",
        "p2p"
    ],
    "indexed_at": "2024-03-21T16:33:36.028Z",
    "summary": "In the realm of network security and performance within decentralized systems, a nuanced balance must be struck between speed, privacy, and resistance to censorship. This balance is critical in maintaining the integrity and functionality of peer-to-peer (P2P) networks, such as those used by cryptocurrencies like Bitcoin. The core objectives include ensuring rapid propagation of consensus-critical information, like the most recent block in the blockchain, while simultaneously safeguarding transaction privacy and bolstering the network against various forms of attack.\n\nThe design of P2P networks inherently aims at preventing the revelation of the network's topology, which is essential for maintaining privacy and security. Information regarding transactions (txs) and blocks needs to be distributed quickly across the network to maintain consensus on the chain's current state. However, while the swift dissemination of blocks is paramount, the transmission of transactions can afford to be slower if it means enhancing privacy by obfuscating the source of the transactions.\n\nNotably, the decentralization of the network plays a pivotal role in its ability to resist censorship attempts. An attacker's effort to prevent a transaction from being propagated poses a significant threat; hence, ensuring that transactions reach miners without interference is a top priority. The network's decentralized nature complicates such censorship efforts, providing a robust defense mechanism.\n\nAddress Relay (addrRelay) serves as a foundational component supporting these goals by facilitating decentralization. Yet, it also presents challenges, such as the potential inadvertent disclosure of network topology through addr messages. Balancing the need for decentralization with the risks associated with exposing network information requires careful consideration and ongoing adjustments to protocols.\n\nThe discussion around inbound and outbound connections further illustrates the complexity of network management. Accepting inbound connections increases a node's vulnerability to denial-of-service (DoS) attacks but is necessary for the network's overall health and functionality. Strategies to defend against such attacks, and the broader question of the network's tolerance level for them, are under constant evaluation. Concepts like Dandelion, which intentionally slows down transaction propagation to enhance privacy, exemplify the trade-offs made between speed and security.\n\nIn light of these considerations, the tolerance level for network attacks and the strategies employed to mitigate them are dictated by the overarching goal of preserving the network's integrity. This involves raising the cost and complexity of attacks to levels that deter potential attackers effectively. The pursuit of this balance requires a deep understanding of both the technical and strategic aspects of network design and operation.\n\nUltimately, the ongoing dialogue among developers, users, and stakeholders about how best to achieve these objectives underscores the dynamic nature of P2P network ecosystems. Decisions regarding the prioritization of speed, privacy, and security features are informed by a continuous assessment of threats and the evolving landscape of decentralized technologies."
}