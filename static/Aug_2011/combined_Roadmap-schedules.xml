<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Roadmap/schedules</title>
  <updated>2023-05-12T04:55:42.995413+00:00</updated>
  <author>
    <name>Matt Corallo 2011-08-11 08:48:09</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-08-10 18:57:53</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-10 16:59:14</name>
  </author>
  <link href="Aug_2011/000351_Roadmap-schedules.xml" rel="alternate"/>
  <link href="Aug_2011/000339_Roadmap-schedules.xml" rel="alternate"/>
  <link href="Aug_2011/000335_Roadmap-schedules.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Roadmap/schedules</title>
    <updated>2023-05-12T04:55:42.995413+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000351.html" rel="alternate"/>
    <summary>The email thread discusses several priorities for the Bitcoin project, including wallet security and encryption, testing, handling of critical section deadlocks caused by new code, and un-hardcoding fee handling. Regarding wallet security, Matt plans to ship wallet encryption along with groffer's multisign patch. However, there is a lack of documentation on how to prepare bitcoind installations for encryption, which needs to be addressed. In terms of testing, Gavin believes that more unit tests and automated testing are needed, while Matt suggests that quality assurance will naturally grow out of dedicated support organizations. The discussion also touches upon potential solutions for critical section deadlocks, such as re-architecting or doing a careful checking/rework of the locking system. Finally, Sipa's work on algorithms for un-hardcoding fee handling is noted as being useful.
Pieter, a contributor to Bitcoin network, proposed an idea for a reworked fee system. The main concept was to assign a score to each transaction group that keeps increasing over time and sort the memory pool accordingly. When a configurable memory limit is reached, the lowest scoring ones would be dropped, and for mining, the top N transaction groups from the pool would be selected to maintain an average configurable fee per byte. Each mining node would choose a cutoff score above which transactions are included, and the network would converge to a more or less fixed probability distribution for the score at which transactions are included. Nodes could measure and estimate this distribution and calculate expected time to inclusion for a given fee. However, Pieter didn't have the time to implement these ideas at the moment. Gavin Andresen, another contributor, mentioned his priority list for the next few months, including network health, chronic deadlock issue, wallet security, bug fixing, and testing. He also discussed the features he would like to see in the release-after-next, such as fClient mode, Sipa's wallet and key export/import, moving from wxWidgets to Qt for GUI, un-hardcoding fee handling, and research-y features.</summary>
    <published>2011-08-11T08:48:09+00:00</published>
  </entry>
</feed>
