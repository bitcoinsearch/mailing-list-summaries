<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Double spend detection to speed up transaction trust</title>
  <updated>2023-05-12T04:53:00.684874+00:00</updated>
  <author>
    <name>Matt Corallo 2011-08-05 21:30:50</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-05 21:23:09</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-05 12:06:09</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 22:21:53</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-04 22:18:40</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 20:38:25</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 20:33:29</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-04 20:08:07</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 18:39:56</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-05 12:00:02</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 22:16:13</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 17:45:17</name>
  </author>
  <link href="Aug_2011/000325_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000324_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000318_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000305_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000304_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000299_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000296_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000294_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000292_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000316_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000303_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000290_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Double spend detection to speed up transaction trust</title>
    <updated>2023-05-12T04:53:00.684874+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000325.html" rel="alternate"/>
    <summary>The conversation thread involves a discussion on the best metric to use as regards the number of incoming connection slots. Andy Parkins suggested that the bandwidth is a better metric than connection count, and Gregory Maxwell noted that people doing the "connect to everyone" are already causing harm, with nodes in .ru/.ua aggressively connecting to him (instant reconnects if he hangs up on them) which have never passed him a transaction in all his available logs. Stefan Thomas suggested that network support like a MSG_DOUBLESPEND would be better, but Gregory argued that it adds more network traffic for every double spend attempt, which does not happen very often. Andrew Schaaf suggested one double-spend fighting option to be for each mining pool to offer a real-time feed of accepted TXs. Matt Corallo believes that adding more crap to the protocols should be avoided, especially if it offers no gain.
The context revolves around a suggestion on detecting double-spends in Bitcoin transactions. The suggestion was to add an extra message (MSG_DOUBLESPEND) to the inventory list, which will be triggered when a transaction is received that has already been double-spent. However, Matt Corallo argues against it, citing that it would add more network traffic and complexity. He also points out that no one buying expensive items like Ferraris would refuse to wait for payment confirmation, while small vendors like vending machines may be vulnerable to such scams. Corallo believes that having well-connected peers and making good connections can prevent double-spends nearly perfectly. He further adds that Bitcoin is still an experiment and any mistake could mean significant financial loss to users. Lastly, he dismisses the idea of creating a Bitcoin backbone as a solution to the problem, saying it hasn't happened yet.
The discussion is related to the issue of detecting double-spends in Bitcoin transactions. The original proposal suggests that when a node drops a transaction, it should not be silent and instead broadcast with a new "inv" type called "MSG_DOUBLESPEND" instead of "MSG_TX". This would allow vendors to see the transaction that pays for goods near instantly and then operate whatever policy they want, such as waiting for 6, 10, or 20 confirmations, calling the police, or simply waiting until the transaction makes it into the longest block chain. The alternative proposal suggests that there is no need to add more stuff to the network protocol, and a well-connected node can easily monitor the miners/network for double-spends and alert whoever may need to know that the transaction should not be accepted. In addition, payment processors could also handle such double-spend checks and tell a merchant if the transaction is confirmed in ten seconds for small transactions, an hour for large ones, or anywhere in between. Furthermore, many storefronts don't need to care if a transaction confirms in 10 seconds or 1 hour, only digital goods and physical purchases could benefit from such speed increases.</summary>
    <published>2011-08-05T21:30:50+00:00</published>
  </entry>
</feed>
