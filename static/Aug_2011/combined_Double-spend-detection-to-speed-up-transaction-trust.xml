<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Double spend detection to speed up transaction trust</title>
  <updated>2023-05-15T18:58:26.506805+00:00</updated>
  <author>
    <name>Matt Corallo 2011-08-05 21:30:50</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-05 21:23:09</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-05 12:06:09</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 22:21:53</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-04 22:18:40</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 20:38:25</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 20:33:29</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-04 20:08:07</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 18:39:56</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-05 12:00:02</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 22:16:13</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 17:45:17</name>
  </author>
  <link href="Aug_2011/000325_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000324_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000318_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000305_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000304_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000299_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000296_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000294_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000292_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000316_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000303_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="Aug_2011/000290_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Double spend detection to speed up transaction trust</title>
    <updated>2023-05-15T18:58:26.506805+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000325.html" rel="alternate"/>
    <summary>The conversation among various individuals revolves around the use of metrics for choosing the number of incoming slots on the Bitcoin network. Andy Parkins proposes that bandwidth is a better metric than connection count, but Matt Corallo disagrees, with neither bandwidth nor connection count being good metrics for choosing the number of incoming slots. The discussion then shifts to the issue of double-spend transactions and the best way to prevent them.Andrew Schaaf suggests offering a real-time feed of accepted transactions, while Stefan Thomas recommends using network support such as MSG_DOUBLESPEND. However, Matt argues that adding more protocols could result in increased network traffic without offering any significant gain. Despite this, it was noted that detecting double-spends quickly is critical, and the importance of good connections in preventing double-spends was acknowledged.The conversation continues with Andy Parkins suggesting an extra message be added to the inventory list to notify users of double-spending transactions. However, Matt Corallo disagrees, stating that it would add more network traffic and complexity, and there was no clear incentive for such a change. Instead, he proposes peering with the largest miners to detect double-spending attempts and prevent them nearly perfectly. He also notes the conservative nature of the Bitcoin community when it comes to protocol changes.The issue of detecting double-spends in Bitcoin transactions is further discussed, with the current recommendation for vendors being to wait for six confirmations before releasing goods. One solution proposed is to make nodes notify users that a transaction should not be accepted until it makes it into a block. However, this suggestion is deemed unnecessary by some, as Bitcoin already prevents double-spends.Another proposal is made to broadcast a transaction with a new "inv" type, namely "MSG_DOUBLESPEND," when it is detected to be invalid due to a double-spend attempt. This addition would allow vendors to operate their policy on waiting for confirmations and miners to prioritize flagged transactions lower. It is also suggested that payment processors could handle such checks in the future.Finally, it is agreed that a well-connected node could easily monitor miners/network for double-spends and alert whoever needs to know that the transaction should not be accepted. Overall, the conversation highlights the importance of preventing double-spends promptly and efficiently in Bitcoin transactions.</summary>
    <published>2011-08-05T21:30:50+00:00</published>
  </entry>
</feed>
