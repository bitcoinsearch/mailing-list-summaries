<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>The context includes discussions on various topics such as front-running in peer-to-peer marketplaces, implementation of a two-way peg in Bitcoin Script, proposed mempool/transaction relay policies for L2/contract protocols, security risks in Lightning Network due to packet size analysis, a mathematical demonstration of blinding factors for onion routing, and the beta release of the Validating Lightning Signer (VLS) MVP2. These discussions cover a range of technical aspects and proposals related to blockchain and cryptocurrency technologies. Further details can be found in the provided sources and links.</title>
  <updated>2023-07-18T22:34:02.298175+00:00</updated>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>003998</id>
    <title>VLS Beta 1 released</title>
    <updated>2023-07-18T22:34:29.996685+00:00</updated>
    <author>
      <name>devrandom</name>
    </author>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003998.html" rel="alternate"/>
    <summary>{'summary': '1. The VLS Beta release focuses on enhancing security against accidental fund loss and malicious nodes in Lightning Network applications.2. It is recommended to run VLS in testnet or with limited funds until the production release milestone is reached and its protection aligns with specific use case requirements.3. Future releases of VLS will include features such as routing capabilities, BOLT-12 support, VSS Integration, and Multisig.', 'n_threads': 1, 'dev_name': 'lightning-dev'}</summary>
    <published>2023-06-28T16:19:19+00:00</published>
  </entry>
  <entry>
    <id>003999</id>
    <title>Computing Blinding Factors in a PTLC and Trampoline World</title>
    <updated>2023-07-18T22:34:26.779342+00:00</updated>
    <author>
      <name>ZmnSCPxj</name>
    </author>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/003999.html" rel="alternate"/>
    <summary>{'summary': "1. The mathematical demonstration presents a method to compute blinding factors for onion routing, allowing for properties such as non-Trampoline intermediate nodes only needing to know one blinding factor and the receiver only needing to know one blinding factor.2. In scenarios with intermediate nodes like Carol, the ultimate sender generates two scalars 'c' and 'd' such that 'c + d = e', encrypts the onion accordingly, and sends the PTLC to Carol with the point 'c * G + R'.3. When Carol is a Trampoline node, additional steps are followed to ensure the onion reaches the ultimate receiver. Carol selects scalars 'a' and 'b' such that 'a + b = d', creates an onion with the necessary ciphertext, and sends the PTLC to the next hop, Alice, with the point 'c * G + R + a * G'.", 'n_threads': 1, 'dev_name': 'lightning-dev'}</summary>
    <published>2023-06-28T20:34:37+00:00</published>
  </entry>
  <entry>
    <id>004000</id>
    <title>Equalizing Packet Size</title>
    <updated>2023-07-18T22:34:20.548895+00:00</updated>
    <author>
      <name>ZmnSCPxj</name>
    </author>
    <link href="https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-June/004000.html" rel="alternate"/>
    <summary>{'summary': '- Implementing uniform packet sizes in Lightning Network (LN) nodes can enhance security by preventing eavesdroppers from inferring the content of messages and deducing payment routing.- Modifying the object responsible for encrypting messages in BOLT8 tunnels to include a buffer ensures that packets sent are of uniform size, improving the effectiveness of the encryption.- Adding a randomized timer to periodically trigger a self-flush operation in the object enhances robustness against internal bugs and improves performance in case the implementation fails to initiate a flush.', 'n_threads': 1, 'dev_name': 'lightning-dev'}</summary>
    <published>2023-06-29T18:13:10+00:00</published>
  </entry>
  <entry>
    <id>021780</id>
    <title>New transaction policies (nVersion=3) for contracting protocols</title>
    <updated>2023-07-18T22:34:16.730382+00:00</updated>
    <author>
      <name>Greg Sanders</name>
    </author>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021780.html" rel="alternate"/>
    <summary>{'summary': '1. Gloria Zhao proposes a set of mempool/transaction relay policies to aid L2/contract protocols, including additional rules for V3 transactions and modifications to package RBF rules.2. The proposed rules aim to provide flexibility for L2 protocols while maintaining security and efficiency, allowing for easier fee-bumping and reducing the need for managing a large UTXO pool.3. The new package relay policy, if implemented, would replace BIP125 and includes changes to ensure replacement transactions are not less incentive-compatible to mine and that all package transactions with mempool conflicts must be Version 3 (V3).', 'n_threads': 25, 'dev_name': 'bitcoin-dev'}</summary>
    <contributor>
      <name>Antoine Riard</name>
    </contributor>
    <contributor>
      <name>Bastien TEINTURIER</name>
    </contributor>
    <contributor>
      <name>Gloria Zhao</name>
    </contributor>
    <contributor>
      <name>Ruben Somsen</name>
    </contributor>
    <published>2023-06-21T20:57:45+00:00</published>
  </entry>
  <entry>
    <id>021781</id>
    <title>Some Day Peg: A crazy two-way peg bridging BTC to other chains Raw</title>
    <updated>2023-07-18T22:34:12.898665+00:00</updated>
    <author>
      <name>Robin Linus</name>
    </author>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021781.html" rel="alternate"/>
    <summary>{'summary': '- Robin has shared an implementation of a two-way peg in Bitcoin Script, allowing for the transfer of assets between different blockchains.- The GitHub gist provides code for depositing and withdrawing funds using OP_RETURN and OP_CHECKMULTISIGVERIFY operations.- While not intended for production use, this implementation showcases the potential of Bitcoin Script for creating complex smart contracts and enabling interoperability between blockchains.', 'n_threads': 1, 'dev_name': 'bitcoin-dev'}</summary>
    <published>2023-06-22T11:49:41+00:00</published>
  </entry>
  <entry>
    <id>021782</id>
    <title>Civ Kit: A Peer-to-Peer Electronic Market System</title>
    <updated>2023-07-18T22:34:09.875208+00:00</updated>
    <author>
      <name>Antoine Riard</name>
    </author>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021782.html" rel="alternate"/>
    <summary>{'summary': '- Front-running in a peer-to-peer marketplace can occur when a board takes advantage of a market opportunity before publishing the offer on its board.- The concern is that this model resembles more of a brokerage rather than an exchange market structure, and it was suggested that participants should compete with each other by quoting prices to attract more market activity.- Security paradigms, such as duplicating offers to multiple boards and monitoring latency anomalies, were discussed to mitigate front-running in the CivKit architecture.', 'n_threads': 5, 'dev_name': 'bitcoin-dev'}</summary>
    <contributor>
      <name>Chris Stewart</name>
    </contributor>
    <published>2023-06-30T03:46:32+00:00</published>
  </entry>
</feed>
