<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2012-January-001100</id>
  <title>CAddrMan: Stochastic IP address manager</title>
  <updated>2023-05-04T21:10:07.039423+00:00</updated>
  <author>
    <name>Pieter Wuille</name>
  </author>
  <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001100.html" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001100.html</id>
    <title>CAddrMan: Stochastic IP address manager</title>
    <updated>2023-05-04T21:10:07.039423+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001100.html" rel="alternate"/>
    <summary>The author of the Satoshi bitcoin client is looking to move towards IPv6 support in the future. However, managing IP addresses has become difficult since all addresses ever seen are kept on-disk and in-memory, resulting in large addr.dat files that take time to load. After discussing with Gregory Maxwell and others, the author decided to write a specialized address manager that only keeps a limited number of addresses, indexes them in-memory, and occasionally dumps them to disk. This could lead to a weakness where attackers may try to poison the address cache with addresses they control to perform a Sybil attack, which is dangerous in the context of IPv6 since there are many more possible addresses. To protect against this, two tables were created - one for addresses with actual connections and another for untried/new addresses - both separated into several limited-size buckets. All crucial decisions are randomized with biases to improve efficiency, and selection of buckets is based on a cryptographic hash using a secret key to deterministically randomize behavior. The implementation is available in a pull request for testing, comments, constructive criticism, suggestions, and improvements.</summary>
    <published>2012-01-30T02:31:02+00:00</published>
  </entry>
</feed>
