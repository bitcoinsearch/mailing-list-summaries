<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>mailing-list-bitcoin-2017-January-013478</id>
  <title>Anti-transaction replay in a hardfork</title>
  <updated>2023-05-09T22:30:51.555137+00:00</updated>
  <author>
    <name>Johnson Lau</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>mailing-list-bitcoin-2017-January-013478</id>
    <title>Anti-transaction replay in a hardfork</title>
    <updated>2023-05-09T22:30:51.555137+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2017-January/013478.html" rel="alternate"/>
    <summary>The context is a discussion on the bitcoin-dev mailing list regarding replay attacks and how to protect against them in the case of a hard fork. The proposal suggests making old-format transactions valid only when paired with a fork-only follow-up transaction that spends at least one (or all) of the outputs of the old-format transaction. This introduces new statefulness into the block validation logic, but it is necessary for maximal fork safety. Meanwhile, the old network should soft-fork in an identical rule with a follow-up transaction format incompatible with the fork. This prevents old transactions from being replayed across forks/networks because they're not valid when stand-alone. The rules also state that old-format transactions can't reference new-format transactions, even if only a softfork change differs between the formats to prevent unnecessary amounts of transaction pairs generated by old wallets. All wallet clients need to be updated or paired with software that intercepts generated transactions and automatically generates the correct follow-up transaction for it (old network only).</summary>
    <published>2017-01-25T07:05:59+00:00</published>
  </entry>
</feed>
