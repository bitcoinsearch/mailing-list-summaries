<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - 0.4.x stable branch</title>
  <updated>2023-05-18T23:24:51.959656+00:00</updated>
  <author>
    <name>Gregory Maxwell 2011-09-19 13:03:39</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-09-19 15:06:07</name>
  </author>
  <link href="bitcoin-dev/Sept_2011/000558_0-4-x-stable-branch.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2011/000561_0-4-x-stable-branch.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - 0.4.x stable branch</title>
    <updated>2023-05-18T23:24:51.959656+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-September/000558.html" rel="alternate"/>
    <summary>In a discussion about the possibility of creating a stable version of Bitcoin, Gavin Andresen expressed his concern that testing and bug-fixing is already bottlenecked for core development, and maintaining two release lines would not improve the situation. Additionally, until they reach a 1.0 version that everyone agrees is ready for widespread use, calling any version "stable" would be dishonest. The primary concern addressed by those in favor of a stable version is providing a stable base bitcoind for miners, banks, and webservices to apply their patches on top of. Currently, those who want to keep up with development are stuck forward porting against often disruptive changes. This can cause people clearly in the know like Luke and tcatm to trail development on some of their systems by many months, which is unhealthy for the network.Gavin is not convinced that a bug fixes only branch will help much since even bug fixes can disrupt local fixes. He believes that more effort should be put into mainlining the changes people are carrying sooner and restructuring code to better accommodate patches which are not suitable for the mainline. This will encourage people to make the fixes they are running publicly available rather than just keeping them private for competitive advantage.Luke-Jr argued that the problem with the current development model is that bugfixes are done alongside improvements, and code changes always have the potential to introduce new bugs, no matter how careful one is. Therefore, staying on top of bugfixes right now implies risking new bugs being introduced. He suggests that most of the recently introduced bugs were the result of fixes rather than new features.</summary>
    <published>2011-09-19T13:03:39+00:00</published>
  </entry>
</feed>
