<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - 0.4rc1 known bugs</title>
  <updated>2023-05-19T00:57:37.372897+00:00</updated>
  <author>
    <name>Pieter Wuille 2011-09-06 11:55:30</name>
  </author>
  <author>
    <name>Matt Corallo 2011-09-04 02:43:48</name>
  </author>
  <link href="bitcoin-dev/Sept_2011/000463_0-4rc1-known-bugs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2011/000447_0-4rc1-known-bugs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - 0.4rc1 known bugs</title>
    <updated>2023-05-19T00:57:37.373897+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-September/000463.html" rel="alternate"/>
    <summary>On September 4th, 2011, Pieter Wuille compiled bitcoind with Gavin's DEBUG_LOCKORDER and fixed two potential reported deadlock issues. However, he later realized that there were no actual potential deadlocks as all locking of cs_vRecv/cs_vSend happened inside TRY_CRITICAL_SECTION blocks. He suggested to Gavin to add the rule to his debug code which ignored critical sections only locked through TRY_...?. In addition to this, Sipa found what looked like a deadlock between the addr-handling and IRC-join-handling code. Regarding the actual deadlock between IRC seeding and AddAddress, internally DB also used pthreads to implement the txn_begin()/commit() scheme. While processing "addr," a db transaction was created for the entire message while only locking cs_mapAddresses inside AddAddress. For the IRC seeded addresses, however, no db tx was pre-created, and AddAddress first locked cs_mapAddress, and then did the database write causing a lock inside. To solve this issue, a CRITICAL_BLOCK was added in main.cpp under ProcessMessage, case "addr". Furthermore, on September 3rd, 2011, Gavin Andresen provided a status update on 0.4 and reported that he probably won't have time to tackle the deadlock problems before Tuesday. UukGoblin also reported a deadlock problem on a bitcoind handling getwork requests. Gavin suggested that if someone wanted to become more familiar with the bitcoin code and had patience, tracking down deadlocks is a great way to do it. Lastly, ArtForz found a performance bug with transactions that had thousands of inputs and outputs on the solidcoin test network.</summary>
    <published>2011-09-06T11:55:30+00:00</published>
  </entry>
</feed>
