<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - New transaction policies (nVersion=3) for contracting protocols</title>
  <updated>2023-06-28T02:34:47.258238+00:00</updated>
  <author>
    <name>Greg Sanders 2023-06-21 20:57:45+00:00</name>
  </author>
  <author>
    <name>Gloria Zhao 2022-09-23 15:18:21+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-29 09:15:02+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-26 16:01:54+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-30 12:17:38+00:00</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-09-30 00:13:53+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-29 14:41:28+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-23 18:48:39+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-30 12:08:41+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-26 15:27:40+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-09-25 23:59:22+00:00</name>
  </author>
  <author>
    <name>Gloria Zhao 2022-09-26 16:47:49+00:00</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-10-01 09:59:55+00:00</name>
  </author>
  <link href="bitcoin-dev/June_2023/021780_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020937_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020950_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020942_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020960_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020957_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020951_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020938_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020959_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020941_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020939_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020943_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020962_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - New transaction policies (nVersion=3) for contracting protocols</title>
    <updated>2023-06-28T02:34:47.258380+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021780.html" rel="alternate"/>
    <summary>The Bitcoin community is proposing new mempool and transaction relay policies, called BIP-325, to support layer-two (L2) and contract protocols. The proposal introduces version 3 (V3) transactions and modifications to the package replace-by-fee (RBF) rules.The V3 transactions have a descendant size limit of 1000 virtual bytes (vB), which aims to reduce costs for fee-bumping transactions by limiting the amount of vbytes that need to be replaced. These transactions can be replaced even if they don't signal BIP125 replaceability.The proposed package RBF rules include requiring all package transactions with mempool conflicts to be V3. This ensures that replacement transactions are not less incentive-compatible to mine. Commitment transactions in the Lightning Network should also be V3, with one anchor output. If the commitment transaction needs to be broadcast, the desired feerate is determined at broadcast time, and the anchor output is spent in a high-feerate transaction.The proposal addresses concerns about pinning attacks by implementing stricter rules for V3 transactions. It restricts both the user and their counterparty, ensuring that only the commitment transaction and up to 1000vB need to be replaced. Feedback and review of the proposal are encouraged.The discussion among developers highlights various aspects of the proposal, including concerns about utxo set bloat and suggestions for further improvements. There are discussions on allowing outputs below dust, making anchors easier to design, and restricting the size of the whole V3 package. The proposal aims to solve Rule 3 pinning and potentially remove the need for child-pays-for-parent (CPFP) carve-out.Overall, the proposed policies aim to enhance the security model for L2 contracts and improve the efficiency of fee-bumping transactions. The community welcomes feedback and review of the proposed update.Another proposal for transaction replacement rules suggests using package RBF logic, fingerprinting, and anchor outputs to detect unilateral closures and enable fee-bumping without publishing one's commitment. It includes a set of rules and modifications to improve the security model of L2/contract protocols.The proposal recommends several changes to the existing policy rules, such as allowing OP_TRUE as a standard script type, increasing the upper bound of V3 transaction size, and adding a 0-value output to facilitate anchors. However, concerns have been raised about miner incentives and potential UTXO set bloat.The proposal also addresses limitations, such as not fixing ANYONECANPAY situations or resolving HTLC/commitment-like transactions in a batch. These issues may require further improvements in the future.It is clarified that V2 and V3 transactions can replace each other to prevent censorship of shared inputs. The proposal has received feedback and review from various individuals, and suggestions for improvement and additional features have been welcomed.Overall, the proposal aims to enhance the composability and security of L2 contracts and improve the efficiency of fee-bumping and transaction replacement. Feedback and review on the proposal are encouraged.The Bitcoin developer community has been discussing a proposal for transaction replacement rules that would allow a child transaction to pay for a fee-bump of its parent transaction, enabling users to increase fees on stuck transactions. The proposal also includes a set of mempool/transaction relay policies aimed at aiding L2/contract protocols and solving Rule 3 pinning issues. The proposal incorporates additional rules for V3 transactions, modifications to package RBF rules, and intended usage for Lightning Network transactions.Existing standardness rules apply to V3 transactions, including the ability for them to replace non-replaceable transactions. The proposal introduces limits on descendant transactions, with only one descendant allowed per unconfirmed V3 transaction. An unconfirmed V3 transaction cannot have more than one descendant and must be limited to 1000 virtual bytes in size. Additionally, all package transactions with mempool conflicts must be V3.Gloria Zhao, a Bitcoin Core developer, has proposed these changes and welcomes feedback and review. She clarifies that the proposal is tailored for LN Penalty and does not fix all existing pinning attacks but aims to improve security for L2 contracts. Suggestions for improvement, such as detecting "sibling output spend" conflicts and allowing OP_TRUE to become a standard script type, are discussed.The proposal has already been implemented in Bitcoin Core, and the development team encourages users to provide feedback. The changes are considered valuable for L2 contracts and may greatly enhance their security model. The proposal also addresses concerns about privacy issues, backward compatibility, and the interaction between V2 and V3 transactions.In addition, the proposal suggests allowing OP_TRUE to become a standard script type and introducing a single dust-value output that is immediately spent by the package, making anchors easier to design. However, there may be complications in ensuring the parent transaction is dropped if the child spend is dropped.The proposal aims to provide inherited replaceability signaling for descendants of unconfirmed transactions and prevent pinning attacks. It also includes modifications to</summary>
    <published>2023-06-21T20:57:45+00:00</published>
  </entry>
</feed>
