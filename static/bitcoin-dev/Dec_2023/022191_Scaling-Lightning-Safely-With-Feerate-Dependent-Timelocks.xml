<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Scaling Lightning Safely With Feerate-Dependent Timelocks</title>
  <updated>2023-12-16T01:58:05.083576+00:00</updated>
  <author>
    <name>jlspc 2023-12-14 17:07:40+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Scaling Lightning Safely With Feerate-Dependent Timelocks</title>
    <updated>2023-12-16T01:58:05.083604+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022191.html" rel="alternate"/>
    <summary>The Lightning Network's efficiency relies on timelocks, which are susceptible to "forced expiration spam" denial-of-service attacks. These attacks involve mass channel closures that prevent honest users from completing transactions in time. Feerate-Dependent Timelocks (FDTs) have been proposed as a countermeasure, extending timelocks during high congestion and increased transaction fees. This deters attackers by making it cost-inefficient to lock funds with the intention of network flooding.

FDTs are designed to automatically adjust to varying blockchain conditions, enhancing security without sacrificing capital efficiency in normal fee environments. They also protect against dishonest miners who might manipulate transaction fees. The application of FDTs extends to channel factories, a feature that allows multiple channel creations within one transaction, posing an increased systemic risk.

A proposal for FDT implementation suggests using the nSequence field of Bitcoin transactions to encode maximum acceptable fees, ensuring that transactions adhere to predetermined timelocks and fee rates. This verification process is cost-effective in terms of computational and memory resources. Furthermore, FDTs correct previous inaccuracies in assessing double-spend attack risks, considering advanced strategies by dishonest miners.

The comprehensive paper detailing FDTs also explores their broader applications, such as preventing unexpected fee spikes and addressing specific transaction types within the Lightning Network. As a security measure, FDTs penalize attackers attempting forced expiration spam attacks by prolonging the timelocks on their funds. Moreover, FDTs assist in managing feerate risks and calculating fee penalties.

Despite requiring additional DRAM and computing power, the costs associated with implementing FDTs are minimal compared to their benefits. There is a call for Bitcoin's consensus rules to be updated to include FDT support. However, it is acknowledged that if attackers can choose the timing of a double-spend attack, they will succeed regardless of certain parameters, although the difficulty of carrying out such attacks increases substantially with these parameters in place.</summary>
    <published>2023-12-14T17:07:40+00:00</published>
  </entry>
</feed>
