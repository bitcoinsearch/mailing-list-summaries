<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Scaling Lightning Safely With Feerate-Dependent Timelocks</title>
  <updated>2023-12-29T01:48:20.043553+00:00</updated>
  <author>
    <name>Eric Voskuil 2023-12-28 18:42:39+00:00</name>
  </author>
  <author>
    <name>Eric Voskuil 2023-12-23 04:09:15+00:00</name>
  </author>
  <author>
    <name>Nagaev Boris 2023-12-22 16:36:56+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-12-22 01:25:33+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-12-17 23:01:22+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-12-14 17:07:40+00:00</name>
  </author>
  <link href="bitcoin-dev/Dec_2023/022236_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022228_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022229_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022225_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022198_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2023/022191_Scaling-Lightning-Safely-With-Feerate-Dependent-Timelocks.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Scaling Lightning Safely With Feerate-Dependent Timelocks</title>
    <updated>2023-12-29T01:48:20.043614+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022236.html" rel="alternate"/>
    <summary>The email from Boris Nagaev brings up concerns about the alignment of a window in blockchain mining and its effect on transaction validation, particularly regarding recent changes in transaction fees that may not be reflected due to this alignment. He suggests that a global window size could make the verification process more efficient and reduce space requirements in Full Data Transactions (FDT). Boris proposes an array of integers sized to the window to determine if enough blocks have at least a median fee rate within the latest blocks.

Antoine and John's discussion delves into the implementation of Fee Distribution Transactions (FDTs) in blockchain systems, explaining the conditions under which a transaction can be included in a blockchain. They detail the criteria for an aligned window W, including block size, median fee rate, and time constraints. Antoine clarifies that the transaction must wait for a specific time T and then for a full aligned window W containing fewer than 70 blocks with a median fee rate above a given threshold. The conversation addresses race conditions between conflicting transactions and how FDTs might render additional grace periods unnecessary, assuming miners follow protocol rules. John also discusses the storage implications of introducing a 'number_of_windows' parameter alongside FDTs, suggesting it would increase the required storage but remain feasible.

Antoine's email introduces a feerate-dependent timelock (FDT) proposal for Bitcoin, positioning it as a solution for congestion detection in the Lightning Network and smart contracts. He explains the sliding-time-locks based on block fee rates and how the FDT mechanism prevents a transaction's inclusion under certain fee conditions. Antoine outlines the parameters for setting confirmation delays and the potential for FDTs to mitigate "Forced Expiration Spam," recommending design considerations for revocable scripts and consistent FDT parameters across HTLC channels. He calls for incorporating FDT parameters into the bip341 annex and remains optimistic about the FDT proposal, despite unexplored areas related to miner collusion and the 'claim_grace_period.'

Lastly, the efficiency of the Lightning Network is connected to the use of timelocks and their susceptibility to "forced expiration spam" attacks. Feerate-Dependent Timelocks (FDTs) are proposed to counteract these attacks by extending timelocks during high congestion, deterring attackers by making it cost-prohibitive to cause network flooding. FDTs adjust automatically to blockchain conditions and protect against dishonest miners manipulating transaction fees. The application of FDTs includes channel factories, and the nSequence field of Bitcoin transactions could encode maximum acceptable fees. The paper detailing FDTs also explores broader applications and emphasizes their role in managing fee risks. While FDT implementation incurs additional costs, the benefits outweigh these. There is a call for updating Bitcoin consensus rules to support FDTs, acknowledging that while attackers can still succeed in double-spend attacks with careful timing, the difficulty of such attacks is significantly increased with FDT parameters in place.</summary>
    <published>2023-12-28T18:42:39+00:00</published>
  </entry>
</feed>
