<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Lamport scheme (not signature) to economize on L1</title>
  <updated>2023-12-23T01:55:39.400210+00:00</updated>
  <author>
    <name>yurisvb at pm.me 2023-12-22 15:32:38+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Lamport scheme (not signature) to economize on L1</title>
    <updated>2023-12-23T01:55:39.400243+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-December/022227.html" rel="alternate"/>
    <summary>The email discusses potential vulnerabilities in a cryptographic scheme related to LAMPPRI, addressing the technicalities of cryptanalysis under different conditions. It outlines three scenarios of concern: the first involves an ADDR before T0-1 without (TX, SIG), the second encompasses both ADDR and (TX, SIG) after T0-1, and the third scenario is about outmining the rest of the mining community after T1 with a significant time disadvantage.

The correspondence highlights a critical aspect that LAMPPUB, despite being a fundamental component of the system, is ironically never published. This leads to the suggestion that LAMPPUB could be significantly large, such as 1Mb or 1Gb, to ensure the collision rate in the hash function HL(.) remains negligible. This approach aligns with the concept of a memory-hard hash function and would allow for a processing-storage trade-off.

In the first scenario, there is an emphasis on the pre-image problem associated with a function f1, which maps a valid ECCPRI and a valid LAMPPRI to an ADDR format. The second scenario details a similar pre-image problem with function f2_(TX,ECCPUB), which takes a valid LAMPPRI to an ADDR format paired with a specific LSIG, instead of any LSIG format. This nuance indicates that any advantage gained in the second scenario over the first must be offset by the ability to complete the protocol successfully before an attack takes place.

The third scenario equates to a double-spending attack where the adversary is at a disadvantage of not less than (T1-T0-1) blocks compared to the rest of the community.

Further in the email, there is an acknowledgment of the need to calculate the entropy for each case, assuming ideal hashes. However, based on an approximation provided by Boris, it's noted that the strength of security would be derived from half the size of ADDR rather than half of LAMPPRI, thus achieving the intended security goal.

A notable proposition towards the end of the email is the potential for a multi-use version of the scheme. In this variation, LAMPPRI would be generated from the ADDR resulting from a previous pair of (ECCPUB, LAMPPUB). This adjustment would reduce blockchain bloat by effectively removing one whole ADDR from the chain and further reducing it by an additional marginal 12 bytes per use, potentially more depending on the added strength.</summary>
    <published>2023-12-22T15:32:38+00:00</published>
  </entry>
</feed>
