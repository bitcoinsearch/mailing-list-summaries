<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Ordinals BIP PR</title>
  <updated>2023-11-22T02:02:44.132780+00:00</updated>
  <author>
    <name>vjudeu at gazeta.pl 2023-11-20 22:20:46+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Ordinals BIP PR</title>
    <updated>2023-11-22T02:02:44.132807+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-November/022179.html" rel="alternate"/>
    <summary>The discussion about Ordinals and their incorporation into blockchain transactions raises several pertinent points for consideration. The suggestion that each Ordinal include an OP_RETURN at the start of the TapScript is a notable one, as this would prevent them from being recorded on-chain while still allowing movement through a single Schnorr signature. A more refined idea is proposed where creating a new Ordinal wouldn't necessitate sending them to Taproot; instead, utilizing the R-value from any signature, regardless of the address type, would suffice for making a commitment. This implies that even users with legacy addresses could partake in this system by signing a regular transaction, embedding the Ordinal within the R-value of said signature.

Furthermore, there's an emphasis on the need for Ordinals to possess the capability of scanning the blockchain similar to Silent Payments. This feature would enable users to identify and utilize previously uploaded data, thus avoiding unnecessary duplication of information on the blockchain. An example provided illustrates this point: a user attempted to upload a whitepaper that had already been included in a past transaction wrapped in a multisig. Ordinals should therefore facilitate the recognition of existing data to prevent repetitive uploads.

When it comes to the content encapsulated within each Ordinal, particularly with regards to endeavors akin to creating Non-Fungible Tokens (NFTs), the importance of maintaining uniqueness is underscored. The protocol should be designed to scan for and recognize identical data entries, such as a previously pushed whitepaper, and accordingly prevent the same content from being uploaded multiple times. This aspect is crucial in certain applications like NFTs, where duplicity could lead to confusion or misrepresentation.</summary>
    <published>2023-11-20T22:20:46+00:00</published>
  </entry>
</feed>
