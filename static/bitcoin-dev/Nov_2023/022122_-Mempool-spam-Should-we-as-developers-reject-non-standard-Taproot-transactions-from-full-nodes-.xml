<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>[Mempool spam] Should we as developers reject non-standard Taproot transactions from full nodes?</title>
  <updated>2023-11-05T02:02:05.790006+00:00</updated>
  <author>
    <name>ArmchairCryptologist 2023-11-04 09:58:48+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>[Mempool spam] Should we as developers reject non-standard Taproot transactions from full nodes?</title>
    <updated>2023-11-05T02:02:05.790046+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-November/022122.html" rel="alternate"/>
    <summary>The email discusses the issue of block size limits and the current mempool spam. The sender acknowledges the previous difficulties in increasing the block size limit, as it only requires doing nothing to prevent an increase. However, they suggest that the current mempool spam is not caused by exploiting taproot to add large amounts of data to the blockchain, but rather by a large number of spam transactions creating dust and moving it around.

To address this issue, the sender proposes the implementation of a dynamic dust limit. Currently, UTXOs are considered dust if they cannot be economically spent at the fee rate of the transaction creating them, with a fixed limit of 546 sats. The sender suggests adding a calculation to determine the dust limit based on the typical amount of data required to spend a basic UTXO, which is approximately 182 sats per byte. This means that if a transaction has a fee rate of 100 sat/b, the dust limit for UTXOs created by this transaction would be increased from 546 sats to 18,200 sats.

The sender acknowledges that there are pros and cons to implementing such an approach and suggests that there may be a need to cap it in various ways. However, they believe it is worth considering, especially since it is a mempool policy rather than consensus critical.

In conclusion, the email highlights the suggestion of implementing a dynamic dust limit to mitigate the mempool spam issue, where UTXOs are considered dust if they cannot be economically spent at the fee rate of the transaction creating them. The sender presents calculations to support this proposal and acknowledges the potential drawbacks and the need for further discussion and refinement.</summary>
    <published>2023-11-04T09:58:48+00:00</published>
  </entry>
</feed>
