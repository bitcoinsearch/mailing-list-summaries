<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>OP_Expire and Coinbase-Like Behavior: Making HTLCs Safer by Letting Transactions Expire Safely</title>
  <updated>2023-11-05T02:06:27.008988+00:00</updated>
  <author>
    <name>Peter Todd 2023-11-04 07:26:24+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>OP_Expire and Coinbase-Like Behavior: Making HTLCs Safer by Letting Transactions Expire Safely</title>
    <updated>2023-11-05T02:06:27.009050+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-November/022121.html" rel="alternate"/>
    <summary>The email discusses a proposal called OP_Expire, which addresses the issue of spending the preimage branch of the HTLC (Hash Time Locked Contract) before the refund branch becomes available. The sender clarifies that techniques like replacement cycling are irrelevant in this context because there is a specific time window during which the HTLC can be spent with the preimage. After this time window expires, only the refund branch can be used.

With OP_Expire, the sender argues that the scenario where one party prevents another from learning the preimage in time cannot occur. Either the party collecting the HTLC spends it in a transaction prior to the expiration time and ensures that the other party learns the preimage from the blockchain, or the HTLC expires and the other party can use the refund branch at their convenience.

The email also highlights that OP_Expire eliminates the need for Lightning nodes to monitor mempools for preimages. If the preimage is used, it is guaranteed to end up on the blockchain, and the Lightning node will see it as long as they have access to up-to-date blockchain data.

In summary, the sender emphasizes that OP_Expire renders techniques like replacement cycling useless because of the defined time window for spending the HTLC with the preimage. They argue that this proposal provides a solution to the issue at hand and simplifies the process for Lightning nodes by ensuring the preimage ends up on the chain.</summary>
    <published>2023-11-04T07:26:24+00:00</published>
  </entry>
</feed>
