<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>OP_Expire and Coinbase-Like Behavior: Making HTLCs Safer by Letting Transactions Expire Safely</title>
  <updated>2023-11-08T17:09:36.066623+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-11-07 11:11:59+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>OP_Expire and Coinbase-Like Behavior: Making HTLCs Safer by Letting Transactions Expire Safely</title>
    <updated>2023-11-08T17:09:36.066657+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-November/022129.html" rel="alternate"/>
    <summary>The email provides an analysis of a Hashed Timelock Contract (HTLC) scenario involving parties named Bob and Carol. It explains that before a specific block number, denoted as block 100, only Carol has the capability to execute an HTLC-success transaction. This is due to the fact that the HTLC contains a timelock condition that prevents Bob from prematurely enforcing an HTLC-timeout transaction, which would be his recourse if he wished to claim the funds before the agreed-upon time. Since the commitment transaction requires both Bob’s and Carol’s signatures, and given that Carol will not participate in any action that undermines her own interests, Bob is unable to alter the situation to his advantage.

The message further clarifies that after block 100, the `OP_EXPIRE` operation comes into effect, rendering Carol unable to claim the funds. Essentially, this implies that Carol's window for claiming the funds is limited to the period before block 100, after which she loses the ability to do so. The tone of the email suggests certainty in the mechanics of the HTLC and its protection against a potential attack from Bob as long as Carol acts within the constraints of the timelock.</summary>
    <published>2023-11-07T11:11:59+00:00</published>
  </entry>
</feed>
