<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Wallet vaults with pre-signed transactions but no ephemeral keys</title>
  <updated>2024-03-06T10:38:48.194935+00:00</updated>
  <author>
    <name>darosior 2023-01-26 14:30:56+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Wallet vaults with pre-signed transactions but no ephemeral keys</title>
    <updated>2024-03-06T10:38:48.194935+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-January/021368.html" rel="alternate"/>
    <summary>The email provides an overview of Revault, a sophisticated security model detailed on their GitHub repository, which can be found at [https://github.com/revault](https://github.com/revault/), specifically within the `practical-revault` section. This system is designed to enhance the safety of bitcoin transactions through a collaborative approach involving multiple participants. It outlines a structured communication protocol between these participants alongside the implementation strategy for the entire mechanism.

One of the primary benefits of using Revault is its ability to impose certain restrictions on bitcoin transactions, thereby providing a more secure transaction environment. However, the system is not without its challenges. A significant concern is the necessity to confirm that all participating watchtowers have received the Cancel signature before initiating the Unvault transaction. This requirement raises a critical question about the feasibility of such verification, especially when operating under the common scenario of using an untrusted laptop for transactions.

Furthermore, while Revault allows for the application of policies on the Unvault transaction, such as limiting the amount of bitcoin that can be moved within specific timeframes, it lacks the capability to enforce similar policies on the Spend transaction. This limitation means users cannot restrict Spend transactions to only those that comply with predefined criteria, such as sending coins to a particular script. Although Revault attempts to address this issue by incorporating cosigning servers that act as anti-replay oracles, enabling some level of policy enforcement on Spend transactions, this solution is considered far from ideal. The email suggests that employing covenants could potentially resolve these issues, offering a more refined control over the transaction processes.</summary>
    <published>2023-01-26T14:30:56+00:00</published>
  </entry>
</feed>
