<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Compressed public keys</title>
  <updated>2023-05-19T01:01:17.437792+00:00</updated>
  <author>
    <name>Pieter Wuille 2011-11-21 02:34:30</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-11-21 11:48:20</name>
  </author>
  <link href="bitcoin-dev/Nov_2011/000778_Compressed-public-keys.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2011/000779_Compressed-public-keys.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Compressed public keys</title>
    <updated>2023-05-19T01:01:17.437792+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-November/000778.html" rel="alternate"/>
    <summary>Pieter Wuille has submitted a pull request (#649) that enables the use of compressed public keys in Bitcoin. The compressed public keys are 33 bytes long and contain the same information as normal 65-byte keys. They only contain the X coordinate of the point, while the value of the Y-coordinate is reconstructed upon use. This requires some CPU but is only a fraction of the cost of verifying a signature. In theory, one private key now corresponds to two public keys, and thus two different addresses. However, this implementation chooses only one of them (at key generation time). Compressed public keys are supported by default by OpenSSL, and all alternative implementations that use OpenSSL should support these keys. However, it is unclear whether all client implementations support compressed public keys. Secrets for compressed pubkeys also need attention. While send-to-pubkey transactions are untested for now. To help in testing, Pieter provided an address that corresponds to a compressed public key.</summary>
    <published>2011-11-21T02:34:30+00:00</published>
  </entry>
</feed>
