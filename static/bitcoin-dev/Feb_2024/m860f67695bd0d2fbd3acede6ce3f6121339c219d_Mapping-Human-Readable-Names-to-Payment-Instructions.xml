<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Mapping Human-Readable Names to Payment Instructions</title>
  <updated>2024-02-26T14:58:48.338946+00:00</updated>
  <author>
    <name>Matt Corallo 2024-02-13 19:56:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Mapping Human-Readable Names to Payment Instructions</title>
    <updated>2024-02-26T14:58:48.338946+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/34eaef2a-b53f-4622-a620-a3bc5161cbf7@mattcorallo.com" rel="alternate"/>
    <summary>This blog post introduces a Bitcoin Improvement Proposal (BIP) aimed at standardizing the mechanism for resolving human-readable names to Bitcoin payment instructions, supporting various payment methods like lightning, on-chain, payjoin, silent addresses, and more. The proposal suggests encoding BIP 21 URI schemes in DNS TXT records, leveraging the DNS's global, hierarchical namespace to map human-readable labels to detailed records, thus facilitating easier and more secure transaction processes for users.

The motivation behind this BIP is the growing demand from users for human-readable payment instructions across various cryptocurrency applications. By utilizing DNSSEC within the DNS framework, the proposal ensures cryptographic security through a straightforward Public Key Infrastructure (PKI), which adheres to the DNS's hierarchical nature. This approach allows for stateless, potentially offline verification of DNS records from a trusted root, offering privacy benefits since DNS queries typically do not expose the querier's IP address due to proxying through ISP-provided or other resolvers.

The specification outlines several key rules and guidelines for implementing this system. It emphasizes that Bitcoin wallets should prioritize explicit public key methods over DNS-based resolutions when available. Payment instructions will be stored under specific DNS TXT records, required to be DNSSEC-signed for authenticity. Moreover, the proposal delineates how clients should resolve these instructions, including the handling of non-ASCII identifiers and the necessity for fully validating DNSSEC signatures without relying on remote resolvers.

Addressing potential concerns around address reuse, the proposal advises regular rotation of on-chain addresses listed in payment instructions and recommends using short DNS TTLs for prompt updates. It also guides on how wallets should display recipient information, suggesting a format that combines user and domain identifiers.

Rationalizing the choice of DNS over blockchain or HTTP(s)-based alternatives, the proposal argues that despite the censorship-resistance and security advantages of blockchain solutions, they lack widespread adoption and often reintroduce intermediary trust issues. Similarly, HTTP(s)-based protocols suffer from significant privacy and security drawbacks, making DNS a preferable option due to its broad accessibility and established infrastructure.

The proposal also considers private DNS querying techniques, such as using public recursive resolvers or performing resolution over Tor or VPNs, to mitigate privacy concerns associated with centralized DNS querying. Additionally, it touches upon the issue of DNS enumeration, acknowledging the practicality of user enumeration in payment contexts but suggesting measures to mitigate its ease.

Examples and reference implementations are provided to illustrate the proposed mechanism in action, including a specific example of resolving a payment instruction for `matt@mattcorallo.com` and links to relevant code repositories for DNSSEC proof generation/validation and a lightning-specific name resolver.

For further details, readers are encouraged to review the full BIP draft and code examples available in the BIPs repository at [https://github.com/bitcoin/bips/pull/1551](https://github.com/bitcoin/bips/pull/1551).</summary>
    <published>2024-02-13T19:56:00+00:00</published>
  </entry>
</feed>
