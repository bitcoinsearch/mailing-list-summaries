<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Actuarial System To Reduce Interactivity In N-of-N (N	&gt; 2) Multiparticipant Offchain Mechanisms</title>
  <updated>2023-10-16T01:55:35.868913+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-10-15 13:36:00+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-09-18 03:37:46+00:00</name>
  </author>
  <author>
    <name>David A. Harding 2023-09-18 00:12:45+00:00</name>
  </author>
  <link href="bitcoin-dev/Oct_2023/021996_Actuarial-System-To-Reduce-Interactivity-In-N-of-N-N-2-Multiparticipant-Offchain-Mechanisms.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021964_Actuarial-System-To-Reduce-Interactivity-In-N-of-N-N-2-Multiparticipant-Offchain-Mechanisms.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021963_Actuarial-System-To-Reduce-Interactivity-In-N-of-N-N-2-Multiparticipant-Offchain-Mechanisms.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Actuarial System To Reduce Interactivity In N-of-N (N	&gt; 2) Multiparticipant Offchain Mechanisms</title>
    <updated>2023-10-16T01:55:35.868989+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021996.html" rel="alternate"/>
    <summary>In this email, the sender discusses the use of BitVM to improve an idea related to actuarial signatures. The sender analyzes the proposed mechanism and concludes that BitVM cannot be used for this purpose. They explain that the desired outcome is to restrict the actuary to signing for a particular spend only once. The sender suggests implementing a program that checks if two signatures sign different things but have the same public key, which would indicate cheating by the actuary. However, they mention that BitVM triggers on dishonest execution of the program, making it unsuitable for this scenario.The sender explores the possibility of changing the logic to punish the actuary instead of the participant who expected the actuary to not violate the sign-only-once rule. They point out that this requires the actuary to act as a validator instead of a prover, which complicates the mechanism. Additionally, the sender discusses the limitations of BitVM and explains that the signing algorithm should not be written in BitVM as the actuary can run a program outside of it.Furthermore, the sender highlights the need for the actuary to provide something that makes a transaction immediately confirmable, rather than after a timeout. They express their difficulty in using BitVM to replace the current mechanism and prevent multiple commitments by the actuary.In another email, the sender raises concerns about the fidelity bond and scalability of the mechanism. They suggest separately locking the fidelity bond to specific conditions and replicating it for each participant. The sender also expresses a desire to explore alternatives to the "sign-only-once" mechanism and mentions proof-of-work blockchains as an example where miners can only select transactions and not authorize moves without owner consent. They aim to replicate this functionality without resorting to a proof-of-work blockchain, reducing interactivity requirements.Lastly, in a separate email, Dave poses a question about a scenario involving a group of thieves with control over hash rate. He questions whether one member of the group can provide a confirmed transaction to another member and then generate a block before the Check Sequence Verify (CSV) expiry that includes different signatures over a transaction that does not pay the intended recipient. Dave suggests that this scenario could be successful even with a moderate amount of hash rate control, posing a potential security risk. He also mentions the possibility of double spending and its impact on the mechanism.It is important to note that the email does not provide any supporting links or additional context for the claims made by Dave.</summary>
    <published>2023-10-15T13:36:00+00:00</published>
  </entry>
</feed>
