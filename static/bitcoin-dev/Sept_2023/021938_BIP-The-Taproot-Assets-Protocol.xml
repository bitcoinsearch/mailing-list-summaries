<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>BIP-????: The Taproot Assets Protocol</title>
  <updated>2023-09-07T01:54:41.795384+00:00</updated>
  <author>
    <name>Olaoluwa Osuntokun 2023-09-06 19:01:20+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>BIP-????: The Taproot Assets Protocol</title>
    <updated>2023-09-07T01:54:41.795424+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021938.html" rel="alternate"/>
    <summary>The email discusses the official publication of the Taproot Assets Protocol and the request for BIP numbers. The complete set of documents, including the breakdown of the BIPs, is not included in the email but can be found on GitHub. The BIPs covered are: - `bip-tap-mssmt`: describes the MS-SMT data structure used to store assets and various proofs.- `bip-tap`: describes the Taproot Assets Protocol validation and state transition rules.- `bip-tap-addr`: describes the address format used to send and receive assets.- `bip-tap-vm`: describes the initial version of the off-chain TAP VM used to lock and unlock assets.- `bip-tap-vpsbt`: describes a vPSBT which is a series custom types on top of the existing PSBT protocol to facilitate more elaborate asset related transactions.- `bip-tap-proof-file`: describes the flat file format which is used to prove and verify the provenance of an asset.- `bip-tap-universe`: describes the Universe server construct, which is an off-chain index into TAP data on-chain, used for proof distribution, asset bootstrapping, and asset transaction archiving.Some highlights of the additions/modifications to the BIPs since the initial drafts were published last year include:- Test JSON vectors are now included for each BIP document.- Further specification of the Universe construct for initial verification of assets, distributing asset proofs, and transaction archiving, with a syncing algorithm and standardized REST/gRPC interface.- Development of the asset group key structure, allowing for ongoing issuance and fungibility of disparate assets under the same sub-tree.- New versioning bytes across the protocol for extensibility and upgradability.- Changes to the asset metadata format, now committing to a hash of the serialized meta data and allowing structured data.- Observance of re-org protection for asset proofs and the use of an incremental hash function in the file format.- Specification of the vPSBT protocol, analogous to normal PSBTs for the TAP layer.Significant advancements have also been made in the initial implementation, with collaboration from wallets, explorers, services, and businesses to test and iterate on both the protocol and implementation. The team is actively working on the next major release towards the eventual mainnet deployment of the protocol.</summary>
    <published>2023-09-06T19:01:20+00:00</published>
  </entry>
</feed>
