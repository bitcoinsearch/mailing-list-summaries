<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Compressed Bitcoin Transactions</title>
  <updated>2023-09-02T01:47:36.221322+00:00</updated>
  <author>
    <name>Andrew Poelstra 2023-09-01 13:56:18+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Compressed Bitcoin Transactions</title>
    <updated>2023-09-02T01:47:36.221353+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021928.html" rel="alternate"/>
    <summary>The email is from Andrew Poelstra, the Director of Research at Blockstream. In the email, Andrew discusses the consideration of indexing all txos (transaction outputs) using ordinals but ultimately decides against it due to the extra index requirements for the decompressor. He mentions that they previously looked into putting the whole UTXOset (unspent transaction output set) into a trie for prefix lookups but discarded the idea for similar reasons and because it could lead to surprising behavior for users.Andrew also mentions being put off by the complexity of the data structure since the UTXO set no longer fits in RAM. He explains that implementing a new index would require nontrivial effort and decrease their chances of getting code into Core by a large factor.In terms of space savings, Andrew estimates that they would save a little less than a byte per input, on average. However, he concludes that this saving is not trivial and probably not worth the decreased user experience and greatly increased implementation complexity.Overall, the email highlights the consideration and decision-making process around indexing and storing transaction outputs, taking into account factors such as space savings, user experience, and implementation complexity.Please note that the farewell part of the email has been ignored as per the instructions.</summary>
    <published>2023-09-01T13:56:18+00:00</published>
  </entry>
</feed>
