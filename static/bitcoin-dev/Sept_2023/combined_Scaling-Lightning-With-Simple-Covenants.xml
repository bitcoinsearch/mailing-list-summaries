<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Scaling Lightning With Simple Covenants</title>
  <updated>2023-09-11T01:54:20.766876+00:00</updated>
  <author>
    <name>Anthony Towns 2023-09-11 00:56:40+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-08 18:54:46+00:00</name>
  </author>
  <link href="bitcoin-dev/Sept_2023/021943_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021941_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Scaling Lightning With Simple Covenants</title>
    <updated>2023-09-11T01:54:20.766931+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021943.html" rel="alternate"/>
    <summary>The email discusses the challenge of scaling the Lightning Network in a trust-free manner and proposes solutions using covenants and timeout-trees. The author explains that currently, obtaining signatures from a large number of casual users to create Lightning channels is difficult. However, by enabling simple covenants through changes in the consensus rules, a single UTXO can be used to create Lightning channels for millions of casual users without requiring their signatures.The scalability issue lies in providing Lightning channels to casual users because they need to co-own an on-chain UTXO to co-own a Lightning channel. The author suggests that by incorporating mechanisms like CheckTemplateVerify (CTV) or AnyPrevOut (APO) in Bitcoin's consensus rules, this bottleneck can be eliminated. These covenant-based protocols allow for resizing channels off-chain, using the same capital for liquidity and routing payments, charging penalties for old states, and allowing casual users to monitor the blockchain without a watchtower service.To address the problem of forcing casual users to drain their balances to a new timeout-tree before expiry, the author proposes using a variation of the FFO-WF Lightning channel protocol. This allows a dedicated user to facilitate the rollover of the casual user's funds without requiring input from the casual user.In addition to Lightning channels, the author emphasizes the importance of off-chain bitcoin. Timeout-trees can provide casual users with immediately-accessible off-chain bitcoin. Control UTXOs can be used to rollover the casual user's bitcoin from one timeout-tree to the next without requiring any actions from the casual user.By implementing simple covenants and timeout-trees, the author believes that the scalability of Lightning can be greatly improved, making it a widely-used means of payment. They suggest incorporating mechanisms like CTV or APO in Bitcoin's consensus rules to facilitate this. The email also mentions usability properties and limitations of the protocols discussed.</summary>
    <published>2023-09-11T00:56:40+00:00</published>
  </entry>
</feed>
