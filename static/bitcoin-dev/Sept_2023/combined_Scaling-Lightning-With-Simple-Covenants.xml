<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Scaling Lightning With Simple Covenants</title>
  <updated>2023-09-28T01:54:17.718089+00:00</updated>
  <author>
    <name>Antoine Riard 2023-09-26 16:42:34+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-09-19 07:44:48+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-09-18 04:14:55+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2023-09-17 11:32:52+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:59:39+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:56:04+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:52:13+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-09-11 05:27:25+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2023-09-11 02:13:52+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2023-09-11 00:56:40+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-08 18:54:46+00:00</name>
  </author>
  <link href="bitcoin-dev/Sept_2023/021972_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021967_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021965_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021966_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021962_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021961_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021960_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021951_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021950_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021943_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021941_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Scaling Lightning With Simple Covenants</title>
    <updated>2023-09-28T01:54:17.718222+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021972.html" rel="alternate"/>
    <summary>The email discusses a proposed mechanism for preventing theft and safeguarding funds in the context of timeout-trees. The sender suggests measuring time in low-fee windows and using programmable window sizes to prevent dishonest miners from creating fake low-fee blocks. They also mention supporting relative delays instead of absolute delays. The email provides feedback on a proposal related to the classification of users in Lightning Network and designing protocols accordingly. The sender raises concerns about the simplistic classification of users as "casual" or "dedicated" and suggests introducing different scaling notions to measure performance. They also highlight challenges related to creating a large number of Lightning channels from a single on-chain UTXO and raise questions about group coordination, routing, and fault-tolerance in off-chain constructions. The email analyzes a paper and considers the cost of enforcement, capital efficiency, and potential failure scenarios. It suggests relying on legal and custody policies in certain cases rather than burdening the UTXO set indefinitely.The tradeoff between trust and capital efficiency in Lightning Network is discussed, specifically regarding the scenario of a single UTXO that can be claimed by a user in the future. The email mentions the increase in on-chain transactions if a user cheats and highlights the reduction in capital efficiency when casual users follow a rollover policy. Ways to optimize capital usage are suggested, but they may introduce additional complexity.Scalability issues in Lightning Network are explored, with a proposal to use simple covenants enabled by CheckTemplateVerify (CTV) or AnyPrevOut (APO) to create Lightning channels for casual users. Changing consensus rules to allow simple covenants can eliminate the bottleneck of obtaining signatures from a large number of casual users. Adding a timeout-tree enables long-term scaling and addresses the problem of forcing casual users to drain their balances before expiry. The email also mentions the usability properties and limitations of the protocols discussed.Overall, the email provides a comprehensive overview of the proposed mechanism, feedback on user classification, considerations regarding cost enforcement and capital efficiency, tradeoffs between trust and efficiency, and scalability issues in Lightning Network. It presents different perspectives and raises important questions and challenges related to the topics discussed.</summary>
    <published>2023-09-26T16:42:34+00:00</published>
  </entry>
</feed>
