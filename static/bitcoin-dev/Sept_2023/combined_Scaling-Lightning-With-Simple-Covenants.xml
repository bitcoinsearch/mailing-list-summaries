<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Scaling Lightning With Simple Covenants</title>
  <updated>2023-09-29T01:54:13.757229+00:00</updated>
  <author>
    <name>jlspc 2023-09-28 15:56:11+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-09-26 16:42:34+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-09-19 07:44:48+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-09-18 04:14:55+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2023-09-17 11:32:52+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:59:39+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:56:04+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:52:13+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-09-11 05:27:25+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2023-09-11 02:13:52+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2023-09-11 00:56:40+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-08 18:54:46+00:00</name>
  </author>
  <link href="bitcoin-dev/Sept_2023/021973_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021972_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021967_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021965_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021966_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021962_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021961_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021960_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021951_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021950_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021943_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021941_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Scaling Lightning With Simple Covenants</title>
    <updated>2023-09-29T01:54:13.757361+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021973.html" rel="alternate"/>
    <summary>The email discusses various aspects of off-chain constructions, including scalability considerations, fault-tolerance, liveliness requirements, load balancing, and the challenges of getting casual users to sign transactions. The sender also raises concerns about the "thundering herd" problem and failures by dedicated users. They provide feedback on a proposal to improve the scalability of Lightning Network by maximizing the number of channels owned by a user. The sender acknowledges the challenges with rebalancing and subbranch transactions hitting the chain. They also question the feasibility of coordinating a group of casual users to sign transactions and update their accounts or channels. The email highlights the uncertainty of on-chain transactions being broadcasted by other users at specific times in the future. The fault-tolerance of the off-chain construction is described as unclear, particularly if an unavailable or erring user causes the entire construction to end up on-chain. The tradeoff between trust and capital efficiency is discussed, along with the potential increase in on-chain transactions if a cheating user forces casual users to drop their channels to the chain. The reduction in capital efficiency when casual users follow a rollover policy is also mentioned. The email proposes using covenant-based protocols enabled by CheckTemplateVerify (CTV) or AnyPrevOut (APO) to scale Lightning in a trust-free manner. It suggests incorporating timeout-trees and variations of existing protocols in Bitcoin's consensus rules to achieve these improvements.</summary>
    <published>2023-09-28T15:56:11+00:00</published>
  </entry>
</feed>
