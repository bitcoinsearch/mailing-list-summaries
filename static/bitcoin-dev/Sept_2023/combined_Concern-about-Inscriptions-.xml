<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Concern about "Inscriptions"</title>
  <updated>2023-09-04T01:54:16.667425+00:00</updated>
  <author>
    <name>vjudeu at gazeta.pl 2023-09-03 16:01:02+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2023-08-23 17:34:19+00:00</name>
  </author>
  <author>
    <name>GamedevAlice 2023-08-22 14:18:04+00:00</name>
  </author>
  <author>
    <name>martl.chris at proton.me 2023-08-22 05:15:12+00:00</name>
  </author>
  <author>
    <name>symphonicbtc 2023-08-21 22:34:03+00:00</name>
  </author>
  <author>
    <name>John Tromp 2023-08-21 16:28:50+00:00</name>
  </author>
  <author>
    <name>rotmaxi 2023-08-21 14:58:39+00:00</name>
  </author>
  <author>
    <name>Russell O'Connor 2023-08-21 14:47:18+00:00</name>
  </author>
  <author>
    <name>martl.chris at proton.me 2023-08-18 20:43:13+00:00</name>
  </author>
  <author>
    <name>Luke Dashjr 2023-08-02 15:46:21+00:00</name>
  </author>
  <author>
    <name>GamedevAlice 2023-08-02 11:07:27+00:00</name>
  </author>
  <link href="bitcoin-dev/Sept_2023/021932_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021911_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021913_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021912_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021906_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021904_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021903_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021902_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021895_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021842_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021837_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Concern about "Inscriptions"</title>
    <updated>2023-09-04T01:54:16.667563+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-September/021932.html" rel="alternate"/>
    <summary>In this email, the sender discusses the implementation of a proof-of-work requirement in a public key on an open relay server protocol. They argue that embedding information in a public key is not challenging, but there is a limit to how much can be embedded, especially if the goal is to allow mobile devices to generate a new key within a few minutes.The email also discusses the idea of reducing the blocksize limit in order to address concerns related to blockchain size increases and to promote the usage of the lightning network. The sender suggests that the blocksize limit may have been increased unnecessarily in the past, and now there is a need to reconsider this decision. They argue that by reducing the blocksize, more activity can be directed towards the lightning network, which is gaining popularity. The email implies that protecting against potential issues caused by blockchain size increases is the main reason for having a blocksize limit. The sender raises the possibility of people being more open to the idea of a smaller blocksize now that the lightning network is becoming more widely adopted.In the email, Chris addresses the concern about "inscriptions" in the Bitcoin protocol. He emphasizes that understanding the strategy incorrectly or purposely driving the interaction into a false framing does not benefit Bitcoin. The proposed strategy aims to increase the coercion cost of mining entities compared to the cooperation cost of mining entities regarding arbitrary data insertion. It is important to note that this strategy is not about banning or censoring. Chris clarifies that mentioning other ways or methods to insert arbitrary data should not be seen as a threat, but rather as topics that Bitcoin developers should consider solving. It is necessary to assume that arbitrary data insertions are not innocent or negligible.The email draws parallels to how certain governments attempt to censor internet protocols, and users respond by tunneling their protocol through something that appears innocent, such as HTTPS. The remaining HTTPS stream, like public keys, is indistinguishable from random data and can be utilized as a communications channel for arbitrary data. The author posits that if efforts are made to ban arbitrary data, users will adapt by tunneling their data over innocent-looking public key data instead.In this email, the sender discusses the ongoing issue of Bitcoin script exploits and the vulnerabilities they pose to the system. They mention that these exploits are not new and have been a problem for over 14 years. The sender suggests that the loose flexibility of the Bitcoin system in processing predicatives is the root cause of these vulnerabilities.The email introduces two proposed strategies called Ordisrespector and Ordislow. These strategies aim to address the issue of aggression via the insertion of arbitrary data into the witness structure. Ordisrespector allows a regular Bitcoin node operator to opt-in or not to a self-defense mechanism for their storage property and integrity. This is done by signaling dissatisfaction with the current affairs of aggression through the insertion of arbitrary data into the witness structure. Transactions with inserted arbitrary data are not included in the mempool and are not relayed.On the other hand, Ordislow offers a similar self-defense mechanism by increasing the coercion cost of mining entities relative to the cooperation cost. This is achieved by not propagating a found block unless a configurable or maximum delay has elapsed, and the block contains at least one transaction with inserted arbitrary data in the witness structure.The sender emphasizes that these strategies are compatible with a permission-less system, allowing Bitcoin node operators to choose whether or not to participate. By implementing these strategies, it is hoped that the exposure for exploits can be minimized while maintaining the current status quo.Overall, the email highlights the ongoing Bitcoin script exploits and proposes two strategies, Ordisrespector and Ordislow, as potential solutions to address the vulnerabilities caused by aggression via the insertion of arbitrary data into the witness structure.Secret key schemes, such as ECDSA, can be inefficient in terms of data usage and may be more costly for users compared to allowing arbitrary data. In the case of ECDSA, re-using k values can allow for data encoding in both k and the entire secret key. This can also be done by brute-forcing a k value to encode data in a signature, as seen in compromised hardware key exfiltration attacks. Additionally, one can attempt to brute-force keys in order to encode data in the public key. However, limiting the storage of arbitrary data in a system that relies on secret keys being arbitrary data is challenging and expensive.The Mimblewimble protocol is known for its resistance to spam and inscription attacks. In this context, it is important to note that range proofs in the protocol already prove knowledge of blinding factors in Pedersen commitments. This eliminates the need for additional padding to prevent the encoding of spam into cryptographic material. As a result, pure Mimblewimble blockchains are considered to be highly resistant to inscription and spam attacks.There is a project called STAMPS that breaks up image data into chunks and embeds them in bare multisig outputs. This method consumes more space and increases the size</summary>
    <published>2023-09-03T16:01:02+00:00</published>
  </entry>
</feed>
