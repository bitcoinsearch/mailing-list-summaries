<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New transaction policies (nVersion=3) for contracting protocols</title>
  <updated>2023-06-28T02:32:01.381076+00:00</updated>
  <author>
    <name>Greg Sanders 2023-06-21 20:57:45+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New transaction policies (nVersion=3) for contracting protocols</title>
    <updated>2023-06-28T02:32:01.381124+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021780.html" rel="alternate"/>
    <summary>Bitcoin developers have proposed changes to the Bitcoin Core software to improve the handling of conflicting transactions in the mempool. The proposal introduces a set of mempool/transaction relay policies that aim to aid L2/contract protocols. It addresses the issues with the previously proposed Package Mempool Accept package RBF by introducing additional rules without requiring a major overhaul of RBF.The proposed policies include rules for V3 transactions, modifications to package RBF rules, and suggestions for improvements. V3 transactions are currently non-standard in Bitcoin Core, so existing standard transactions will not be affected by these rules. For V3 transactions, there are several additional rules:1. A V3 transaction can be replaced even if it does not signal BIP125 replaceability. This allows for easier replaceability signaling when descendants of unconfirmed transactions are created.2. An unconfirmed V3 transaction cannot have more than 1 descendant, which prevents pinning attacks where a malicious counterparty adds many descendant transactions that aren't fee-bumping.3. A V3 transaction that has an unconfirmed V3 ancestor cannot be larger than 1000 virtual bytes, which sets limits on the size of fee-bumping transactions.The modifications to package RBF rules include allowing new unconfirmed inputs in a package, but the ancestor feerate of the child must be at least as high as the ancestor feerate of the package. This ensures that fee-bumping transactions have a higher feerate than their ancestors.The proposal also includes some suggestions for improvements, such as allowing OP_TRUE to become a standard script type to save bytes and allowing for a single dust-value output that is immediately spent by the package, making anchor outputs easier to design.These proposed policies aim to address pinning attacks, improve replaceability signaling, and provide better support for L2/contract protocols. The implementation has been made available on GitHub for Bitcoin Core.In addition to the proposed policies, the developers outlined two new rules in a recent mailing list post. The first rule states that when replacing a transaction, the minimum fee rate between the replacement transaction and its child's ancestor must not be lower than the fee rates of all directly conflicting transactions and the ancestor feerates of all original transactions. This modification ensures that replacement transactions are not less incentive-compatible to mine.The second rule requires all package transactions with mempool conflicts to be version 3 (V3). This means both the conflicting transaction and its child transaction must be V3. This rule ensures that package validation is only attempted if the transactions do not pay sufficient fees to be accepted on their own and that only V3 transactions can replace their ancestors' conflicts and be paid for by a descendant.The intended usage for Lightning Network (LN) transactions is also explained in the post. Commitment transactions should be V3 and have one anchor output. They can be signed with zero fees or 1 sat/vbyte once package relay is deployed on a significant portion of the network. If the commitment transaction needs to be broadcasted, the desired feerate should be determined at broadcast time, and the anchor output should be spent in a high feerate transaction. The child transaction, which bumps the fees, must also be V3 and have a maximum size of 1000vB.The post addresses several expected questions. It clarifies that the V3 descendant limit fixes Rule 3 Pinning and restricts both parties involved in the transaction. Fee-bumping a counterparty's commitment transaction using Child-Pays-for-Parent (CPFP) is not necessary as RBF (Replace-by-Fee) can be used by attaching a high-feerate child to the commitment transaction. The use of V3 transactions for LN transactions is not seen as a privacy issue since unilateral closes are already obvious LN transactions due to HTLC inputs.The post also mentions that V3 transactions that do not signal BIP125 replaceability are replaceable, but this is not considered a backward compatibility issue because under the previous policy, these transactions would not have been in the mempool. Additionally, it is noted that V2 transactions can replace V3 transactions and vice versa to prevent censorship of V2 transactions spending shared inputs. However, if the original V3 transaction has an unconfirmed V3 parent, it would violate the "inherited V3" rule and be rejected.Overall, the proposed changes aim to improve the handling of conflicting transactions in the Bitcoin Core software, particularly in the context of Lightning Network transactions. Feedback and review of these proposals are encouraged.</summary>
    <published>2023-06-21T20:57:45+00:00</published>
  </entry>
</feed>
