<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>New transaction policies (nVersion=3) for contracting protocols</title>
  <updated>2023-07-06T02:36:53.536887+00:00</updated>
  <author>
    <name>Greg Sanders 2023-06-21 20:57:45+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>New transaction policies (nVersion=3) for contracting protocols</title>
    <updated>2023-07-06T02:36:53.536948+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021780.html" rel="alternate"/>
    <summary>The proposal suggests a set of mempool/transaction relay policies to aid L2/contract protocols. These policies aim to solve issues with the previously proposed Package Mempool Accept package RBF and eliminate the need for CPFP carve-out. The proposal introduces additional rules for V3 transactions, as well as modifications to the package RBF rules. For V3 transactions, the following rules apply: 1. A V3 transaction can be replaced even if it does not signal BIP125 replaceability, as long as it meets other RBF rules around fees.2. Any descendant of an unconfirmed V3 transaction must also be V3. This provides "inherited" replaceability signaling when descendants are created and makes subsequent rules about descendant limits easier to check.3. An unconfirmed V3 transaction cannot have more than 1 descendant. This rule prevents a malicious counterparty from preventing transaction replacement by adding many non-fee-bumping descendant transactions.4. A V3 transaction with an unconfirmed V3 ancestor cannot be larger than 1000 virtual bytes. This limits the size of fee-bumping transactions and ensures that a child transaction only needs to fund fees, not payments.These rules provide upper and lower bounds on descendant limits and transaction sizes, allowing for efficient fee-bumping without requiring a carefully-managed UTXO pool.In addition to the V3 transaction rules, the proposal includes modifications to the package RBF rules. These modifications ensure that a package may include new unconfirmed inputs, but the ancestor feerate of the child must be at least as high as the ancestor feerate of the parent transaction.Overall, these policies aim to improve the replaceability and fee-bumping capabilities of transactions in L2/contract protocols, while maintaining compatibility with existing standardness rules.The Bitcoin development community is proposing changes to the transaction replacement policy for Bitcoin's mempool. The proposed changes aim to improve the incentive compatibility of replacement transactions and ensure that they are economically rational. One of the key modifications is the introduction of a new rule that requires all package transactions with mempool conflicts to be version 3 (V3). This means that both the conflicting transaction and its replacement must be V3. The rationale behind this rule is to make the fee-related rules economically rational for ancestor packages, which include child-with-parents packages.The package feerate and ancestor feerate of the child are used to determine the minimum feerate for replacement transactions. The new rule ensures that the minimum between the package feerate and ancestor feerate of the child is not lower than the individual feerates of all directly conflicting transactions and the ancestor feerates of all original transactions. This conservative approach is considered more suitable than the originally proposed method.The proposed changes also have implications for the usage of Lightning Network (LN). Commitment transactions in LN should be V3 and have one anchor output. They can be signed with zero fees or a low feerate once package relay is deployed on a significant portion of the network. If the commitment transaction needs to be broadcasted, the desired feerate should be determined at broadcast time, and the anchor output should be spent in a high feerate transaction. The broadcasted commitment transaction is referred to as "the parent," and the attached fee-bumping transaction is called "the child." Both the parent and the child must be V3 transactions.There are limitations on the size and number of inputs for the child transaction. It should be at most 1000vB in size, which restricts the number of inputs that can be used for funding the fee bump. Batched fee-bumping is allowed, where one child transaction can fund fees for multiple commitment transactions. To add more fees, a second fee-bump should be done by replacing the child with a higher-feerate transaction, rather than attaching a grandchild.The proposed changes address concerns about Rule 3 Pinning and ensure that both parties are restricted by the V3 descendant limit. Counterparty's commitment transactions can be fee-bumped by attaching a high-feerate child to the sender's commitment transaction, eliminating the need for Child Pays for Parent (CPFP).Regarding privacy concerns, it is acknowledged that widespread use of V3 transactions outside of Layer 2 (L2) may not be realistic. Unilateral closes are already identifiable LN transactions due to their HTLC inputs. For cooperative closes and opens, continuing to use V2 transactions is considered reasonable. The introduction of V3 transactions is not expected to worsen privacy issues.Backward compatibility is not a concern because under the previous policy, V3 transactions would not have been in the mempool. V3 transactions can replace V2 transactions and vice versa to prevent censorship of V2 transactions spending shared inputs. However, if the original V3 transaction has an unconfirmed V3 parent, it would violate the "inherited V3" rule and be rejected.Feedback and review from the Bitcoin development community are encouraged regarding these</summary>
    <published>2023-06-21T20:57:45+00:00</published>
  </entry>
</feed>
