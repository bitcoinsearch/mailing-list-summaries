<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-10T02:45:21.873764+00:00</updated>
  <author>
    <name>Joost Jager 2023-06-20 12:50:47+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-10T02:45:21.873793+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021778.html" rel="alternate"/>
    <summary>In an email conversation between Antoine Riard and Joost, they discuss the concept of an opt-in annex in multi-party protocols. Antoine seeks clarification on what it means for every input to commit to an annex, even if it is empty. Joost explains that this requirement ensures that existing multi-party protocols remain unaffected.Joost clarifies that when he mentions every input committing to an annex, he means that either all inputs have an annex or none of them do. In the context of a multi-party transaction, if a participant chooses not to commit to an annex, they can be confident that no version of the transaction will include a surprise annex from another signer. This prevents the possibility of being caught off guard by a potentially large annex.Looking ahead, Joost suggests that for future protocols relying on the annex, everyone would need to opt-in by committing to an annex. This commitment can be as simple as an empty annex, serving as a signal of their intention to participate.Overall, the opt-in annex requirement aims to maintain the integrity of multi-party protocols and prevent unexpected changes or additions to transactions.</summary>
    <published>2023-06-20T12:50:47+00:00</published>
  </entry>
</feed>
