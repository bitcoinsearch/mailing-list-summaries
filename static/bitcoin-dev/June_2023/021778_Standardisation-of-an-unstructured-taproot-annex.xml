<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-02T02:51:39.867236+00:00</updated>
  <author>
    <name>Joost Jager 2023-06-20 12:50:47+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-02T02:51:39.867266+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021778.html" rel="alternate"/>
    <summary>In an email exchange, Antoine Riard raised a question regarding the requirement for every input in a transaction to commit to an annex, even if it is empty. Joost clarified that this requirement does not mean rejecting a transaction where the minimal annex with its 0x50 tag is absent. Instead, it means that either all inputs have an annex or none of them have one. The purpose of this requirement is to ensure that existing multi-party protocols remain unaffected. In a multi-party transaction, if one participant chooses not to commit to an annex, they can be confident that no version of the transaction will appear where another signer surprises them with a potentially large annex.For future protocols that rely on the annex, it would be necessary for everyone to opt-in by committing to an annex. The annex can be empty, serving only as a signal of opt-in. This approach ensures consistency and transparency in transactions involving multiple parties.Overall, the requirement for every input to commit to an annex, even if it is empty, serves to maintain the integrity of multi-party protocols and provide clarity for future protocols relying on the annex feature.</summary>
    <published>2023-06-20T12:50:47+00:00</published>
  </entry>
</feed>
