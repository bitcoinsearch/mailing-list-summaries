<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-06-28T02:42:39.408696+00:00</updated>
  <author>
    <name>Joost Jager 2023-06-20 12:50:47+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-06-28T02:42:39.408728+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021778.html" rel="alternate"/>
    <summary>In an email conversation between Antoine Riard and Joost, the topic of discussion is about an opt-in annex for transactions. Antoine asks Joost to clarify what he means by requiring every input to commit to an annex even if it is empty. Joost explains that what he meant, and what was previously mentioned by Greg in an email, is that either none of the inputs have an annex or all of them have one.The purpose of this requirement is to ensure that existing multi-party protocols remain unaffected. In a multi-party transaction, if someone does not commit to an annex, they can be certain that no version of the transaction will appear where another signer surprises them with a potentially large annex. For future protocols that rely on the annex, everyone would need to opt-in by committing to an annex. This annex can be empty, but it serves as a signal of opting-in. The email does not provide any further information or context regarding the specific use or implications of the opt-in annex.Overall, the discussion revolves around the requirement for every input in a transaction to commit to an annex, either with content or as an empty annex, in order to maintain the integrity of multi-party protocols and ensure that signers are not surprised by unexpected annexes.</summary>
    <published>2023-06-20T12:50:47+00:00</published>
  </entry>
</feed>
