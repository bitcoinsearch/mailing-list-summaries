<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-03T02:43:41.093878+00:00</updated>
  <author>
    <name>Joost Jager 2023-06-20 12:50:47+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-03T02:43:41.093904+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021778.html" rel="alternate"/>
    <summary>In an email exchange between Antoine Riard and Joost, they discuss the concept of an opt-in annex in multi-party protocols. Antoine seeks clarification on what it means for every input to commit to an annex, even if it is empty. Joost explains that this requirement ensures that existing multi-party protocols are not disrupted.Joost clarifies that when he mentions every input committing to an annex, he does not mean rejecting a transaction in which the minimal annex with its 0x50 tag is absent. Instead, he suggests that either all inputs have an annex or none of them do. This approach ensures that participants in a multi-party transaction can be confident that no version of the transaction will include a surprise annex from another signer.In the future, for protocols that rely on the annex, everyone would need to opt-in by committing to an annex. Even an empty annex can serve as a signal of opt-in. The purpose of this opt-in requirement is to maintain consistency and prevent unexpected changes in multi-party transactions.Overall, the discussion revolves around the idea of an opt-in annex in multi-party protocols, where participants must commit to an annex to ensure the integrity of transactions and avoid surprises.</summary>
    <published>2023-06-20T12:50:47+00:00</published>
  </entry>
</feed>
