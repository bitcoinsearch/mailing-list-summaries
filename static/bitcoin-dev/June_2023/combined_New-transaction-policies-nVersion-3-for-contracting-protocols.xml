<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - New transaction policies (nVersion=3) for contracting protocols</title>
  <updated>2023-06-30T02:26:38.206428+00:00</updated>
  <author>
    <name>Greg Sanders 2023-06-21 20:57:45+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-30 12:17:38+00:00</name>
  </author>
  <author>
    <name>Gloria Zhao 2022-09-23 15:18:21+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-26 15:27:40+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-23 18:48:39+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-29 14:41:28+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-30 12:08:41+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-26 16:01:54+00:00</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-09-30 00:13:53+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-09-25 23:59:22+00:00</name>
  </author>
  <author>
    <name>Gloria Zhao 2022-09-26 16:47:49+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-29 09:15:02+00:00</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-10-01 09:59:55+00:00</name>
  </author>
  <link href="bitcoin-dev/June_2023/021780_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020960_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020937_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020941_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020938_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020951_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020959_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020942_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020957_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020939_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020943_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020950_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020962_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - New transaction policies (nVersion=3) for contracting protocols</title>
    <updated>2023-06-30T02:26:38.206554+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021780.html" rel="alternate"/>
    <summary>The proposal being discussed in the context is about a set of mempool/transaction relay policies that aim to aid L2/contract protocols. The proposal suggests a simple set of rules that can solve the problem of pinning and potentially eliminate the need for CPFP carve-out. The proposed policies include additional rules for V3 transactions and modifications to package RBF rules.V3 transactions are currently non-standard in Bitcoin Core, meaning that any transaction that was standard before this policy change would still be standard afterwards. The additional rules for V3 transactions include the ability for them to be replaced even if they do not signal BIP125 replaceability, as long as they meet other RBF rules around fees. Additionally, any descendant of an unconfirmed V3 transaction must also be V3. This approach allows for "inherited" replaceability signaling when descendants of unconfirmed transactions are created.Another rule states that an unconfirmed V3 transaction cannot have more than 1 descendant. This is to prevent a pinning attack where a malicious counterparty adds many descendant transactions that aren't fee-bumping, thus preventing the transaction from being replaced.Furthermore, a V3 transaction with an unconfirmed V3 ancestor cannot be larger than 1000 virtual bytes. This limit is intended to control the size of the transaction and manage the number of UTXOs used for fee-bumping. A limit of 1000 virtual bytes allows for 6-15 UTXOs to fund a fee-bump without requiring a carefully-managed UTXO pool.In addition to the rules for V3 transactions, there are also modifications proposed for package RBF. One modification suggests allowing OP_TRUE to become a standard script type, which can save bytes by having the input empty of witness data. Another modification proposes allowing a single dust-value output that is immediately spent by the package, making anchor outputs easier to design.Overall, the proposal aims to address pinning issues and improve the efficiency of fee-bumping in L2/contract protocols. It suggests specific rules for V3 transactions and modifications to package RBF to achieve these goals.The Bitcoin developer community is discussing a proposal for transaction replacement rules that would allow a child transaction to pay for a fee-bump of its parent transaction. This proposal aims to improve the security model for layer-two (L2) contracts by introducing version 3 (V3) transactions that can be replaced even if they do not signal BIP125 replaceability. The proposal includes additional rules for V3 transactions, such as requiring that any descendant of an unconfirmed V3 transaction must also be V3 and limiting the size of a V3 transaction with an unconfirmed V3 ancestor to 1000 virtual bytes. Commitment transactions should be V3 and have one anchor output. The proposal also includes modifications to package replace-by-fee (RBF) rules, allowing presigned transactions to replace each other and simplifying the process for L2 protocol developers. The proposal has been implemented in Bitcoin Core, and feedback from users is encouraged.The proposal aims to solve problems with Rule 3 pinning and may allow the removal of CPFP carve-out. It includes changes to the package RBF rules, making it possible to use a single anchor output instead of multiple ones, which may simplify the process for L2 protocol developers. The proposal also suggests allowing OP_TRUE to become a standard script type to save bytes. The proposed changes are considered valuable for L2 contracts and may greatly improve their security model. However, there are concerns about the impact on the UTXO set and the chance of the 0 sat output entering the UTXO set.The proposal includes intended usage for Lightning Network (LN) transactions, recommending that commitment transactions be V3 and have one anchor output. They can be signed with 0 fees or 1sat/vbyte once package relay is deployed on a significant portion of the network. If the commitment transaction must be broadcast, the desired feerate can be determined at broadcast time, and the anchor output can be spent in a high feerate transaction. The proposal also addresses expected questions from the community, such as whether the proposal fixes Rule 3 pinning and whether it is a privacy issue. Feedback and review of the proposal are encouraged.Overall, the proposal for package replace-by-fee (RBF) in Bitcoin transactions aims to improve the security model for layer-two (L2) contracts by introducing version 3 (V3) transactions that allow for replaceability through child-pays-for-parent (CPFP). It includes additional rules for V3 transactions and modifications to package RBF rules. The proposal has been implemented in Bitcoin Core, and feedback from users is welcomed.Bitcoin developer Gloria Zhao has proposed a new version of transaction format, V3, aimed at improving replace-by-fee (RBF) and child-pays-for-parent (CPFP) protocols. The proposal includes four rules that specify limits on the size and number of "</summary>
    <published>2023-06-21T20:57:45+00:00</published>
  </entry>
</feed>
