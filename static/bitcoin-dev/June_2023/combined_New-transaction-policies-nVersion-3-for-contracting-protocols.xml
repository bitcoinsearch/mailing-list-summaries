<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - New transaction policies (nVersion=3) for contracting protocols</title>
  <updated>2023-07-03T02:32:13.782239+00:00</updated>
  <author>
    <name>Greg Sanders 2023-06-21 20:57:45+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-30 12:17:38+00:00</name>
  </author>
  <author>
    <name>Gloria Zhao 2022-09-23 15:18:21+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-26 15:27:40+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-23 18:48:39+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-29 14:41:28+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-30 12:08:41+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-26 16:01:54+00:00</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-09-30 00:13:53+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-09-25 23:59:22+00:00</name>
  </author>
  <author>
    <name>Gloria Zhao 2022-09-26 16:47:49+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-29 09:15:02+00:00</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-10-01 09:59:55+00:00</name>
  </author>
  <link href="bitcoin-dev/June_2023/021780_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020960_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020937_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020941_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020938_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020951_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020959_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020942_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020957_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020939_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020943_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020950_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020962_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - New transaction policies (nVersion=3) for contracting protocols</title>
    <updated>2023-07-03T02:32:13.782383+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021780.html" rel="alternate"/>
    <summary>The proposal being discussed in the context is about a set of mempool/transaction relay policies aimed at aiding L2/contract protocols. The proposal suggests the use of V3 transactions, which are currently non-standard in Bitcoin Core, to solve pinning issues and potentially eliminate the need for CPFP carve-out.The proposed policies include additional rules for V3 transactions and modifications to package RBF rules.V3 transactions would be subject to existing standardness rules, such as weight limits and output types. In addition, the following rules would apply to V3 transactions:1. A V3 transaction can be replaced, even if it does not signal BIP125 replaceability. This allows for easier fee-bumping and avoids the need for mempool traversal.2. Any descendant of an unconfirmed V3 transaction must also be V3. This ensures that the replaceability signaling is inherited by descendants and simplifies the checking of descendant limits.3. An unconfirmed V3 transaction cannot have more than 1 descendant. This sets an upper bound on the number of descendants to prevent pinning attacks and ensures that at least 1 descendant is available for CPFP.4. A V3 transaction with an unconfirmed V3 ancestor cannot be larger than 1000 virtual bytes. This sets a limit on the size of the transaction to avoid excessive replacement costs and allows for efficient fee-bumping with a reasonable number of UTXOs.The proposed modifications to package RBF rules include allowing new unconfirmed inputs in a package, but requiring the ancestor feerate of the child to be at least as high as the ancestor feerate of the parent. This ensures that the child transaction is not replacing its parent with a lower feerate.The author of the proposal also suggests some additional ideas, such as allowing OP_TRUE to become a standard script type to save space and simplifying the design of anchor outputs.Overall, the proposal aims to improve the replaceability and fee-bumping capabilities of transactions, particularly for L2/contract protocols, while maintaining compatibility with existing standardness rules. The use of V3 transactions and modifications to package RBF rules are proposed as solutions to address pinning issues and enhance transaction flexibility.The proposal for package replace-by-fee (RBF) in Bitcoin transactions aims to improve the security model for layer-two (L2) contracts. It involves using version 3 (V3) transactions that allow for replaceability through child-pays-for-parent (CPFP), which means that only the commitment transaction and up to 1000 virtual bytes (vB) need to be replaced, rather than the entire channel state.Under this proposal, any descendant of an unconfirmed V3 transaction must also be V3, and an unconfirmed V3 transaction cannot have more than one descendant. The maximum size of a V3 transaction with an unconfirmed V3 ancestor is 1000 virtual bytes.The proposal includes other changes, such as allowing a single dust-value output that is immediately spent by the package, making anchors easier to design. Batched fee-bumping of time-sensitive confirmations of commitment transactions is unsafe as it could delay confirmation of remaining elements in the batch. A recommendation is made for L2 wallets to fan-out their big UTXOs in N fan-out outputs ready to feed the remaining in-flight channels. Additionally, a suggestion is made to allow OP_TRUE to become a standard script type, saving bytes by having the input empty of witness data and making it spendable by both participants.There are also discussions on other changes that could be made to improve the RBF system, such as making OP_TRUE standard and allowing outputs below dust, and restricting the size of the whole unconfirmed package, including potential v2 unconfirmed ancestors. However, it is agreed that these changes can be added later as they won't be standard until they are allowed.Gloria Zhao has proposed a set of mempool/transaction relay policies to aid L2/contract protocols, which includes additional policy rules applying to V3 transactions and modifications to package RBF rules. The proposal aims to solve problems with the previous Package Mempool Accept package RBF and Rule 3 pinning. Commitment transactions should be V3 and have one anchor output, and the child must be at most 1000vB. By making these changes, descendant limits for V3 transactions will become more restrictive. Gloria has also provided an implementation along with documentation on GitHub. Existing standardness rules apply to V3 transactions, and they can replace even if they do not signal BIP125 replaceability. Any descendant of an unconfirmed V3 transaction must also be V3.There are concerns about the impact on the UTXO set, and the chance of the 0 sat output entering the UTXO set. It is suggested that this should not happen often in practice, but the chance is not zero. There are also discussions on limitations of the proposal, such as not fixing ANYONE</summary>
    <published>2023-06-21T20:57:45+00:00</published>
  </entry>
</feed>
