<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - New transaction policies (nVersion=3) for contracting protocols</title>
  <updated>2023-07-10T02:39:24.342832+00:00</updated>
  <author>
    <name>Greg Sanders 2023-06-21 20:57:45+00:00</name>
  </author>
  <author>
    <name>Gloria Zhao 2022-09-26 16:47:49+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-29 09:15:02+00:00</name>
  </author>
  <author>
    <name>Gloria Zhao 2022-09-23 15:18:21+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-30 12:08:41+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-30 12:17:38+00:00</name>
  </author>
  <author>
    <name>Bastien TEINTURIER 2022-09-26 15:27:40+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-23 18:48:39+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-26 16:01:54+00:00</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-09-30 00:13:53+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2022-09-29 14:41:28+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2022-09-25 23:59:22+00:00</name>
  </author>
  <author>
    <name>Ruben Somsen 2022-10-01 09:59:55+00:00</name>
  </author>
  <link href="bitcoin-dev/June_2023/021780_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020943_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020950_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020937_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020959_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020960_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020941_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020938_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020942_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020957_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020951_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2022/020939_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2022/020962_New-transaction-policies-nVersion-3-for-contracting-protocols.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - New transaction policies (nVersion=3) for contracting protocols</title>
    <updated>2023-07-10T02:39:24.343073+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021780.html" rel="alternate"/>
    <summary>The Bitcoin development team has proposed a set of mempool and transaction relay policies, known as BIP-325, to assist Layer 2/contract protocols. The aim is to improve the replace-by-fee (RBF) feature by introducing version 3 transactions (V3). These V3 transactions have a descendant size limit of 1000 virtual bytes, which reduces the cost of fee-bumping transactions. The proposal includes modifications to the package RBF rules, such as requiring all package transactions with mempool conflicts to be V3.Commitment transactions in the Lightning Network should be V3 and have one anchor output. The child transaction that funds fees for multiple commitment transactions must also be V3 and limited to a maximum size of 1000vB. To add more fees, the child transaction can be replaced with a higher-feerate transaction, but attempting to attach a grandchild transaction is not allowed.There are concerns about potential pinning attacks under the proposal. Gloria Zhao clarifies that the proposal is specifically designed for LN Penalty and does not address all possible pinning attacks. Some imperfections in the proposal are acknowledged, such as the inability to handle situations where the parent transaction can be inflated by adding additional inputs or batch transactions that require accelerating some but not others.The proposal has already been implemented and documented for Bitcoin Core. The development team welcomes feedback and review of the proposal. The discussion among developers highlights suggestions for further improvements, including detecting "sibling output spend" conflicts, allowing OP_TRUE to become a standard script type, and having a single dust-value output immediately spent by the package.The proposal aims to provide inherited replaceability signaling when creating descendants of unconfirmed transactions and prevent pinning attacks from malicious counterparties. It also addresses expected questions, such as fixing Rule 3 Pinning and ensuring privacy by assuming V3 transactions will mainly be used within L2.Overall, the proposal introduces new policies to enhance the replace-by-fee feature for Layer 2/contract protocols, with a focus on V3 transactions and modifications to package RBF rules. Feedback and review from the community are encouraged to further refine the proposal.Bitcoin developer Gloria Zhao has proposed a new version of transaction format, V3, aimed at improving replace-by-fee (RBF) and child-pays-for-parent (CPFP) protocols. The proposal includes four rules that specify limits on the size and number of "descendant" transactions, or those that rely on an unconfirmed parent transaction for funding. One of the key changes is that a V3 transaction cannot change based on what transactions are mined, which simplifies subsequent rules about descendant limits much easier to check. Unconfirmed V3 transactions cannot have more than one descendant. A V3 transaction that has an unconfirmed V3 ancestor cannot be larger than 1000 virtual bytes. Commitment transactions should also be V3 and have one anchor output.The proposal aims to prevent pinning attacks where a malicious counterparty prevents a transaction from being replaced by adding many descendant transactions that aren't fee-bumping. The smaller the descendant size limit, the fewer UTXOs a child may use to fund this fee-bump. However, as the fee-bumping child only needs to fund fees, just a few UTXOs should suffice. With a limit of 1000 virtual bytes, depending on the output types, the child can have 6-15 UTXOs, which should be enough to fund a fee-bump without requiring a carefully-managed UTXO pool.Package RBF modifications have also been suggested. One of the main changes is that all package transactions with mempool conflicts are required to be V3. This also means the "sponsoring" child transaction must be V3. The proposals are intended for usage in Layer 2 Bitcoin transactions, such as commitment transactions on the Lightning Network. A proposal for a minimally-invasive step to enable fee-bumping presigned transactions specifically using Child-Pays-For-Parent (CPFP) and anchor outputs has been put forward. The proposal intends to fix the Lightning Network Penalty and does not close all pinning attacks possible. While it is tailored for LN Penalty, it works for Lightning today. One scenario it does not fix is where HTLC/commitment-like transactions are being resolved in a batch, but due to relative time constraints, you may want to accelerate some and not others. This RBF package would require replacements to be better mining candidates.It is suggested that the current package RBF logic may cover this scenario as they are simply replacing [ParentTx, ChildTx1] with [ParentTx, ChildTx2] that pays more fees. The proposal has received feedback from various individuals who have shared their thoughts and suggestions. Improvements to restrict the whole v3 package's size via committing to a specific value in the taproot annex were suggested. However, it was believed that this could make relay policy stricter, and therefore this change</summary>
    <published>2023-06-21T20:57:45+00:00</published>
  </entry>
</feed>
