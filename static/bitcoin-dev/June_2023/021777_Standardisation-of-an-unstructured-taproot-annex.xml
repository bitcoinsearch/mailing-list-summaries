<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-11T02:28:40.221653+00:00</updated>
  <author>
    <name>Joost Jager 2023-06-20 12:30:19+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-11T02:28:40.221687+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021777.html" rel="alternate"/>
    <summary>In an email, Joost Jager discusses the advantages of the taproot annex in Bitcoin. He explains that the annex's data is not included in the calculation of transaction IDs (txid) or potential parent commit transaction's txid, making it a powerful tool for applications that would ideally use covenants. One critical application is time-locked vaults, which have received positive reception, such as the proposal for OP_VAULT. Pre-signed transactions using ephemeral keys can improve the safeguarding of Bitcoin in the short term until OP_VAULT is implemented.However, without the annex, the creation and signature backup of time-locked vaults cannot be executed in one atomic operation, leading to a circular reference problem. While storing the backup in a child commit/reveal transaction set is possible, the vault itself can be confirmed independently, potentially leaving the backup unconfirmed. This poses a risk of losing funds if the ephemeral signatures are lost.Joost acknowledges that this use case for the annex has been labeled "speculative," but argues that every use case appears speculative at this point since the annex is not yet available. Nevertheless, if time-locked vaults are considered important for Bitcoin and the implementation of soft forks like OP_VAULT is challenging, the intermediate solution described above becomes relevant.To support this use case, Joost has created a simple demo application that demonstrates how a coin can be spent to a special address and later moved to a pre-defined final destination. The demo utilizes the annex to store the ephemeral signature for the pre-signed transaction, ensuring the coin cannot get lost. While the application may not be the most practically useful, more advanced covenants like time-locked vaults can be implemented similarly.Joost hopes that this demo raises awareness of the on-chain ephemeral signature backup functionality enabled by the annex.</summary>
    <published>2023-06-20T12:30:19+00:00</published>
  </entry>
</feed>
