<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-08T02:34:39.836559+00:00</updated>
  <author>
    <name>Joost Jager 2023-06-20 12:30:19+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-08T02:34:39.836586+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021777.html" rel="alternate"/>
    <summary>In an email, Joost Jager discusses the advantages of the taproot annex and its potential applications. He explains that the annex's data is not included in the calculation of transaction IDs or parent commit transaction IDs, making it a powerful tool for applications that would ideally use covenants. One critical application he highlights is time-locked vaults, which have received positive reception. While proposals like OP_VAULT are still in progress, pre-signed transactions using ephemeral keys can improve the safeguarding of Bitcoin in the short term.Joost emphasizes the importance of backing up the ephemeral signatures of pre-signed transactions on the blockchain itself to ensure that the vault can always be accessed. However, without the annex, this process is less safe due to the circular reference problem. The creation of the vault and signature backup cannot be executed in one atomic operation, potentially resulting in the loss of funds if the ephemeral signatures are lost.Although some may label the use case for the annex as speculative, Joost argues that every use case appears speculative because the annex is not yet available. He believes that if time-locked vaults are considered important for Bitcoin and acknowledges the difficulty of implementing soft forks like OP_VAULT, the intermediate solution described above is highly relevant.To support this use case, Joost has created a simple demo application that demonstrates how a coin can be spent to a special address and then moved to a pre-defined final destination at a later stage. The demo utilizes the annex to store the ephemeral signature for the pre-signed transaction, ensuring that the coin cannot be lost. While the demo may not be the most practical application, more advanced covenants such as time-locked vaults can be implemented similarly.Joost hopes that this demo raises awareness of the on-chain ephemeral signature backup functionality enabled by the annex.</summary>
    <published>2023-06-20T12:30:19+00:00</published>
  </entry>
</feed>
