<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-10T02:44:55.363770+00:00</updated>
  <author>
    <name>Joost Jager 2023-06-20 12:30:19+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-10T02:44:55.363817+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021777.html" rel="alternate"/>
    <summary>Joost Jager discusses the primary advantage of the taproot annex, which is that its data is not included in the calculation of the txid or a potential parent commit transaction's txid. This feature makes the annex a powerful tool for applications that would ideally use covenants. The most critical application in this category is time-locked vaults. Joost mentions that pre-signed transactions signed using an ephemeral key can fill the gap and improve the safeguarding of Bitcoin in the short term. However, without the annex, the creation of the vault and the signature backup cannot be executed in one atomic operation, leading to potential loss of funds if the ephemeral signatures are lost.Joost emphasizes that while some label this use case for the annex as speculative, he believes that every use case appears speculative at this point because the annex is not yet available. He argues that if time-locked vaults are important for Bitcoin and acknowledging the difficulty in implementing soft forks like the one required for OP_VAULT, the intermediate solution of using the annex is relevant.To support this use case, Joost has created a simple demo application that demonstrates how a coin can be spent to a special address from which it can only move to a pre-defined final destination at a later stage. The demo utilizes the annex to store the ephemeral signature for the pre-signed transaction, ensuring that the coin cannot get lost. While this application may not be the most practically useful, more advanced covenants such as time-locked vaults can be implemented similarly. Joost hopes that this demo will raise awareness of the on-chain ephemeral signature backup functionality enabled by the annex.For more information, Joost provides a link to the GitHub repository where the demo application is hosted.</summary>
    <published>2023-06-20T12:30:19+00:00</published>
  </entry>
</feed>
