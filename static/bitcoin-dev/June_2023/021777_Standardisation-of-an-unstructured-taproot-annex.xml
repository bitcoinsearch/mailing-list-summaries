<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-02T02:50:55.646731+00:00</updated>
  <author>
    <name>Joost Jager 2023-06-20 12:30:19+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-02T02:50:55.646763+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021777.html" rel="alternate"/>
    <summary>Joost Jager discusses the advantages of using the taproot annex in Bitcoin transactions. The primary advantage is that the data in the annex is not included in the calculation of the transaction ID (txid) or a potential parent commit transaction's txid. This makes the annex a powerful tool for applications that would ideally use covenants. One critical application is time-locked vaults, which have received positive reception with proposals such as OP_VAULT. While OP_VAULT may be further out, pre-signed transactions signed using an ephemeral key can improve the safeguarding of Bitcoin in the short term.However, without the annex, backing up the ephemeral signatures of the pre-signed transactions on the blockchain itself is not as safe as it could be. There is a circular reference problem that prevents the vault creation and signature backup from being executed in one atomic operation. For example, if you create a vault and lose the ephemeral signatures, the funds will be lost. The annex solves this problem by allowing the backup to be stored separately, ensuring that the vault can always be "opened."Some have labeled this use case for the annex as speculative, but Joost argues that all use cases appear speculative at this point because the annex is not yet available. However, if you believe that time-locked vaults are important for Bitcoin and acknowledge the difficulty of implementing soft forks like OP_VAULT, the intermediate solution described above becomes very relevant.To support this use case, Joost has created a simple demo application that demonstrates how a coin can be spent to a special address and then moved to a pre-defined final destination at a later stage. The demo uses the annex to store the ephemeral signature for the pre-signed transaction, ensuring that the coin cannot get lost. While the demo may not be the most practically useful, more advanced covenants such as time-locked vaults can be implemented similarly.Overall, Joost hopes that this raises awareness of the on-chain ephemeral signature backup functionality that the annex uniquely enables.</summary>
    <published>2023-06-20T12:30:19+00:00</published>
  </entry>
</feed>
