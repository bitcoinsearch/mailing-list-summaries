<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Some Day Peg: A crazy two-way peg bridging BTC to other chains Raw</title>
  <updated>2023-07-05T02:42:36.241811+00:00</updated>
  <author>
    <name>Robin Linus 2023-06-22 11:49:41+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Some Day Peg: A crazy two-way peg bridging BTC to other chains Raw</title>
    <updated>2023-07-05T02:42:36.241847+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021781.html" rel="alternate"/>
    <summary>Hi all,Robin shared an interesting implementation of a two-way peg in Bitcoin Script. The implementation can be found on GitHub at the following link: https://gist.github.com/RobinLinus/1102fce176f3b5466180addac5d26313This implementation is not meant to be taken seriously, but rather as a fun and playful experiment. It explores the concept of a two-way peg, which allows for the transfer of assets between different blockchains.A two-way peg is a mechanism that enables the movement of assets from one blockchain to another and vice versa. It ensures that the assets remain secure and verifiable throughout the process.The gist shared by Robin demonstrates how a two-way peg can be implemented using Bitcoin Script. Bitcoin Script is the programming language used in Bitcoin transactions.By studying this implementation, developers can gain insights into the workings of a two-way peg and explore possibilities for implementing it in their own projects.Please note that this implementation should be viewed as an educational resource rather than a production-ready solution. It serves as a creative and experimental exploration of the capabilities of Bitcoin Script.If you're interested in learning more about two-way pegs and the potential applications they offer, be sure to check out Robin's GitHub gist at the link provided above.Happy exploring!-Robin</summary>
    <published>2023-06-22T11:49:41+00:00</published>
  </entry>
</feed>
