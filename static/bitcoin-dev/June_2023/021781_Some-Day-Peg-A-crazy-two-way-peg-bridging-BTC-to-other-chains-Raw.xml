<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>Some Day Peg: A crazy two-way peg bridging BTC to other chains Raw</title>
  <updated>2023-07-10T02:49:39.683744+00:00</updated>
  <author>
    <name>Robin Linus 2023-06-22 11:49:41+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>Some Day Peg: A crazy two-way peg bridging BTC to other chains Raw</title>
    <updated>2023-07-10T02:49:39.683789+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021781.html" rel="alternate"/>
    <summary>Hi all,Robin has shared an interesting implementation of a two-way peg in Bitcoin Script. The implementation can be found at the following link: https://gist.github.com/RobinLinus/1102fce176f3b5466180addac5d26313.This implementation is not intended to be a serious solution, but rather an exploration of the concept. It demonstrates how a two-way peg can be achieved using Bitcoin Script. A two-way peg is a mechanism that allows for the transfer of assets between two different blockchains, while maintaining their individual integrity. In this case, the implementation focuses on transferring assets between Bitcoin and another blockchain.The link provided leads to a GitHub gist, where the implementation is shared. It is important to note that this implementation is not production-ready and should not be used in a live environment. However, it serves as an interesting example of how Bitcoin Script can be used to achieve a two-way peg.Overall, Robin's implementation of a two-way peg in Bitcoin Script provides a valuable insight into the possibilities of cross-chain asset transfers. While not intended for production use, it serves as a starting point for further exploration and development in this area.</summary>
    <published>2023-06-22T11:49:41+00:00</published>
  </entry>
</feed>
