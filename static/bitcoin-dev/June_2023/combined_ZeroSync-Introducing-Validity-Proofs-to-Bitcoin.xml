<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - ZeroSync: Introducing Validity Proofs to Bitcoin</title>
  <updated>2023-08-02T09:27:14.803281+00:00</updated>
  <author>
    <name>Erik Aronesty 2023-06-05 18:59:58+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-06-05 18:47:03+00:00</name>
  </author>
  <author>
    <name>Robin Linus 2023-05-12 16:03:06+00:00</name>
  </author>
  <author>
    <name>Weiji Guo 2023-05-12 15:32:55+00:00</name>
  </author>
  <author>
    <name>Robin Linus 2023-05-12 12:12:03+00:00</name>
  </author>
  <link href="bitcoin-dev/June_2023/021753_ZeroSync-Introducing-Validity-Proofs-to-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/June_2023/021752_ZeroSync-Introducing-Validity-Proofs-to-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021681_ZeroSync-Introducing-Validity-Proofs-to-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021680_ZeroSync-Introducing-Validity-Proofs-to-Bitcoin.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2023/021679_ZeroSync-Introducing-Validity-Proofs-to-Bitcoin.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - ZeroSync: Introducing Validity Proofs to Bitcoin</title>
    <updated>2023-08-02T09:27:14.803281+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021753.html" rel="alternate"/>
    <summary>A research paper titled "ZeroSync: Introducing Validity Proofs to Bitcoin" has been published, introducing ZeroSync as a proof system that addresses scalability challenges with Succinct Non-Interactive Argument of Knowledge (SNARKs). The system compresses the entire Bitcoin blockchain into a compact proof of validity, enabling instant verification and unlocking various innovative applications. The prototype implementation of a chain state proof utilizes the Cairo language, Utreexo, and recursive STARKs.Chain state proofs require no consensus changes, which makes them crucial as forks in Bitcoin are challenging to implement and achieve consensus for. ZeroSync enables diverse applications, including quick bootstrapping of full nodes, trustless light clients, enhanced Lightning Network privacy, and secure cross-chain bridges. Additionally, zkCoins, a client-side validation protocol combined with zero-knowledge SNARKs, is introduced, drastically improving privacy and throughput of token transactions.However, there are two serious issues with this proposal; firstly, it creates an alternative implementation of the Bitcoin protocol, which may fail to implement an exact copy of the consensus rules, leading to potential forks. Secondly, if the tech advances to the point where proof-generation is fast enough to happen in real-time, Bitcoin miners adopting it along with other widespread adoption may cause Bitcoin to lose its decentralization.In a conversation between Weiji and Robin, the latter explains his plans to implement a SNARK verifier on Bitcoin's base layer. However, he clarifies that this is a long-term option that will take years, and for now, they plan to experiment with Simplicity on the Liquid sidechain when it gets activated. Weiji informs Robin that he proposed a new opcode OP_ZKP to enable the Bitcoin network to verify zkp proofs, which requires a soft fork. Robin acknowledges the proposal but mentions that it is hard to establish consensus over some particular kind of op_snark_verify opcode because there are many competing proof systems with different trade-offs.He goes on to explain that STARKs are great for a chain state proof as they are scalable and allow for processing huge circuits; however, he would not favor STARKs for an on-chain verifier because there are other proof systems, such as Plonky2, with much smaller proof sizes. Robin also highlights that once they have any verifier, they can use it to wrap other proofs. Finally, Robin invites Weiji to join their Telegram group if he would like to chat about SNARKs on Bitcoin.Weiji emailed Robin to enquire about his plans to implement a SNARK verifier on Bitcoin's base layer. Weiji had earlier proposed a new opcode OP_ZKP to enable the Bitcoin network to verify zkp proofs, which requires a soft fork. Robin responded by sharing his research on ZeroSync, the first-ever proof system addressing Bitcoinâ€™s scalability challenges with Succinct Non-Interactive Argument of Knowledge (SNARKs). ZeroSync compresses the entire Bitcoin blockchain into a compact proof of validity, enabling instant verification and unlocking various innovative applications. The prototype implementation of a chain state proof was done using the Cairo language, Utreexo, and recursive STARKs. Robin's work enables diverse applications, including quick bootstrapping of full nodes, trustless light clients, enhanced Lightning Network privacy, and secure cross-chain bridges. Chain state proofs require no consensus changes, which is crucial as forks in Bitcoin are challenging to implement and achieve consensus for. He also introduced zkCoins, a client-side validation protocol combined with zero-knowledge SNARKs, drastically improving privacy and throughput of token transactions. In combination with future Bitcoin features, such as Simplicity, zkCoins also enables private and more scalable BTC transactions.The groundbreaking compression capabilities of SNARKs initiated a paradigm shift in cryptocurrency design, and ZeroSync is pioneering their application to Bitcoin. The full paper can be found at https://zerosync.org/zerosync.pdf. Robin welcomes comments and questions from the bitcoin dev community about the paper.</summary>
    <published>2023-06-05T18:59:58+00:00</published>
  </entry>
</feed>
