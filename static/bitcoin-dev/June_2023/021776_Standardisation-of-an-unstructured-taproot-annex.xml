<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-06-27T03:01:10.499337+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-19 01:14:10+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-06-27T03:01:10.499368+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021776.html" rel="alternate"/>
    <summary>Antoine Riard wrote to Greg Sanders regarding the Opt-in annex policy. He was unclear whether they were talking about opt-in of non-deployed protocols or deployed ones like coinjoin/lightning spending P2TR outputs. If it is just adding an annex for non-deployed-yet protocols, then a currently deployed protocol could always be opted-in to the new annex policy through script spend path in the context of collaborative added inputs. However, if those use-cases catched up in terms of economic weight, the coordination cost of deploying a new policy might be prohibitive, or require very long periods. Greg replied that people should not build protocols meant for production on top of undeveloped upgrade hooks and we should not be encumbered by these premature choices if so. He asked for a citation to understand more. Antoine argued that the use-cases would not be illegitimate, and we should care more about sound and "firewalled" signaling and upgrading mechanisms that let us deploy new policy rules for new use-cases smoothly.Earlier, Joost Jager had suggested a restrictive policy that would still enable annex-vaults and is in line with work already done. This involved opt-in annex (every input must commit to an annex even if its is empty), Tlv format as defined in https://github.com/bitcoin/bips/pull/1381, Only allow tlv record 0 - unstructured data and Limit maximum size of the value to 256 bytes to protect opt-in users. However, the limit of 126 bytes isn't sufficient for these types of vaults.</summary>
    <published>2023-06-19T01:14:10+00:00</published>
  </entry>
</feed>
