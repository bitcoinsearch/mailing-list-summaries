<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-13T02:44:52.208929+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-19 01:14:10+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-13T02:44:52.208970+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021776.html" rel="alternate"/>
    <summary>In a discussion between Greg and Antoine, the topic of opt-in annexes for protocols in Bitcoin was raised. Antoine questioned whether the opt-in mechanism would apply to non-deployed protocols or already deployed ones. He mentioned scenarios like pre-signed vaults and coinjoin/lightning spending P2TR outputs, where witness inflation could occur. Antoine suggested that if the opt-in mechanism only applies to non-deployed protocols, then existing protocols can still be opted-in through script spend path in the context of collaborative added inputs.Greg responded by stating that people should not build protocols meant for production on undeveloped upgrade hooks. He requested a citation for clarification. Antoine acknowledged that premature choices should be avoided ideally, but if these use-cases gain economic weight, deploying a new policy might be costly or time-consuming. He argued for upgrading mechanisms that allow smoother deployment of new policy rules for new use-cases.Greg expressed confusion about modifying Taproot support on the Lightning-side and emphasized the importance of citations to prevent premature encumbrances. Antoine explained that requiring P2TR spends to add an annex and commit to it in the BIP341 signature digest would be a mandatory upgrade for Lightning nodes. Failure to do so would disrupt propagations of `option_taproot` channel transactions.Antoine also mentioned another approach where the maximum size/weight of the witness/transaction is introduced as a TLV record itself. He provided a link to a GitHub branch that implements this approach along with the "only allow tlv record 0" using the TLV format from BIP #1381.The discussion continued with Joost suggesting a restrictive policy that enables annex-vaults and aligns with previous work. The proposed policy includes an opt-in annex for every input, the use of TLV format for future extensibility, only allowing unstructured data (tlv record 0) for future extensibility, and limiting the maximum size of the value to 256 bytes to protect opt-in users. Joost pointed out that the previous limit of 126 bytes in a GitHub pull request is insufficient for certain vault scenarios.Overall, the discussion revolves around the concept of opt-in annexes for protocols in Bitcoin, potential impacts on existing and future protocols, and the need for careful consideration and coordination in deploying new policy rules.</summary>
    <published>2023-06-19T01:14:10+00:00</published>
  </entry>
</feed>
