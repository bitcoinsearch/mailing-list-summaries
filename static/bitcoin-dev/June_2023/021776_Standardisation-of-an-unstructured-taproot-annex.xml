<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-07T02:36:58.872205+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-19 01:14:10+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-07T02:36:58.872245+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021776.html" rel="alternate"/>
    <summary>Antoine Riard raises a question regarding the opt-in mechanism for non-deployed and deployed protocols. He is unsure whether the opt-in applies to protocols like pre-signed vaults or coinjoin/lightning spending P2TR outputs. Antoine suggests that if the opt-in mechanism only applies to non-deployed protocols, scripts spend path in the context of collaborative added inputs could be used to opt-in to the new annex policy. However, Greg Sanders requests a citation for this information, expressing his concern about building protocols on undeveloped upgrade hooks.Antoine acknowledges that ideally, they should not be encumbered by premature choices. However, he mentions that if these use-cases gain economic weight, the coordination cost of deploying a new policy might be prohibitive. In such cases, it may be necessary to have sound and "firewalled" signaling and upgrading mechanisms to deploy new policy rules smoothly. He cites the example of lightning, where they are making major re-work of the mempool to improve lightning operations.Greg Sanders questions Antoine's statement about modifying current Taproot support on the Lightning-side. He asks for a citation to clarify the information provided. Greg emphasizes that building protocols meant for production on undeveloped upgrade hooks is not advisable, and they should not be encumbered by premature choices.In response to Joost Jager's suggestion on implementing an opt-in annex for multi-party protocols, Greg believes it is a reasonable approach that won't unduly impact current users. He suggests considering a maximum transaction size policy "hints" in an annex field to further relax the restrictions in the future.Joost proposes a restrictive policy for enabling annex-vaults that aligns with existing work done. The policy includes an opt-in annex for every input, using the Tlv format defined in BIP1381 for future extensibility, allowing only unstructured data, and limiting the maximum size of the value to 256 bytes to protect opt-in users. However, Joost points out that the current limit of 126 bytes in a previous pull request is insufficient for these types of vaults. He explains that the required signatures and additional vault parameters would exceed this limit.In conclusion, Antoine raises questions about the opt-in mechanism, Greg requests citations for clarification, and Joost suggests a restrictive policy for enabling annex-vaults with certain limitations. The discussion revolves around the considerations and challenges involved in implementing opt-in mechanisms and upgrading protocols.</summary>
    <published>2023-06-19T01:14:10+00:00</published>
  </entry>
</feed>
