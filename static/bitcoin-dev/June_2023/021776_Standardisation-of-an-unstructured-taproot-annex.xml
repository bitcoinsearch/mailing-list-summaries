<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-12T02:36:24.613330+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-19 01:14:10+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-12T02:36:24.613385+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021776.html" rel="alternate"/>
    <summary>In a conversation between Antoine Riard and Greg Sanders on the Bitcoin development mailing list, Antoine raises a question about the opt-in mechanism for non-deployed and deployed protocols. He asks whether opting in to a new annex policy is necessary for currently deployed protocols like coinjoin/lightning spending P2TR outputs, where witness inflation can occur through a counterparty script spend path. He suggests that existing protocols could be opted-in to the new annex policy through script spend paths in collaborative added inputs. Greg responds by expressing confusion and requesting a citation for Antoine's statement. He emphasizes that protocols should not be built on undeveloped upgrade hooks and should not be encumbered by premature choices.Antoine acknowledges that ideally, they should not be encumbered by premature choices. However, if these use-cases gain economic weight, the coordination cost of deploying a new policy might be prohibitive or require long periods of time. He mentions the example of lightning and the major rework of the mempool being done to improve lightning operations. Antoine believes that there should be more emphasis on sound and "firewalled" signaling and upgrading mechanisms that allow for the smooth deployment of new policy rules for new use-cases.The conversation then shifts to a discussion between Antoine and Joost Jager regarding the opt-in annex and its restrictions. Joost proposes a potential policy that would enable annex-vaults and align with existing work. The proposed policy includes an opt-in annex for every input, even if it is empty, to ensure existing multi-party protocols remain unaffected. It also suggests using the TLV format defined in a GitHub pull request (https://github.com/bitcoin/bips/pull/1381) for future extensibility. Additionally, only allowing unstructured data in tlv record 0 is suggested for future extensibility. Finally, Joost suggests limiting the maximum size of the value to 256 bytes to protect opt-in users.However, Joost points out that the current limit of 126 bytes in a previous pull request (https://github.com/bitcoin-inquisition/bitcoin/pull/22) is insufficient for annex-vaults. He explains that if there are two presigned transactions (unvault and emergency), the signatures alone would already take up 128 bytes. Adding the 32-byte ephemeral key and potential additional vault parameters would exceed the current limit. Joost asks if there are any remaining practical objections to making the annex standard under the conditions he listed.Overall, the conversation revolves around the opt-in mechanism for non-deployed and deployed protocols, the need for coordination and smooth deployment of new policy rules, and the proposed policy for the opt-in annex with its restrictions and limitations.</summary>
    <published>2023-06-19T01:14:10+00:00</published>
  </entry>
</feed>
