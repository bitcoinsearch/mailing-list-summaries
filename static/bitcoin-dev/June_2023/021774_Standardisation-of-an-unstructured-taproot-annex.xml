<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-01T02:55:40.801911+00:00</updated>
  <author>
    <name>Greg Sanders 2023-06-18 20:40:53+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-01T02:55:40.801945+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021774.html" rel="alternate"/>
    <summary>Antoine Riard replied to a message from Greg Sanders regarding the opt-in annex feature. He asked for clarification on whether rejecting a transaction without the minimal annex with its 0x50 tag would be required. Antoine mentioned that if this is the case, it would require modifying current Taproot support on the Lightning-side, where all P2TR spends must add an annex and commit to it in the BIP341 signature digest. This mandatory upgrade for Lightning nodes would ensure that failure to add the annex would break propagations of their `option_taproot` channel transactions.Antoine also mentioned another approach to limit the maximum size of the value to 256 bytes as a way to protect opt-in users. He referred to a branch that implements this approach along with the "only allow tlv record 0" using the TLV format from bips #1381. Greg responded to Joost's question about whether it would still be necessary to restrict the annex to a maximum size. Greg stated that he thinks it's worth considering to protect the opt-in users and can also be used for other anti-pinning efforts. He suggested that a more relaxed policy could be implemented in the future by using max tx size policy "hints" in an annex field.Joost proposed a set of policies for annex-vaults that would enable future extensibility and protect opt-in users. These policies include: opt-in annex (every input must commit to an annex even if it is empty), Tlv format as defined in https://github.com/bitcoin/bips/pull/1381, only allowing tlv record 0 for unstructured data, and limiting the maximum size of the value to 256 bytes. Joost mentioned that the current limit of 126 bytes in a pull request isn't sufficient for these types of vaults, as they require more space for signatures and other parameters.Overall, the discussion revolves around the opt-in annex feature and its implementation, as well as the need to protect opt-in users and enable future extensibility.</summary>
    <published>2023-06-18T20:40:53+00:00</published>
  </entry>
</feed>
