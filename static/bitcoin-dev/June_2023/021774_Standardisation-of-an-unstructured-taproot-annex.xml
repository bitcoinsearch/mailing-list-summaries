<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-13T02:44:38.637156+00:00</updated>
  <author>
    <name>Greg Sanders 2023-06-18 20:40:53+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-13T02:44:38.637191+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021774.html" rel="alternate"/>
    <summary>In a discussion on the bitcoin-dev mailing list, Greg Sanders expressed confusion regarding a proposed modification to Taproot support on the Lightning side. He requested a citation to better understand the context and implications of the suggested change. Antoine Riard responded, explaining that the modification would require all P2TR spends to add an annex and commit to it in the BIP341 signature digest. This mandatory upgrade for Lightning nodes could potentially break the propagation of `option_taproot` channel transactions if not implemented. Another topic discussed was the limitation on the maximum size of the value to 256 bytes, which aims to protect opt-in users. Joost Jager suggested an alternative approach where the maximum size/weight of the witness/transaction is introduced as a TLV record. This branch also implements the "only allow tlv record 0" with the TLV format from BIP #1381. Greg Sanders mentioned that the TLV format seemed like a reasonable starting point and highlighted its simplicity from an accounting perspective. He also suggested that the maximum size restriction could be further relaxed in the future by using max tx size policy "hints" in an annex field. In response, Joost Jager outlined a more restrictive policy that would enable annex-vaults while protecting opt-in users. The proposed policy includes opting-in to an annex even if it is empty, using the TLV format as defined in BIP #1381 for future extensibility, allowing only unstructured data in the tlv record 0 for future extensibility, and limiting the maximum size of the value to 256 bytes to protect opt-in users. However, Jager noted that the current limit of 126 bytes in a pull request might not be sufficient for certain types of vaults that require more space for signatures and other parameters. Overall, the discussion revolved around modifying Taproot support, introducing limitations on maximum size, and considering the TLV format for future extensibility.</summary>
    <published>2023-06-18T20:40:53+00:00</published>
  </entry>
</feed>
