<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-06-30T02:31:40.353935+00:00</updated>
  <author>
    <name>Greg Sanders 2023-06-18 20:40:53+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-06-30T02:31:40.353961+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021774.html" rel="alternate"/>
    <summary>Antoine Riard reached out to the bitcoin-dev mailing list to clarify a statement made by Joost Jager regarding the opt-in annex for Bitcoin protocol. Antoine questioned whether rejecting a transaction without the minimal annex with its 0x50 tag would be required. He pointed out that implementing this change would necessitate modifying current Taproot support on the Lightning side, where all P2TR spends must add an annex and commit to it in the BIP341 signature digest. Failure to upgrade Lightning nodes accordingly would disrupt the propagation of their `option_taproot` channel transactions. In addition, Antoine mentioned an alternative approach where the maximum size/weight of the witness/transaction is introduced as a TLV record itself.Greg Sanders responded to Joost's suggestion, stating that he hadn't given much thought to the specific TLV format but believed it could be a reasonable starting point. He noted that it wouldn't unduly impact current users and would be simple from an accounting perspective. Greg also mentioned the possibility of relaxing the TLV format in the future by using max tx size policy "hints" in an annex field.Joost Jager proposed a set of policies for the opt-in annex that would enable annex-vaults while ensuring compatibility with existing multi-party protocols. These policies included requiring every input to commit to an annex (even if empty), implementing the TLV format defined in BIP #1381 for future extensibility, allowing only unstructured data in tlv record 0 for future extensibility, and limiting the maximum size of the value to 256 bytes to protect opt-in users. However, Joost noted that the current limit of 126 bytes proposed in a pull request was insufficient for certain use cases involving vaults with presigned transactions and additional parameters.The discussion highlighted the need to further consider the opt-in annex and its restrictions to ensure the smooth implementation of Bitcoin protocol upgrades while protecting users.</summary>
    <published>2023-06-18T20:40:53+00:00</published>
  </entry>
</feed>
