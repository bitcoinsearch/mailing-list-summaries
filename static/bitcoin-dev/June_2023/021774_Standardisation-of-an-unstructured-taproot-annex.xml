<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-06-29T02:33:19.145179+00:00</updated>
  <author>
    <name>Greg Sanders 2023-06-18 20:40:53+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-06-29T02:33:19.145207+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021774.html" rel="alternate"/>
    <summary>Antoine Riard proposes the inclusion of an opt-in annex feature in Bitcoin transactions. This would require every input to commit to an annex, even if it is empty. However, Greg Sanders expresses confusion about the necessity of this feature and requests a citation for clarification.Antoine further explains that implementing the opt-in annex feature would require modifications to the current Taproot support on the Lightning-side. Specifically, all Pay-to-Taproot (P2TR) spends must add an annex and commit to it in the BIP341 signature digest. This mandatory upgrade for Lightning nodes would ensure the proper propagation of 'option_taproot' channel transactions.Another aspect discussed is the limitation of the maximum size of the value to 256 bytes. This restriction aims to protect opt-in users. However, an alternative approach is proposed, which involves introducing the maximum size/weight of the witness/transaction as a TLV record itself. This approach is outlined in a GitHub branch that also implements the "only allow tlv record 0" with the TLV format from BIP #1381.Joost Jager contributes to the discussion by suggesting a set of policies that would enable annex-vaults while remaining in line with existing work. These policies include the opt-in annex requirement, the use of the TLV format, allowing only unstructured data in tlv record 0, and limiting the maximum size of the value to 256 bytes. However, Joost points out that the current limit of 126 bytes proposed in a GitHub pull request is insufficient for vaults involving multiple presigned transactions.In summary, there are ongoing discussions regarding the implementation of an opt-in annex feature in Bitcoin transactions. The proposal includes requiring inputs to commit to an annex, limiting the maximum size of the value, and using the TLV format. However, further clarification and considerations are needed to address potential issues and practical objections.</summary>
    <published>2023-06-18T20:40:53+00:00</published>
  </entry>
</feed>
