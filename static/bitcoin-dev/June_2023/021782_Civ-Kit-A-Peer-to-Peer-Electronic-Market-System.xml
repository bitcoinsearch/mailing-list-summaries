<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Civ Kit: A Peer-to-Peer Electronic Market System</title>
  <updated>2023-07-08T02:32:03.308232+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-30 03:46:32+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Civ Kit: A Peer-to-Peer Electronic Market System</title>
    <updated>2023-07-08T02:32:03.308263+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021782.html" rel="alternate"/>
    <summary>In a recent discussion about the CivKit architecture for a peer-to-peer marketplace, the concept of front-running was brought up. Front-running refers to entering into a trade with advance knowledge of a block transaction that will influence the price of the underlying security. This could occur in Bitcoin/CivKit when a bulletin board discovers a batch of market offers and forwards a payment across a Lightning network before publishing the offer on its board.The discussion also focused on the roles of different participants in the marketplace. Mary the Maker publishes a limit order to buy a derivative, and Bob the bulletin board operator has the option to execute against Mary's order. If Bob decides not to execute, he relays the order to Terry the Taker (and other subscribers to Bob's market), who then has the option to execute a trade against Mary's limit order. If Terry also decides not to execute, Mary's order sits on the bulletin board.From Mary's perspective, she is happy because her order got executed at the price she specified. However, Terry is the one who loses out in this model. The discussion suggests that this model ends up looking more like a brokerage rather than an exchange market structure. It is proposed that Terry should open up his own brokerage (bulletin board) and compete on quoting prices with Bob. By comparing metrics like execution quality, Bob and Terry can provide better prices and draw more market activity.The discussion also mentions that front-running can actually be a good problem to have, as it indicates active participants and liquidity in the market. The focus should be on finding what products people are interested in trading and providing them with a good user experience. Other security paradigms to mitigate front-running are discussed, such as duplicating the announcement of offers to multiple boards and monitoring latency anomalies, or running the bulletin boards as a federation with consensus rules.Overall, the CivKit architecture aims to provide a flexible framework for a peer-to-peer marketplace, where front-running resistance parameters can be adapted based on the types of trades and market participants' tolerance. The design combines Nostr architecture with Lightning onion routing infrastructure to ensure confidentiality, and reputation frameworks and incentive structures are proposed to incentivize efficient service operators.The paper discussed in the context delves into the architecture of a system. The authors express gratitude to the peer reviewers for their contributions and mention their plans to gradually release code and modules, building on top of the Lightning Dev Kit and Nostr libraries. They aim to adhere to the established Bitcoin open-source and decentralized standards set by Bitcoin Core. The authors also express their enthusiasm for collaborating with the community to standardize libraries and ensure interoperability between clients in the long run.Feedback on the project is encouraged and welcomed. The message concludes with the names of the authors - Nick, Ray, and Antoine. The context also provides several links for further reference. [0] leads to a mailing list post that contains more details about the paper. [1] directs to the W3C recommendation for DID (Decentralized Identifier) core. [2] leads to the Privacypass website. Lastly, [3] provides a link to the GitHub repository where the mentioned paper can be found, while [4] leads to the Lightning Dev Kit website.</summary>
    <published>2023-06-30T03:46:32+00:00</published>
  </entry>
</feed>
