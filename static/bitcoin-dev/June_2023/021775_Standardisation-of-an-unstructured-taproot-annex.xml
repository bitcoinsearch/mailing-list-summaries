<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-13T02:44:12.373905+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-18 20:32:12+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-13T02:44:12.373941+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021775.html" rel="alternate"/>
    <summary>There is a discussion regarding the implementation of an opt-in annex and the limitation of the maximum size of the value in Bitcoin transactions. The opt-in annex would require every input to commit to an annex, even if it is empty. This change aims to ensure that existing multi-party protocols remain unaffected. However, there are concerns about how this would impact current Taproot support on the Lightning-side, as all Pay-to-Taproot spends must add an annex and commit to it in the BIP341 signature digest. Failure to do so would break propagations of `option_taproot` channel transactions.Another approach suggested is to introduce the maximum size/weight of the witness/transaction as a TLV (Type-Length-Value) record itself. This proposal can be found in a GitHub branch that also implements the "only allow tlv record 0" with the TLV format from BIP #1381. This approach is seen as a reasonable starting point as it does not unduly impact current users and is simple from an accounting perspective. It also allows for future relaxations by using maximum transaction size policy "hints" in an annex field.In response to this suggestion, Joost Jager proposes a more restrictive policy that would enable annex-vaults while protecting opt-in users. The proposed policy includes the opt-in annex requirement, the use of the TLV format defined in BIP #1381, allowing only unstructured data in tlv record 0, and limiting the maximum size of the value to 256 bytes. However, it is noted that the current limit of 126 bytes in a GitHub pull request is insufficient for these types of vaults. Additional bytes are needed for storing multiple presigned transactions and other vault parameters.The discussion is ongoing, with participants considering the practical objections and potential impact of implementing the opt-in annex and setting a maximum size limit for values in Bitcoin transactions.Source: [bitcoin-dev mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)</summary>
    <published>2023-06-18T20:32:12+00:00</published>
  </entry>
</feed>
