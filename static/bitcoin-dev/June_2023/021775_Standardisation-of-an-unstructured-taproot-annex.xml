<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-06-30T02:31:04.759838+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-18 20:32:12+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-06-30T02:31:04.759870+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021775.html" rel="alternate"/>
    <summary>The discussion revolves around two proposed changes to the Bitcoin protocol. The first change involves requiring every input to commit to an annex, even if it is empty. This modification would ensure that existing multi-party protocols remain unaffected. However, it would require a mandatory upgrade for Lightning nodes, as failure to add an annex would break propagations of their `option_taproot` channel transactions.The second proposed change suggests limiting the maximum size/weight of the witness/transaction to 256 bytes. This limitation aims to protect opt-in users. An alternative approach is introduced, where the maximum size/weight of the witness/transaction is implemented as a TLV (Type-Length-Value) record itself. This branch also includes the implementation of "only allow tlv record 0" with the TLV format from BIP #1381.Joost Jager presents his thoughts on the matter, suggesting a set of policies that enable annex-vaults while remaining in line with previous work. These policies include the opt-in annex requirement, the use of TLV format for future extensibility, allowing only unstructured data in tlv record 0 for future extensibility, and limiting the maximum size of the value to 256 bytes to protect opt-in users. However, he notes that the current limit of 126 bytes proposed in another branch would not be sufficient for these types of vaults.The discussion continues with Greg Sanders expressing support for considering a maximum annex size to protect opt-in users and potentially address anti-pinning efforts. He suggests using max transaction size policy "hints" in an annex field to relax the restrictions in the future.Overall, the discussion highlights the need to balance the introduction of new policies with the protection of opt-in users and the compatibility with existing protocols.</summary>
    <published>2023-06-18T20:32:12+00:00</published>
  </entry>
</feed>
