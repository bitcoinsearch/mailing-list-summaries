<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-08T02:34:28.852903+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-18 20:32:12+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-08T02:34:28.852932+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021775.html" rel="alternate"/>
    <summary>The discussion revolves around the implementation of an opt-in annex and the limit on the size of the value in Bitcoin transactions. The opt-in annex requires every input to commit to an annex, even if it is empty, to ensure that existing multi-party protocols remain unaffected. This would require modifying current Taproot support on the Lightning-side, where all P2TR spends must add an annex and commit to it in the BIP341 signature digest. Failure to do so would break propagations of `option_taproot` channel transactions.Another approach discussed is introducing the maximum size/weight of the witness/transaction as a TLV (Type-Length-Value) record itself. This approach is implemented in a branch that also implements allowing only TLV record 0 with the TLV format from BIPs #1381. This approach aims to protect opt-in users and can be further relaxed in the future using max tx size policy "hints" in an annex field.There is a suggestion to restrict the size of the annex to 256 bytes to protect opt-in users. However, it is noted that the current limit of 126 bytes is not sufficient for certain types of vaults. For example, if there are two presigned transactions (unvault and emergency), those signatures would already take up 2*64=128 bytes. Additionally, 32 bytes need to be stored for the ephemeral key itself, as it cannot be reconstructed from the Schnorr signature. The remaining bytes could be used for a third presigned transaction and/or additional vault parameters.The discussion participants are considering the most restrictive policy that would still enable annex-vaults and is in line with previous work. The proposed policies include the opt-in annex, TLV format, allowing only TLV record 0, and limiting the maximum size of the value to 256 bytes. The goal is to ensure the security and functionality of Bitcoin transactions while protecting opt-in users. The practical objections to making the annex standard under these conditions are being considered.Overall, the discussion is focused on finding ways to enhance Bitcoin transactions through the implementation of an opt-in annex and setting limits on the size of the value in order to protect users and maintain compatibility with existing protocols.</summary>
    <published>2023-06-18T20:32:12+00:00</published>
  </entry>
</feed>
