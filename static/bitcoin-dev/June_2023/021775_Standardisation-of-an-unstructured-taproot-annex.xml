<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-09T02:48:48.308777+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-18 20:32:12+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-09T02:48:48.308815+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021775.html" rel="alternate"/>
    <summary>There is a discussion among participants about certain modifications to the Taproot support on the Lightning-side. One proposal suggests that every input must commit to an annex, even if it is empty, in order to ensure that existing multi-party protocols are not affected. This would require a mandatory upgrade for Lightning nodes, as failure to do so would disrupt the propagation of their 'option_taproot' channel transactions.Another approach being considered is to limit the maximum size/weight of the witness/transaction to 256 bytes. This is intended to protect opt-in users. There is a branch on GitHub that implements this approach along with the "only allow tlv record 0" using the TLV format from BIP #1381.Greg Sanders suggests that the TLV format is a reasonable starting point, as it does not have a significant impact on current users and is straightforward from an accounting perspective. He also mentions the possibility of relaxing the restrictions in the future by using max tx size policy "hints" in an annex field.Joost Jager proposes a set of policies that could be implemented to enable annex-vaults while still protecting opt-in users. These policies include the opt-in annex requirement, the use of the TLV format, allowing only unstructured data in tlv record 0, and limiting the maximum size of the value to 256 bytes. However, Joost points out that the current limit of 126 bytes may not be sufficient for vaults that involve multiple presigned transactions.Overall, the discussion revolves around finding a balance between implementing new features and ensuring the compatibility of existing protocols, as well as protecting the interests of opt-in users.</summary>
    <published>2023-06-18T20:32:12+00:00</published>
  </entry>
</feed>
