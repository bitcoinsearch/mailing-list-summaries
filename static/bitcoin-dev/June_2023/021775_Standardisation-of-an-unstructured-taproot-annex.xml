<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Standardisation of an unstructured taproot annex</title>
  <updated>2023-07-02T02:50:36.353499+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-18 20:32:12+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Standardisation of an unstructured taproot annex</title>
    <updated>2023-07-02T02:50:36.353533+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021775.html" rel="alternate"/>
    <summary>The discussion is focused on making modifications to the Taproot support on the Lightning-side in order to require every input to commit to an annex, even if it is empty. This would be a mandatory upgrade for Lightning nodes to ensure the propagation of their `option_taproot` channel transactions. Additionally, there is a proposal to limit the maximum size/weight of the witness/transaction to 256 bytes in order to protect opt-in users.There is another approach being considered, which involves introducing the maximum size/weight of the witness/transaction as a TLV (Type-Length-Value) record itself. This proposed approach can be found in the following link: https://github.com/bitcoin-inquisition/bitcoin/pull/28. This branch also implements the "only allow tlv record 0" with the TLV format from BIPs #1381.Greg Sanders suggests that the TLV format is a reasonable starting point as it wouldn't unduly impact current users and is simple from an accounting perspective. He also mentions that the maximum size policy "hints" in an annex field could be used to further relax the restrictions in the future.Joost Jager suggests a set of policies that would enable annex-vaults while ensuring compatibility with existing multi-party protocols. These policies include the opt-in annex requirement, the use of the TLV format, only allowing unstructured data in tlv record 0, and limiting the maximum size of the value to 256 bytes. However, he points out that the current limit of 126 bytes proposed in another pull request isn't sufficient for vaults that involve multiple presigned transactions. Joost seeks feedback on whether there are any practical objections to making the annex standard under these conditions.Overall, the discussion revolves around making changes to the Taproot support on the Lightning-side, specifically requiring every input to have an annex and limiting the size of the witness/transaction. The proposed approach involves the use of TLV records, and there is a suggestion to relax the restrictions in the future using the annex field.</summary>
    <published>2023-06-18T20:32:12+00:00</published>
  </entry>
</feed>
