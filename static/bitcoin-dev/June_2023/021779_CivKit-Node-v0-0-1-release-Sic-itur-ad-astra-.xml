<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>CivKit Node v0.0.1 release - "Sic itur ad astra"</title>
  <updated>2023-07-11T02:32:36.265503+00:00</updated>
  <author>
    <name>Antoine Riard 2023-06-21 08:14:05+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>CivKit Node v0.0.1 release - "Sic itur ad astra"</title>
    <updated>2023-07-11T02:32:36.265536+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021779.html" rel="alternate"/>
    <summary>The first release of CivKit Node, a basic Nostr relay with additional features for a functional peer-to-peer market board, has been announced by the Bitcoin Devs. This release is written in Rust and is considered to be very raw. Since the publication of the paper in April, several individuals have reached out asking how they can contribute by code or integrate CivKit into their Nostr and Lightning peer-to-peer market clients.The current release is CLI-only and only implements basic NIP 01 support. It is filled with bugs and todos, and has not been extensively tested on various platforms. However, it does function as a local host for many things. There is also a sample Nostr client binary provided for deployment and testing purposes, as well as a utility binary to manage the node with a gRPC interface. The gRPC interface lays the groundwork for building one or more GUI applications on top, which has been a consistent request from the community.An experimental integration with BOLT8 Noise transport has also been included, thanks to LDK. This integration allows users to connect to another CivKit Node as a peer, with the goal of unifying the communication infrastructure between Nostr and Lightning. The aim is to create a single market of peer-to-peer service providers that benefit from network law effects. This includes sharing work between Lightning and Nostr ecosystems in terms of spamming mitigations, crypto engineering, and privacy-preserving monetary credentials.With this release, the focus will now shift towards sound onion routing support and implementing fundamental NIPs such as NIP-09, NIP-16, NIP-33, and others. Additionally, integration with a notary protocol (e.g., Mainstay) is planned. The development of CivKit functionaries services themselves, such as market bulletin boards, rank proof servers, and moderation oracles, will also begin. However, the project aims to listen to user feedback and prioritize features based on relevant feedback collected from the community.It is worth noting that peer-to-peer market features were present in Bitcoin Core around 2010 but were later removed. The removal was considered a good insight as Bitcoin Core has evolved into a complex system, and careful layerization has been one of the key learnings from Internet history. However, censorship-resistant and large-scale peer-to-peer markets are still seen as missing blocks in the Bitcoin protocol stack.The CivKit Node and all related works are released under MIT/Apache licenses, adhering to the best open-source development standards set by Bitcoin Core and the Linux kernel communities. The project welcomes anyone who is passionate and willing to contribute with love. In the future, announcements will be made on a separate communication channel, such as a new mailing list or an experimental platform on top of Nostr groups. Additionally, the project aims to have its cryptographic innovations standardized under BIPs.Overall, this release marks an important step towards growing the Bitcoin and Lightning internal economies by an order of magnitude or two with the CivKit Node.</summary>
    <published>2023-06-21T08:14:05+00:00</published>
  </entry>
</feed>
