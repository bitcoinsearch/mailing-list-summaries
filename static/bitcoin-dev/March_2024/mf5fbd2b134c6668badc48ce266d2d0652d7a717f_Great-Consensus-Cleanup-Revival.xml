<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Great Consensus Cleanup Revival</title>
  <updated>2024-03-28T02:09:34.326311+00:00</updated>
  <author>
    <name>Antoine Riard 2024-03-27 18:57:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Great Consensus Cleanup Revival</title>
    <updated>2024-03-28T02:09:34.326336+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/gnM89sIQ7MhDgI62JciQEGy63DassEv7YZAMhj0IEuIo0EdnafykF6RH4OqjTTHIHsIoZvC2MnTUzJI7EfET4o-UQoD-XAQRDcct994VarE=@protonmail.com/T/#mf5fbd2b134c6668badc48ce266d2d0652d7a717f" rel="alternate"/>
    <summary>The discussion raises concerns about the potential dangers associated with increasing block frequency on a network, particularly through the use of the timewarp technique. This method could lead to significant harm to the network's stability and create detrimental incentives for both users and miners. While users might benefit from lower fees due to increased block space in the short term, this comes at a cost to the long-term health of the network. Similarly, miners might be tempted by the prospect of higher block rewards, which could disadvantage future miners. Furthermore, the advantage seems to tilt towards larger miners who would benefit more from an increased block frequency.

The conversation also touches upon the "forward block" paper, which is mentioned as a useful resource for understanding more about the implications of timewarp. However, the focus shifts to a specific technical aspect of making 64 bytes transactions invalid for simpler analysis, citing a use case involving a 60-byte example transaction. The relevant information can be found in a mailing list issue ([view issue here](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-May/017883.html)), highlighting the narrow scope of awareness around this issue.

Lastly, there is some technical deliberation over the implementation specifics within the Bitcoin development environment, particularly regarding the `MIN_STANDARD_TX_NON_WITNESS_SIZE` check within btcd's `maybeAcceptTransaction()` function and the use of `nLockTime` in coinbase transactions. The discussion suggests considering `nLockTime` as a viable option due to its assumed wtxid of 0x00, although it calls for further clarification on what is meant by "monotonic counter in the past". This segment underscores the complexity and nuances involved in blockchain development and the continuous need for clarity and consensus among developers.</summary>
    <published>2024-03-27T18:57:00+00:00</published>
  </entry>
</feed>
