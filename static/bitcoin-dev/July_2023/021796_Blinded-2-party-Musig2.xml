<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Blinded 2-party Musig2</title>
  <updated>2023-07-25T02:22:05.720432+00:00</updated>
  <author>
    <name>Erik Aronesty 2023-07-24 14:40:10+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Blinded 2-party Musig2</title>
    <updated>2023-07-25T02:22:05.720465+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-July/021796.html" rel="alternate"/>
    <summary>In an email thread on the bitcoin-dev mailing list, Jonas Nick raises concerns about the proposed blind musig scheme. He states that blind musig is still an open research problem and questions the effectiveness of the proposed scheme in preventing the client from obtaining additional Schnorr signatures. He suggests that a variant of the attack used to make MuSig1 insecure could be applied if certain conditions are met.Jonas outlines the steps a malicious client could take to exploit the vulnerability in the proposed scheme. The client would obtain K R-values from the server and calculate new values based on them. Using Wagner's algorithm, the client would choose additional R-values such that the sum of the commitments equals the commitment for the aggregate of the R-values obtained from the server. The client would then send the commitments to the server to obtain corresponding signatures.To address the issue, Jonas proposes an alternative scheme. In this scheme, the client sends a commitment to the public key X2, nonce R2, and message m to the server. The server replies with a nonce R1. The client then proves in zero knowledge that the commitment is derived correctly using SHA256. The server replies with a signature s1.Jonas acknowledges that this alternative scheme is based on quick intuition and is unsure if it would work effectively. However, he believes it may be worth exploring further.The email concludes with the standard footer of the bitcoin-dev mailing list, providing information on how to subscribe to the mailing list and access its archives. No further context or information is provided beyond the email thread.</summary>
    <published>2023-07-24T14:40:10+00:00</published>
  </entry>
</feed>
