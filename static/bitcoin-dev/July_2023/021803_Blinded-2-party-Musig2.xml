<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Blinded 2-party Musig2</title>
  <updated>2023-07-26T02:12:20.580629+00:00</updated>
  <author>
    <name>Erik Aronesty 2023-07-25 14:12:31+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Blinded 2-party Musig2</title>
    <updated>2023-07-26T02:12:20.580690+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-July/021803.html" rel="alternate"/>
    <summary>The discussion on the bitcoin-dev mailing list revolves around the security of blind MuSig, with a particular focus on the attack known as Wagner's attack. The participants are exploring ways to prevent this attack and ensure the integrity of the signing process. One suggestion is to include a third round of MuSig1, involving commitments to the nonce R. It is emphasized that the initial commitments to R are crucial in this version of MuSig1.In response to a query regarding the use of challenge c to construct s1, it is pointed out that this approach would not work for blinding the final key. However, it is suggested that using c1*a1 instead of c1*a1*x1 as the challenge for signing might address the issue. This is because the blockchain allows calculation of 'c' and the aggregate key a1X1 + a2X2, making it difficult to find a1 and correlate the transaction with just the quantity 'c1*a1' seen by the server. It is acknowledged that this is just the beginning, and a blind signing scheme requires additional guarantees, such as a proof that the signing request is well-formed.There is a discussion about the term "posk," which is likely meant to refer to "proof of secret key." It is speculated that there may be some confusion with the term "KOSK" used in other literature. The relevance of these concepts to the current scenario is not yet clear, but they could potentially serve as building blocks for the proposed constructions.One participant expresses skepticism about the effectiveness of the proposed scheme, noting that blind MuSig is still an open research problem. They raise concerns about the security of MuSig1 if the nonce commitment round is skipped or if the message is not determined before sending the nonce. They outline a variant of the attack that can make MuSig1 insecure and propose a different scheme that might work in this case, involving the client sending a commitment to the public key X2 and proving in zero knowledge that c = SHA256(X1 + X2, R1 + R2, m). However, they acknowledge that this is just an initial intuition and further exploration is needed.Overall, the discussion highlights the challenges and considerations involved in implementing a secure blind signing scheme, with participants sharing insights and exploring potential solutions.</summary>
    <published>2023-07-25T14:12:31+00:00</published>
  </entry>
</feed>
