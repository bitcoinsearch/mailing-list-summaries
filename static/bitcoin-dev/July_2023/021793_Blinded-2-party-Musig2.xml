<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Blinded 2-party Musig2</title>
  <updated>2023-08-11T15:37:16.894287+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-07-24 10:50:13+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Blinded 2-party Musig2</title>
    <updated>2023-08-11T15:37:16.894287+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-July/021793.html" rel="alternate"/>
    <summary>Tom, MuSig2 requires multiple `R` points from signatories, unlike MuSig1. These points are aggregated using the MuSig() public key compose function. This prevents party 2 from creating an `R` that could allow certain attacks. MuSig1 requires 3 round trips, while MuSig2 requires at least 2 `R` nonces per signatory. Your scheme has only one `R` per party, making it vulnerable to that attack.Regards,ZmnSCPxj</summary>
    <published>2023-07-24T10:50:13+00:00</published>
  </entry>
</feed>
