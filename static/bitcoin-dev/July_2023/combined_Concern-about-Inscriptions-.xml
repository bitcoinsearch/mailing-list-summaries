<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Concern about "Inscriptions".</title>
  <updated>2023-07-29T09:24:34.401379+00:00</updated>
  <author>
    <name>leohaf at orangepill.ovh  + 2023-07-25 14:11:49+00:00</name>
  </author>
  <author>
    <name>vjudeu at gazeta.pl  + 2023-07-26 05:30:32+00:00</name>
  </author>
  <author>
    <name>leohaf at orangepill.ovh  + 2023-07-26 09:46:51+00:00</name>
  </author>
  <author>
    <name>vjudeu at gazeta.pl  + 2023-07-27 05:10:32+00:00</name>
  </author>
  <link href="bitcoin-dev/July_2023/021805_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021808_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021809_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021819_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Concern about "Inscriptions".</title>
    <updated>2023-07-29T09:24:34.402383+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-July/021805.html" rel="alternate"/>
    <summary>The concern raised by the author is regarding a significant bug in recent versions of the Bitcoin software. This bug pertains to "inscriptions" developed by @rodarmor, which have rapidly grown to a size of 11.8GB on the blockchain within a few months. The issue is causing problems with the UTXO set and resulting in a daily growth of approximately 25MB. The author views these inscriptions as spam due to their recurring nature and negative impact on the size of the UTXO set and the blockchain.Currently, there are no available options to reject inscriptions in the mempool except for a patch created by Luke Dashjr, which is impractical for most users as it requires compiling Bitcoin Core. The author suggests that having options to reject inscriptions in the mempool would allow users to customize their approach and mitigate the negative impact on the network.Ethical questions also arise from the situation, as inscriptions are primarily used to sell NFTs or Tokens, concepts that have been consistently rejected by the Bitcoin community. The author requests Bitcoin developers to seriously consider implementing a feature to reject inscriptions in the mempool to protect the integrity of the network.The issue of inscriptions has not been addressed seriously because there are currently no viable options available. The default response to compromising the ECDSA algorithm would be to do nothing and wait for a backward-compatible solution. There are concerns about potential splits in the network if old coins were burned or redistributed. The patch by Luke Dashjr only addresses a specific issue related to download time and UTXO set size, while other changes are still incomplete.The absence of options to reject inscriptions is due to the complexity of the problem. Blocking one type would lead to the creation of different inscriptions, and they can exist even on chains without Taproot or Segwit. Eliminating them would divert attention from more pressing issues. Inscriptions are primarily used for selling NFTs or Tokens, concepts that have been rejected by the Bitcoin community. However, the community has also rejected concepts like sidechains, which still exist in a more centralized form.The spam attack caused by inscriptions is a significant issue. Unlike other spam methods, inscriptions can embed themselves in the witness and reduce fees. Standardization rules limit op_return to 80 bytes, but inscriptions remain a problem. Taking action against inscriptions could prevent more serious issues, but not taking action may encourage further spam attacks.A proposed solution involves adding a standardization option without implementing a soft fork, allowing the community to decide whether to activate it. However, adding settings may not be effective as most people use default configurations. Existing solutions do not address all cases and can be bypassed by spammers. Addressing the inscription issue requires tackling larger problems of download time and UTXO size.Some argue against blocking inscriptions, viewing it as censorship that could lead to blocking regular transactions based on other criteria. Various types of data have been uploaded onto the blockchain using different methods. Blocking inscriptions without addressing underlying problems may not be effective and could lead to alternative methods of pushing data onto the blockchain. An option for standardization is suggested, but it may not be widely adopted.The lack of available options to reject inscriptions is attributed to the belief that it would result in an endless chase with new methods of spamming replacing blocked inscriptions. Inscriptions are primarily used for selling NFTs or Tokens, concepts rejected by the Bitcoin community. However, certain concepts like sidechains and soft forks have persisted despite initial rejection. Valid Bitcoin transactions can be considered invalid Ordinals transactions due to the lack of enforcement by miners and nodes.In conclusion, the issue of inscriptions as spam on the Bitcoin network is complex. Different perspectives exist regarding blocking inscriptions or addressing underlying problems. It is intertwined with challenges related to download time and UTXO size. The author's request is for Bitcoin developers to seriously consider implementing a feature to reject inscriptions in the mempool to protect the network's integrity.</summary>
    <published>2023-07-25T14:11:49+00:00</published>
  </entry>
</feed>
