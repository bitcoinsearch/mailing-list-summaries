<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [BIP 15] Aliases</title>
  <updated>2023-05-19T01:03:02.883982+00:00</updated>
  <author>
    <name>Pieter Wuille 2011-12-19 01:14:20</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-12-16 16:17:00</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-12-16 08:35:38</name>
  </author>
  <author>
    <name>Matt Corallo 2011-12-16 02:48:17</name>
  </author>
  <author>
    <name>Matt Corallo 2011-12-12 23:52:45</name>
  </author>
  <link href="bitcoin-dev/Dec_2011/000935_-BIP-15-Aliases.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000879_-BIP-15-Aliases.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000875_-BIP-15-Aliases.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000872_-BIP-15-Aliases.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000819_-BIP-15-Aliases.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [BIP 15] Aliases</title>
    <updated>2023-05-19T01:03:02.883982+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-December/000935.html" rel="alternate"/>
    <summary>The discussion is centered around finding solutions to address the vulnerability of DNS-based alias systems to spoofing and authentication issues. One proposed solution involves embedding a bitcoin address in the identification string itself and requiring SSL communication authenticated using the respective key. This embedded bitcoin address could be hidden from the user and retrieved when first connecting, stored together with the URI in an address book, similar to SSH.Another proposal suggests moving away from base58 strings as addresses and instead using an IP transactions-like system with DNS resolution, giving nice identifiers and moving the responsibility of getting the transaction accepted by the network from the sender to the receiver. The communication would be authenticated using a separate bitcoin address-based authentication on top of the SSL certificate. Additionally, an HTTPS web service can provide the bitcoin address to be used in the transaction to a client that queries a URL, making the identifier double as a clickable URL. However, relying on DNSSEC is currently difficult, so alternatives are SSL PKI or bitcoin address-based authentication.Another proposal involves using URLs as address identifiers, optionally suffixed with a bitcoin address for authentication. This means the "address" would be either "sipa.be/pw.btc" or "sipa.be/pw.btc$14TYdpodQQDKVgvUUcpaMzjJwhQ4KYsipa", and when a transaction is constructed, it is POSTed back to that URL. If there is agreement on a reasonable hardcoded mapping, pw at sipa.be could just be a shorthand for either of these.An additional proposal suggests reusing the Bitcoin code and protocol for transactions to IP addresses. However, this method is overcomplicated compared to the DNS or HTTPS methods. The public key for signing "reply" messages can be obtained from TXT records. This will be safe with DNSSEC and Namecoin. With plain DNS, Bitcoin could take an SSH-like approach and ask the user to verify the public key the first time it is used, remembering it later. Firstbits are not acceptable because they do not scale well and fill the blockchain with unnecessary data.One suggestion is to use Namecoin, which is a decentralized solution using a chain specifically crafted for such a purpose. However, it still does not scale well, and if it becomes popular, virtually every implementation would have to rely on trusted servers, making HTTPS/DNSSEC-based implementation a better option. In conclusion, various proposals have been discussed to address the vulnerability of DNS-based alias systems to spoofing and authentication issues, each with its own advantages and disadvantages.</summary>
    <published>2011-12-19T01:14:20+00:00</published>
  </entry>
</feed>
