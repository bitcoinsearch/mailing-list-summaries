<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - [BIP 15] Aliases</title>
  <updated>2023-05-18T23:27:45.226157+00:00</updated>
  <author>
    <name>Pieter Wuille 2011-12-19 01:14:20</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-12-16 16:17:00</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-12-16 08:35:38</name>
  </author>
  <author>
    <name>Matt Corallo 2011-12-16 02:48:17</name>
  </author>
  <author>
    <name>Matt Corallo 2011-12-12 23:52:45</name>
  </author>
  <link href="bitcoin-dev/Dec_2011/000935_-BIP-15-Aliases.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000879_-BIP-15-Aliases.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000875_-BIP-15-Aliases.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000872_-BIP-15-Aliases.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000819_-BIP-15-Aliases.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - [BIP 15] Aliases</title>
    <updated>2023-05-18T23:27:45.226157+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-December/000935.html" rel="alternate"/>
    <summary>The vulnerability of DNS-based alias systems to spoofing is discussed in this context. To address this issue, the proposal suggests embedding a bitcoin address in the identification string itself and requiring SSL communication authenticated using the respective key to secure it. The embedded bitcoin address could be hidden from the user, retrieved when first connecting, and stored together with the URI in an address book. Additionally, client software can cache the address corresponding to a particular server or URL.The current use of base58 strings as addresses is not flexible nor human-friendly. In response, a proposal was made to use an IP transactions-like system with DNS resolution that provides nice identifiers and moves the responsibility of getting the transaction accepted by the network from the sender to the receiver. The authentication problem present in the original IP transactions system can be mitigated by trusting the existing SSL public-key infrastructure or adding bitcoin address-based authentication on top. Alternatively, an HTTPS web service providing the bitcoin address to be used in the transaction to a client that queries a URL can be used. In terms of identifiers for transactions, clickable URLs that hide address information are suggested. These would be better for business transactions than the email system's identifiers, which are useful for user-to-user payments. The proposal suggests using URLs as address identifiers with optional bitcoin addresses for authentication. Initiating a payment would result in a GET of https://sipa.be/pw.btc, and when the transaction is constructed, it is POSTed back to that URL. Bitcoin already has code and a protocol for transactions to IP addresses, which could be reused for dynamic address lookup. The proposal suggests extending the protocol so that "reply" messages can be signed by a fixed public key and enabling DNS lookups for IP transactions. However, this method seems overcomplicated, requiring the implementation of a full DNS system that may not be secure without DNSSEC. Using Namecoin may be easier but still suffers from scalability issues. Firstbits is not acceptable due to its lack of scalability and negative impact on Bitcoin nodes. The proposal suggests using a chain specifically crafted for such a purpose, but this still doesn't scale well and would require relying on trusted servers, making an HTTPS/DNSSEC-based implementation preferable. Overall, the context discusses various proposals to address the vulnerability of DNS-based alias systems to spoofing and improve the identification of bitcoin addresses for transactions.</summary>
    <published>2011-12-19T01:14:20+00:00</published>
  </entry>
</feed>
