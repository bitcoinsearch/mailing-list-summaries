<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Fwd: [BIP 15] Aliases</title>
  <updated>2023-05-19T01:03:22.948608+00:00</updated>
  <author>
    <name>Gregory Maxwell 2011-12-16 17:48:33</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-12-16 08:46:33</name>
  </author>
  <link href="bitcoin-dev/Dec_2011/000887_Fwd-BIP-15-Aliases.xml" rel="alternate"/>
  <link href="bitcoin-dev/Dec_2011/000876_Fwd-BIP-15-Aliases.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Fwd: [BIP 15] Aliases</title>
    <updated>2023-05-19T01:03:22.948608+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-December/000887.html" rel="alternate"/>
    <summary>Namecoin is a peer-to-peer generic name/value datastore system that is not limited to .bit usage. The system is designed to map things to names in a fully decentralized way, making it the perfect starting point to map names to other things such as a public bitcoin address or a URL. However, using other systems like DNS and HTTP(S) as the first entry point will not provide you with all the advantages of Namecoin. Constructing a zero-trust (or nearly zero trust) Namecoin resolver without having a copy of the ever-growing complete Namecoin block chain can be challenging. The Bitcoin lite node mechanism will not work because a peer could return stale records or no-result. There are some EC crypto tricks to generate a temporary address that requires interaction but not necessarily directly with the entity hosting the wallet. The wallet-hosting entity has a private key x, with public key X. The address-generating entity knows X, and generates a fresh private key y for each transaction.</summary>
    <published>2011-12-16T17:48:33+00:00</published>
  </entry>
</feed>
