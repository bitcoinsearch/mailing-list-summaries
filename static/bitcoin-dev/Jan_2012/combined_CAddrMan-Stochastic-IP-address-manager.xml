<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - CAddrMan: Stochastic IP address manager</title>
  <updated>2023-05-18T23:30:35.920029+00:00</updated>
  <author>
    <name>Pieter Wuille 2012-01-30 02:31:02</name>
  </author>
  <author>
    <name>Gregory Maxwell 2012-01-31 07:17:07</name>
  </author>
  <author>
    <name>Gregory Maxwell 2012-01-31 02:57:31</name>
  </author>
  <link href="bitcoin-dev/Jan_2012/001100_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001118_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001115_CAddrMan-Stochastic-IP-address-manager.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - CAddrMan: Stochastic IP address manager</title>
    <updated>2023-05-18T23:30:35.920029+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001100.html" rel="alternate"/>
    <summary>The Satoshi bitcoin client is moving towards IPv6 support, making address management more challenging. Currently, all addresses ever seen are kept on disk and in-memory and sorted based on the last-seen time. To avoid multi-megabyte addr.dat files, a specialized address manager has been developed to keep only a limited number of addresses and index them in-memory. This new approach leads to a weakness, as attackers may try to poison the entire address cache with addresses they control to perform a Sybil attack, especially in the context of IPv6, where many more possible addresses exist.To protect against this type of attack, two tables have been created: one that keeps addresses with which actual connections have been made, and another that maintains untried/new addresses, both separated into several limited-size buckets. Each table provides a level of protection against sybil attacks through different methods. The implementation is available in pull request 787, but there is a need for testing, room for improvements, and feedback from users.Regarding IRC bootstrapping mechanism, Gavin Andresen suggests removing it or leaving it deactivated as a fallback for users to turn on. However, IRC bootstrapping mechanism is still important as we need more mechanisms than just DNS and hardcoded seed nodes. It gives confidence to bitcoin users because there is less FUD about ISPs blocking the service. Removing it is a good idea if users can add nodes/addr.txt as an alternative. If so, it's important to fix IRC by joining multiple channels and learning about nodes when they join. Nodes recently seen on IRC are highly promoted in the peer selection. An updated irc.cpp file is available, but it needs further testing before submission.</summary>
    <published>2012-01-30T02:31:02+00:00</published>
  </entry>
</feed>
