<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Quote on BIP 16</title>
  <updated>2023-05-18T22:57:27.796229+00:00</updated>
  <author>
    <name>Gregory Maxwell 2012-01-29 05:19:44</name>
  </author>
  <author>
    <name>Gregory Maxwell 2012-01-29 08:14:06</name>
  </author>
  <link href="bitcoin-dev/Jan_2012/001087_Quote-on-BIP-16.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001089_Quote-on-BIP-16.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Quote on BIP 16</title>
    <updated>2023-05-18T22:57:27.796229+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001087.html" rel="alternate"/>
    <summary>In a conversation about bitcoin address length, Amir Taaki explains that pay to script hash (P2SH) prevents the need for long addresses. Hashes only need to be 128-256 bits in size to have acceptable security, so paying to a hash does not require an address longer than this. Without P2SH, the only way to make personal choices such as asking people to pay to a two-factor protected account or to a multiparty trust that manages the finances of an organization would be to use "pay-to-script" (P2S), which requires an address that encodes a full script specification for the sender to pay to instead of just encoding its hash. As a result, these addresses would be much longer and potentially very long.However, there are several problems with using P2S. Firstly, they are highly vulnerable to invisible substitution. Secondly, the sender is fully responsible for fees related to the enlarged transactions. Thirdly, they create another input vector for non-trivial data which may present an attack surface. Lastly, complicated release rules are left in the transaction outputs, making them unprunable and potentially leaving a large target for someone who wants to make Bitcoin unusable by spamming it with worthless data. Alan Reiner raises concerns about plain multi-sig being abused, but Gregory Maxwell clarifies that multisig addresses and P2S should not be conflated with multisig output scripts in general. The issues raised against P2S do not necessarily apply to multisig output scripts that are not packed up in addresses. However, P2SH is still better for negotiated escrow arrangements because it allows for uncoupling between the escrow-maker tool and clients paying into escrow without any knowledge or support of escrow transactions in that client.</summary>
    <published>2012-01-29T05:19:44+00:00</published>
  </entry>
</feed>
