<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Quote on BIP 16</title>
  <updated>2023-05-19T01:05:10.698208+00:00</updated>
  <author>
    <name>Gregory Maxwell 2012-01-29 05:19:44</name>
  </author>
  <author>
    <name>Gregory Maxwell 2012-01-29 08:14:06</name>
  </author>
  <link href="bitcoin-dev/Jan_2012/001087_Quote-on-BIP-16.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001089_Quote-on-BIP-16.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Quote on BIP 16</title>
    <updated>2023-05-19T01:05:10.698208+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-January/001087.html" rel="alternate"/>
    <summary>In a discussion between Amir Taaki and Gavin Andresen, they discuss the need for long addresses for two-factor protected accounts or multi-party trusts without using pay-to-script hash (P2SH). P2SH allows for shorter addresses by encoding just the hash of the script. Without P2SH, addresses would need to encode the entire script specification making them much longer. A pay-to-script solution has several issues like vulnerability to invisible substitution, sender being responsible for fees related to enlarged transactions, creating another input vector for non-trivial data that must be inspected and validated, and leaving complicated release rules in the transaction outputs which are unprunable. P2SH reduces output sizes to the absolute minimum without inflating the total data size. However, multisig addresses and P2S are not the same, and the issues raised only apply to potential unprunable transaction outputs. P2SH is still better for negotiated escrow arrangements as it provides a uniform feature set across bitcoin services and uncouples escrow makers from clients paying into escrow without any knowledge or support of escrow transactions in that client.</summary>
    <published>2012-01-29T05:19:44+00:00</published>
  </entry>
</feed>
