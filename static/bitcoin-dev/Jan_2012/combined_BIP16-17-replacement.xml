<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - BIP16/17 replacement</title>
  <updated>2023-05-18T23:32:19.929159+00:00</updated>
  <author>
    <name>Pieter Wuille 2012-02-01 10:02:08</name>
  </author>
  <author>
    <name>Gregory Maxwell 2012-01-31 17:45:14</name>
  </author>
  <link href="bitcoin-dev/Feb_2012/001156_BIP16-17-replacement.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2012/001147_BIP16-17-replacement.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - BIP16/17 replacement</title>
    <updated>2023-05-18T23:32:19.929159+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2012-February/001156.html" rel="alternate"/>
    <summary>In a technical discussion, Bitcoin core developer Pieter Wuille explained that BIP16 and BIP17 are backward compatible enough that people can continue using the old clients with each other. The only change to the protocol is that previously-valid transactions become invalid. As long as a supermajority of miners enforce the new rules, everyone can keep using their old bitcoin client and accept the new block chain. However, if there was ever a breaking change to the protocol such as adding a new transaction type, all users would have to upgrade. This would create a fork in the chain from before the first new-style transaction. During the discussion, Andy Parkins suggested a different solution, which the experts agreed was not justified for this case. They also discussed the possibility of scrapping the system and implementing a true breaking change, but considered it unlikely due to the required resources and lack of trust in upgrading.</summary>
    <published>2012-02-01T10:02:08+00:00</published>
  </entry>
</feed>
