<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your	mempool are belong to us"</title>
  <updated>2023-10-25T17:07:29.137401+00:00</updated>
  <author>
    <name>ziggie1984 2023-10-17 07:21:35+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your	mempool are belong to us"</title>
    <updated>2023-10-25T17:07:29.137401+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022005.html" rel="alternate"/>
    <summary>In this email, the sender, ziggie, thanks Antoine for providing a detailed explanation of pinning attacks in the Lightning Network. The sender acknowledges that these attacks are not unlikely, especially when targeting channels with high capacity and loose channel policies. The sender requests additional details about an attack observed on the mainnet and asks if there are any tools available to monitor suspicious behavior in parallel with their lightning software.

The sender also highlights that it is not necessary to control two neighboring nodes to target a victim. By cycling the attack on the tail side and delaying the confirmation of the htlc-timeout covenant, the peer at the front of the victim's incoming link will force-close the channel and claim their timeout-path in the same way. This cancels back the initial htlc amount to the attacker's initial node. Additionally, the sender suggests introducing a feebumping race between the victim and the attacker on the tail side of the attack to make it even more costly.

The sender mentions that currently, when lightning nodes see the preimage in the mempool, they extract the preimage and don't try to race the transaction output. However, the sender proposes that in this scenario, if the preimage is visible and can be claimed via the htlc-timeout path, aggressive fee-bumping (racing the output) should be done on the htlc-output in addition to grabbing the preimage and claiming it on the incoming. This approach is feasible only with anchor channels where fees can be added to the htlc-covenant. By using fees up to 50% of the htlc value, the attack becomes more costly for the peer attempting to steal the htlc through multiple cycles.

To mitigate these attacks, the sender suggests restricting the amount and number of HTLCs for big channels to unknown peers. This restriction would quickly result in a loss for the attacker if the HTLCs they attempt to steal are small.

Overall, ziggie's email seeks more details about observed attacks, tools for monitoring suspicious behavior, and proposes additional mitigations to make pinning attacks more costly for attackers.</summary>
    <published>2023-10-17T07:21:35+00:00</published>
  </entry>
</feed>
