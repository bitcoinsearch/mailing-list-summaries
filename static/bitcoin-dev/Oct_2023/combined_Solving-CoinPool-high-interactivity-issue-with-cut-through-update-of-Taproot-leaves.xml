<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Solving CoinPool high-interactivity issue with cut-through update of Taproot leaves</title>
  <updated>2023-10-06T01:54:29.930061+00:00</updated>
  <author>
    <name>Johan Torås Halseth 2023-10-05 07:38:24+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-10-05 01:13:06+00:00</name>
  </author>
  <author>
    <name>Johan Torås Halseth 2023-10-03 11:24:20+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-09-26 15:36:26+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-09-26 06:50:50+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-09-25 18:18:36+00:00</name>
  </author>
  <link href="bitcoin-dev/Oct_2023/021981_Solving-CoinPool-high-interactivity-issue-with-cut-through-update-of-Taproot-leaves.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/021979_Solving-CoinPool-high-interactivity-issue-with-cut-through-update-of-Taproot-leaves.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/021978_Solving-CoinPool-high-interactivity-issue-with-cut-through-update-of-Taproot-leaves.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021971_Solving-CoinPool-high-interactivity-issue-with-cut-through-update-of-Taproot-leaves.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021970_Solving-CoinPool-high-interactivity-issue-with-cut-through-update-of-Taproot-leaves.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021969_Solving-CoinPool-high-interactivity-issue-with-cut-through-update-of-Taproot-leaves.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Solving CoinPool high-interactivity issue with cut-through update of Taproot leaves</title>
    <updated>2023-10-06T01:54:29.930197+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021981.html" rel="alternate"/>
    <summary>In the email exchange, Johan suggests that OP_CHECKCONTRACTVERIFY could potentially achieve what Antoine is looking for regarding the disaggregation of participants' pubkeys and balances. Johan provides a link to a discussion on the Bitcoin-dev mailing list for more information.Antoine raises concerns about the authentication of fan-out balances and pubkeys in a partial subset push on the stack, particularly in the context of a cut-through update of taproot leaves. He mentions that this subset is not known at pool setup and proposes using OP_CHECKCONTRACTVERIFY to architect the design of the coinpool and its cut-through mechanism. Antoine also mentions the challenges related to efficient traversal, inspection, and modification of the contract.The email goes on to explain how the proposed approach would work. The coinpool UTXO would be spent with a transaction containing two outputs: the remainder of the previous coinpool representing offline users, and the new coinpool among online users. If an offline user comes back online and tries to double spend the UTXO, Eltoo can handle the situation. This approach allows for flexible management of funds between online and offline users, ensuring the security and accessibility of offline users' funds when they come back online.Antoine then discusses the concept of OP_EVICT in the context of an off-chain payment pool. He mentions that while OP_EVICT requires participant cooperation after the state update to allow a single participant to withdraw their funds, it may not be safe if the requirement of unilateral enforcement of the latest agreed-upon state is retained. Antoine suggests alternatives such as TLUV or MERKLESUB to achieve the desired level of covenant flexibility.Antoine expresses his interest in understanding if on-chain "cut-through" is the best direction to solve the high interactivity issue of channel factory and payment pool over punishment-based ideas. While he might work on crafting a proposal in the future, he seeks a better understanding of the topic at the moment.In another email, ZmnSCPxj reaches out to Antoine to inquire about the suitability of using "OP_EVICT" for an unknown purpose. The email lacks contextual information but includes a link to a mailing list archive for further reference.The email exchange also discusses the issue of interactivity constraints in payment pools and channel factories, specifically related to off-chain balances. Various proposed solutions are mentioned, including introducing a coordinator, partitioning or layering balances among subsets of offline users, and mitigating equivocation through punishment. The author suggests that the most realistic solution is to prevent off-chain group equivocation proactively by editing the funding utxo of the pool or factory efficiently. The concept of "cut-through" spends is introduced, where multiple leaves are updated with a single witness composed interactively by the owners of the spent leaves. This approach allows for the aggregation of amounts and pubkeys, while maintaining the integrity of unmodified leaves. The author provides an example scenario and mentions proposed taproot tree update script primitives that offer flexibility for generating cut-through spends or batches of cut-throughs.Overall, the emails discuss various concepts and proposals related to off-chain payment pools, including OP_CHECKCONTRACTVERIFY, OP_EVICT, TLUV, MERKLESUB, and the use of "cut-through" spends to address interactivity constraints. The authors raise concerns, propose alternatives, and seek a better understanding of the topic at hand.</summary>
    <published>2023-10-05T07:38:24+00:00</published>
  </entry>
</feed>
