<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Proposed BIP for OP_CAT</title>
  <updated>2023-10-25T01:56:58.518637+00:00</updated>
  <author>
    <name>Steven Roose 2023-10-24 19:47:23+00:00</name>
  </author>
  <author>
    <name>Andrew Poelstra 2023-10-24 13:05:56+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2023-10-24 03:45:49+00:00</name>
  </author>
  <author>
    <name>Andrew Poelstra 2023-10-24 01:17:28+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2023-10-24 00:48:24+00:00</name>
  </author>
  <author>
    <name>Andrew Poelstra 2023-10-23 13:41:51+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2023-10-23 12:26:26+00:00</name>
  </author>
  <author>
    <name>vjudeu at gazeta.pl 2023-10-23 05:13:48+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2023-10-23 02:13:10+00:00</name>
  </author>
  <author>
    <name>vjudeu at gazeta.pl 2023-10-22 08:58:07+00:00</name>
  </author>
  <author>
    <name>Ethan Heilman 2023-10-21 20:24:29+00:00</name>
  </author>
  <author>
    <name>Greg Sanders 2023-10-21 16:10:00+00:00</name>
  </author>
  <author>
    <name>Andrew Poelstra 2023-10-21 15:03:07+00:00</name>
  </author>
  <author>
    <name>alicexbt 2023-10-21 05:49:59+00:00</name>
  </author>
  <author>
    <name>Ethan Heilman 2023-10-21 05:08:03+00:00</name>
  </author>
  <link href="bitcoin-dev/Oct_2023/022085_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022084_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022082_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022080_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022079_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022070_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022069_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022066_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022064_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022062_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022057_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022056_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022055_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022053_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022049_Proposed-BIP-for-OP-CAT.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Proposed BIP for OP_CAT</title>
    <updated>2023-10-25T01:56:58.518779+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022085.html" rel="alternate"/>
    <summary>The email discusses a proposal by Ethan to introduce a new opcode called OP_CONCAT in tapscript. The purpose of this opcode is to concatenate the top two stack elements and push the result back onto the stack, providing more flexibility and simplifying certain script implementations. Feedback and suggestions are requested on this proposal.

The main topic of the email is the limitations of the OP_CAT opcode in tapscript and potential solutions to overcome them. Currently, tapscript enforces a maximum stack element size of 520 Bytes. The author questions whether there is a new limit related to tapscript, as initially there was no limit but a 5k limit was implemented, which was later reduced to 520 in the same commit where OP_CAT was disabled.

The sender expresses gratitude to Ethan for writing up the BIP (Bitcoin Improvement Proposal) text. They believe that introducing CAT (CheckTemplateVerify) would not only have the listed use cases but also open up possibilities for Bitcoin script research, allowing experimentation before proposing dedicated opcodes. The value of CAT is emphasized as being simple yet valuable. The sender suggests sticking with "just CAT" instead of adding a list of opcodes, as additional opcodes tend to invite endless debate and controversy.

A draft BIP has been proposed to enable OP_CAT as a Tapscript opcode. The opcode allows the concatenation of two values on the stack. It pops the top two values off the stack, concatenates them together, and pushes the concatenated value back onto the stack. It fails if there are less than two values on the stack or if the concatenated value would exceed the maximum script element size of 520 Bytes.

The motivation behind introducing OP_CAT is to overcome the limitation of tapscript lacking a general-purpose way of combining objects on the stack. This restricts the expressiveness and power of tapscript. OP_CAT aims to expand the functionality of tapscript by providing a simple, modular, and useful opcode. It enables various use cases, including tree signatures for multisignature scripts, encoding generalized logical spend conditions, and implementing non-equivocation contracts in tapscript to prevent double spending in Bitcoin payment channels.

The email provides several links for further details and references related to OP_CAT and its proposed implementation. These include the draft BIP, a Unix Environment paper, a discussion on CheckSigFromStack for Arithmetic Values, papers on penalizing equivocation by loss of Bitcoins and merkle trees and generalized consensus, and articles on CAT and Schnorr Tricks.</summary>
    <published>2023-10-24T19:47:23+00:00</published>
  </entry>
</feed>
