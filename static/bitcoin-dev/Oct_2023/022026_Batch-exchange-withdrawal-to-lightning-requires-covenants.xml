<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Batch exchange withdrawal to lightning requires covenants</title>
  <updated>2023-10-21T01:53:22.849903+00:00</updated>
  <author>
    <name>Antoine Riard 2023-10-19 17:09:51+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Batch exchange withdrawal to lightning requires covenants</title>
    <updated>2023-10-21T01:53:22.849932+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022026.html" rel="alternate"/>
    <summary>Antoine expresses his gratitude to Bastien for his additional comments. He acknowledges that he now has a better understanding of the concept, which is similar to a regular splice where one participant can potentially double-spend at any time using a previous commit transaction. Antoine also mentions that they are already aware of the liquidity griefing issue and advises waiting for a few confirmations before using spawned channels.In the case of this model, where the splice is a "standard" nVersion=2 transaction with a reasonable feerate for non-delayed broadcast, Antoine agrees that his previous comment does not apply. However, he brings up a hypothetical future scenario where the feerate picked up by the batch splicing may not be compelling enough during mempool spikes. In such a situation, interactive re-generation of a bumped Replace-By-Fee (RBF) transaction might not be possible. He expresses concern that re-broadcasting the batch splice transaction package with a bumped Child Pays for Parent (CPFP) might be affected by this issue. Antoine states that this concern needs to be verified.Best regards,Antoine</summary>
    <published>2023-10-19T17:09:51+00:00</published>
  </entry>
</feed>
