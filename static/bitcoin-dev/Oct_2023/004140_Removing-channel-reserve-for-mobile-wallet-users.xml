<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Removing channel reserve for mobile wallet users</title>
  <updated>2023-11-01T20:43:15.385904+00:00</updated>
  <author>
    <name>SomberNight 2023-10-18 15:28:41+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Removing channel reserve for mobile wallet users</title>
    <updated>2023-11-01T20:43:15.385904+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/004140.html" rel="alternate"/>
    <summary>In the email, the sender discusses the process of public attribution in the context of a wallet user proving that the wallet provider broadcast an old state. The sender highlights four points that can be used for proof:

1. A revocation occurred: The user can point to the funding transaction output (txo) and the mined commitment transaction being spent via a revocation path.
2. The user was one of the participants: This can be proven by signing with one of the multisig funding keys.
3. The other participant (nodeid) was the provider P:
   - If it was a public channel, the user can show the channel_announcement message.
   - If it was an unannounced channel, the user most likely has a channel_update message for the incoming edge, signed by P. However, this is not guaranteed according to bolt-07.
4. Identifying the cheating counterparty: The user can sign a message with the revocationpubkey visible onchain, which was used to spend from the old state. Additionally, the user could prove ownership of the txo created by the revocation, making point 2 redundant.

The key insight mentioned is related to point 3/b, where the private channel_update can be shown. This information is crucial for creating invoices.</summary>
    <published>2023-10-18T15:28:41+00:00</published>
  </entry>
</feed>
