<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-26T07:39:57.287188+00:00</updated>
  <author>
    <name>Peter Todd 2023-10-20 10:31:03+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-26T07:39:57.288190+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022033.html" rel="alternate"/>
    <summary>The email discusses the issue of failing to use RBF (Replace-By-Fee) in pre-signed transactions. The sender suggests that the correct approach is to pre-sign multiple different transactions to cover various fee ranges for bumping fees. By increasing the fee by 2x each time, pre-signing 10 different replacement transactions can cover a fee range of 1024x. This approach can be further improved by increasing the multiplier towards the end of the range.

The sender emphasizes that increasing per-tx (temporary) storage and bandwidth costs by ~10x or even ~100x is not a significant concern in the context of a highly scalable protocol like Lightning. They argue that there is no reason for B-&gt;C transactions to get stuck and consider it a major flaw in the Lightning protocol that needs to be addressed. They also suggest applying this fix to other aspects of the Lightning protocol, such as channel opens.

The email includes a link to Peter Todd's website (https://petertodd.org) and mentions his email address (peter[at]petertodd.org).</summary>
    <published>2023-10-20T10:31:03+00:00</published>
  </entry>
</feed>
