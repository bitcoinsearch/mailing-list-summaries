<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-25T17:01:55.868243+00:00</updated>
  <author>
    <name>Peter Todd 2023-10-20 10:31:03+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-25T17:01:55.868243+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022033.html" rel="alternate"/>
    <summary>The email discusses the issue of failing to use RBF (Replace-By-Fee) in the context of pre-signed transactions. The sender suggests that the correct approach is to pre-sign multiple different transactions to cover a wide range of fee needs. By increasing the fee by 2x each time, pre-signing 10 replacement transactions can cover a fee range of 1024x. It is mentioned that increasing temporary storage and bandwidth costs by ~10x or even ~100x is not a significant concern in a highly scalable protocol like Lightning.

The email emphasizes that there is no reason why B-&gt;C transactions should be getting stuck, highlighting it as a major flaw in the Lightning protocol that needs to be addressed. The suggested fix should also be applied to other aspects of the Lightning protocol, such as channel opens.

To support the discussion, a link to https://petertodd.org is provided, along with an email address 'peter'[:-1]@petertodd.org.</summary>
    <published>2023-10-20T10:31:03+00:00</published>
  </entry>
</feed>
