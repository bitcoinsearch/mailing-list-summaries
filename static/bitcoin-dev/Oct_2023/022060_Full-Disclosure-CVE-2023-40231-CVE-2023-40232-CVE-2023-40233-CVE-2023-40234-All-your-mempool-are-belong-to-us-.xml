<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-26T07:19:22.189082+00:00</updated>
  <author>
    <name>Nadav Ivgi 2023-10-22 04:49:19+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-26T07:19:22.189082+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022060.html" rel="alternate"/>
    <summary>The email suggests addressing a potential issue related to the use of unconfirmed outputs in a transaction. The idea proposed is to introduce a new opcode called OP_CSV_ALLINPUTS or OP_CSV_OTHERINPUTS. 

The OP_CSV_ALLINPUTS opcode would require all inputs in a transaction to have a matching nSequence, effectively preventing the use of unconfirmed outputs in the spending transaction for HTLC (Hashed Time-Locked Contract) preimage branch. This would provide protection against the replacement cycling attack.

Alternatively, the OP_CSV_OTHERINPUTS opcode could be used, which would allow the HTLC output itself to be spent immediately via the preimage branch. However, it would still require that any other inputs added for fees are confirmed.

By implementing either of these opcodes, it would ensure that unconfirmed outputs are not used in the HTLC-preimage-spending transaction, thus mitigating the risk of the replacement cycling attack.

It is worth noting that the author does not explicitly state whether this solution is desirable or if there are any potential drawbacks or considerations to be aware of. Additionally, no links or external references are provided in the email.</summary>
    <published>2023-10-22T04:49:19+00:00</published>
  </entry>
</feed>
