<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-25T17:03:35.669765+00:00</updated>
  <author>
    <name>Matt Corallo 2023-10-18 00:17:44+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-25T17:03:35.669765+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022015.html" rel="alternate"/>
    <summary>The email discusses some confusion regarding the issue at hand and the proposed mitigations. It is clear that the deployed mitigations are not expected to solve the problem, and some argue that they are merely a PR statement. Two mitigations are discussed in the email: mempool scanning and transaction re-signing/re-broadcasting.

Mempool scanning involves regularly checking the mempool of a local node to catch the replacement cycle mid-cycle. However, this method only works if the first transaction is seen before the second transaction replaces it. Currently, a large majority of lightning nodes run on machines with a Bitcoin node on the same IP address, making it easy for an attacker to connect to the local node and quickly perform the replacement, preventing the victim from seeing the replacement. Similarly, this discoverability is true for mining pools as well. An attacker performing this attack is likely to target a miner's node directly, limiting the reach of the intermediate transaction to only miners, thus making it impossible for the victim to discover it.

The second mitigation, which involves re-signing and re-broadcasting the victim's transaction in an attempt to get it to miners even if it has been removed, may work if the attacker is lazy and hasn't completed their attack system. However, if the attacker is connected to a large majority of hash rate, they can aggressively and arbitrarily reduce the probability of the victim's transaction getting confirmed by repeatedly replacing it. 

It is important to note that these mitigations are not considered a proper "fix" for the issue. In a perfect world scenario, where the P2P network functions smoothly, these mitigations might prevent such attacks due to delays or other anomalies. However, the only real solution to this issue would be when miners keep a history of transactions they have seen and try them again after they may be able to enter the mempool because of an attack like this.</summary>
    <published>2023-10-18T00:17:44+00:00</published>
  </entry>
</feed>
