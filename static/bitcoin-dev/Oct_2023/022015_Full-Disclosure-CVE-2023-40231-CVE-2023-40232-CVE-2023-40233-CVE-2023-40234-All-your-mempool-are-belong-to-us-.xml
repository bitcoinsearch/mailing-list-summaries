<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-18T01:54:59.982689+00:00</updated>
  <author>
    <name>Matt Corallo 2023-10-18 00:17:44+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-18T01:54:59.982727+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022015.html" rel="alternate"/>
    <summary>There is confusion regarding the issue at hand and the effectiveness of the mitigations in place. The deployed mitigations are not expected to fully resolve the issue, and it can be argued that they serve more as a public relations statement. Two mitigations are discussed: mempool scanning and transaction re-signing/re-broadcasting.Mempool scanning involves regularly checking the mempool of a local node to catch the replacement cycle mid-cycle. However, this method only works if the first transaction is seen before the second transaction replaces it. Currently, a majority of lightning nodes run on machines with a Bitcoin node on the same IP address, making it easy for an attacker to connect to the local node and quickly perform the replacement, preventing the victim from detecting it. This discoverability issue also applies to mining pools. An attacker may focus their attack on a miner's node directly, limiting the reach of the intermediate transaction to only miners, which further hinders detection by the victim.The second mitigation, re-signing and re-broadcasting the victim's transaction in an attempt to get it to miners even if it has been removed, may work, but only if the attacker is lazy and hasn't completed their attack system. If the attacker has control over a large portion of the hashrate, they can aggressively replace transactions in a cycle, reducing the likelihood of the victim's transaction being confirmed.It should be noted that the above analysis assumes an ideal scenario and does not account for the unpredictable nature of the P2P network, which has slow nodes and exhibits strange behavior. There is a possibility that these mitigations might coincidentally prevent an attack by delaying the process or due to other factors. However, this is far from a definitive "fix" for the issue.Ultimately, the only real solution to this problem would involve miners keeping a history of transactions they have encountered and attempting to include them in the mempool again after a potential attack like this occurs.Link: [Antoine Riard's email](email_link)</summary>
    <published>2023-10-18T00:17:44+00:00</published>
  </entry>
</feed>
