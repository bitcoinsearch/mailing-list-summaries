<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>BitVM: Compute Anything on Bitcoin</title>
  <updated>2023-10-10T01:53:28.349647+00:00</updated>
  <author>
    <name>Robin Linus 2023-10-09 13:46:24+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>BitVM: Compute Anything on Bitcoin</title>
    <updated>2023-10-10T01:53:28.349698+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021984.html" rel="alternate"/>
    <summary>BitVM is a computing paradigm that allows for the expression of Turing-complete Bitcoin contracts without making any changes to the network's consensus rules. Instead of executing computations on Bitcoin, they are verified, similar to optimistic rollups. A prover can make a claim that a specific function evaluates to particular inputs and outputs. If this claim is false, the verifier can provide a succinct fraud proof and punish the prover.This mechanism enables the verification of any computable function on Bitcoin. However, committing to a large program in a Taproot address requires significant off-chain computation and communication. The resulting on-chain footprint, though, is minimal. Both parties involved can collaborate to perform complex, stateful off-chain computation without leaving a trace on the blockchain. On-chain execution is only necessary in the event of a dispute.To learn more about BitVM and its capabilities, refer to the official paper: https://bitvm.org/bitvm.pdf</summary>
    <published>2023-10-09T13:46:24+00:00</published>
  </entry>
</feed>
