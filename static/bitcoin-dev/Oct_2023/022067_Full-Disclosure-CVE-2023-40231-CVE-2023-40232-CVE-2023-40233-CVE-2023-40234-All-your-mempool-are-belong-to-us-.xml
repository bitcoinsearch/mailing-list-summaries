<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-25T16:59:23.490542+00:00</updated>
  <author>
    <name>David A. Harding 2023-10-23 08:49:55+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-25T16:59:23.490542+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022067.html" rel="alternate"/>
    <summary>In an email sent by Nadav Ivgi via bitcoin dev, the underlying problem of addressing a replacement cycle is discussed. The cycle is described as follows: Bob broadcasts an HTLC-timeout (input A, input B for fees, output X), Mallory replaces the HTLC-timeout with an HTLC-preimage (input A, input C for fees, output Y), and Mallory replaces the transaction that created input C, removing the HTLC-preimage from the mempool.

However, an alternative approach is suggested. In this approach, Bob still broadcasts an HTLC-timeout (input A, input B for fees, output X) and Mallory replaces the HTLC-timeout with an HTLC-preimage (input A, input C for fees, output Y). The difference lies in the next step, where Mallory uses input C to replace the HTLC-preimage with a transaction that does not include input A, effectively removing the preimage from the mempool.

The original scenario relies on input C being from an unconfirmed transaction, making OP_CSV_ALLINPUTS effective. However, in the alternative scenario, input C can come from a confirmed transaction, rendering OP_CSV_ALLINPUTS ineffective.

The email provides insight into different approaches to address the replacement cycle issue in Bitcoin transactions.</summary>
    <published>2023-10-23T08:49:55+00:00</published>
  </entry>
</feed>
