<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Solving CoinPool high-interactivity issue with cut-through update of Taproot leaves</title>
  <updated>2023-10-06T01:54:11.052751+00:00</updated>
  <author>
    <name>Antoine Riard 2023-10-05 01:13:06+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Solving CoinPool high-interactivity issue with cut-through update of Taproot leaves</title>
    <updated>2023-10-06T01:54:11.052804+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021979.html" rel="alternate"/>
    <summary>The email discusses the issue of disaggregating participant's pubkeys and balances from a partial subset push on the stack and verifying the validity of corresponding signatures. The author mentions that one requirement for a cut-through update of taproot leaves is to verify the authentication of the fan-out balances and pubkeys towards the "online" partition. However, this subset is not known at pool setup, even though the contract or tree construct can be equilibrated with some expectation. The author suggests that OP_CHECKCONTRACTVERIFY could be used to architect the proposed design of coinpool and its cut-through mechanism. One challenging aspect mentioned is the efficient traversal, inspection, and modification of the contract.</summary>
    <published>2023-10-05T01:13:06+00:00</published>
  </entry>
</feed>
