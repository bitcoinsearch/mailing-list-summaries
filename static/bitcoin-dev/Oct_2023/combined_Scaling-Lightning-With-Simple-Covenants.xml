<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Scaling Lightning With Simple Covenants</title>
  <updated>2023-10-07T01:52:28.336345+00:00</updated>
  <author>
    <name>jlspc 2023-10-06 16:26:33+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-28 15:56:11+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-09-26 16:42:34+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-09-19 07:44:48+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-09-18 04:14:55+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2023-09-17 11:32:52+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:59:39+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:56:04+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-17 00:52:13+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2023-09-11 05:27:25+00:00</name>
  </author>
  <author>
    <name>Rusty Russell 2023-09-11 02:13:52+00:00</name>
  </author>
  <author>
    <name>Anthony Towns 2023-09-11 00:56:40+00:00</name>
  </author>
  <author>
    <name>jlspc 2023-09-08 18:54:46+00:00</name>
  </author>
  <link href="bitcoin-dev/Oct_2023/021982_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021973_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021972_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021967_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021965_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021966_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021962_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021961_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021960_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021951_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021950_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021943_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <link href="bitcoin-dev/Sept_2023/021941_Scaling-Lightning-With-Simple-Covenants.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Scaling Lightning With Simple Covenants</title>
    <updated>2023-10-07T01:52:28.336487+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021982.html" rel="alternate"/>
    <summary>The email discusses several proposals, feedback, and concerns related to capital efficiency, classification of users, scaling notions, group coordination, routing, fault-tolerance, and trust in off-chain constructions and Lightning Network protocols. John proposes a new approach to address the issue of capital efficiency in timeout-trees by pairing dedicated user B with another dedicated user C. Each leaf of the timeout-tree funds a hierarchical channel, allowing B and C to utilize funds from both the old and new timeout-trees to route payments. To prevent congestion on the blockchain and potential theft by colluding dedicated users, John suggests changing the Bitcoin consensus rules. This would ensure that timeout-trees only expire after a sufficient number of low-fee blocks have been added.The email also discusses feedback on the classification of users as "casual" versus "dedicated" and the design considerations for Lightning Network protocols. The sender suggests introducing different scaling notions to measure the performance of off-chain constructions, including onboarding scaling, transactional scaling, and user resource scaling. Concerns are raised about group coordination, routing, and fault-tolerance in off-chain constructions.The tradeoff between trust and capital efficiency in Lightning Network is highlighted, along with the "thundering herd" problem that can occur if dedicated user B cheats. This results in a large number of on-chain transactions as casual users try to recover their funds. The reduction in capital efficiency when casual users follow a rollover policy and the challenges associated with reducing the inactive lifetime of a UTXO are also discussed.The challenge of scaling Lightning Network for casual users is explored, with the suggestion of using simple covenants enabled by CheckTemplateVerify (CTV) or AnyPrevOut (APO) to create Lightning channels for millions of casual users. Changes to the consensus rules are proposed to allow simple covenants and timeout-trees, which would greatly improve scalability and usability.Overall, the email provides a comprehensive analysis of various proposals, feedback, and concerns related to capital efficiency, classification of users, scaling notions, group coordination, routing, fault-tolerance, and trust in off-chain constructions and Lightning Network protocols.</summary>
    <published>2023-10-06T16:26:33+00:00</published>
  </entry>
</feed>
