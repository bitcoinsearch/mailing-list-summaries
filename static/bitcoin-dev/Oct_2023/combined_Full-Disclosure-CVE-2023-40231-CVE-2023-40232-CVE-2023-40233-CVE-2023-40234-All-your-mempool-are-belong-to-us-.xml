<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your	mempool are belong to us"</title>
  <updated>2023-10-25T17:07:51.558346+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-10-17 10:34:04+00:00</name>
  </author>
  <author>
    <name>ziggie1984 2023-10-17 07:21:35+00:00</name>
  </author>
  <link href="bitcoin-dev/Oct_2023/022004_Full-Disclosure-CVE-2023-40231-CVE-2023-40232-CVE-2023-40233-CVE-2023-40234-All-your-mempool-are-belong-to-us-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022005_Full-Disclosure-CVE-2023-40231-CVE-2023-40232-CVE-2023-40233-CVE-2023-40234-All-your-mempool-are-belong-to-us-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your	mempool are belong to us"</title>
    <updated>2023-10-25T17:07:51.559344+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022004.html" rel="alternate"/>
    <summary>In the email, ZmnSCPxj provides a restatement of the attack scenario involving nodes A, B, and C on the Lightning Network. He explains that if node B has a `cltv_expiry_delta` (time delay for transaction confirmation) of 44 or lower, the attack can be executed successfully. The attack involves the expiration of the HTLC (Hashed Time-Lock Contract) timelock between nodes B and C, causing node B to force the B-C channel onto the blockchain. However, due to increased onchain feerates, the commitment transaction and HTLC-timeout transaction do not confirm. Node A, still online with B, updates the onchain fees of the A-B channel pre-signed transactions to the latest. At this point, node B is unable to claim the A-B HTLC, so node A drops the A-B channel onchain, confirming immediately and allowing A to recover the HTLC funds. However, the pre-signed transactions for the B-C channel remain at the old, uncompetitive feerates. Subsequently, node C broadcasts an HTLC-success transaction with high feerates that Child-Pays-for-Parent (CPFPs) the commitment transaction, replacing the HTLC-timeout transaction which had a low feerate. As a result, C is able to obtain the value of the HTLC, but B can no longer use the knowledge of the preimage as its incoming HTLC was already confirmed by A.

ZmnSCPxj also explains why the HTLC-timeout transaction is presigned and why B cannot fee-bump it. In the Poon-Dryja mechanism, HTLCs are "infected" by the penalty case, making them not plain HTLCs. This infection adds a revocation branch and includes C in the branch claimable by B. These additions are necessary to prevent cheating by B using an old, revoked transaction. To further safeguard against this, an HTLC-timeout transaction is introduced, which spends the B-C-OP_CLTV branch and outputs to a new output with a relative timelock. Unfortunately, this means that the HTLC-timeout transaction is pre-signed and has a specific feerate. Changing the feerate requires both B and C to agree to re-sign the transaction at a higher feerate. However, the HTLC-success transaction spends the plain C-OP_HASH160 branch, allowing C to fee-bump it arbitrarily even if B does not cooperate. C has an advantage in this situation as it only needs to push a smaller number of bytes compared to B, making it require a smaller fee to achieve a particular feerate.

In response to Antoine's request for more details about the attack observed on mainnet, ZmnSCPxj suggests adding more information about how the chain was monitored and if there are any available tools to record such suspicious behavior. Additionally, he mentions that it is not necessary to control two neighboring nodes to target a victim and explains how the attack can be cycled on the tail side while delaying the confirmation of the HTLC-timeout covenant. Furthermore, ZmnSCPxj proposes introducing a feebumping race between the victim and the attacker on the tail side to make the attack more costly. He suggests that lightning nodes should aggressively fee-bump the HTLC-output if they see the preimage in the mempool and can also claim it via the HTLC-timeout path. This strategy would be feasible with anchor channels where fees can be added to the HTLC-covenant. ZmnSCPxj concludes by recommending another mitigation for node runners, which involves restricting the amount and number of HTLCs for big channels to unknown peers, as it quickly becomes costly for the attacker when the stolen HTLCs are small.</summary>
    <published>2023-10-17T10:34:04+00:00</published>
  </entry>
</feed>
