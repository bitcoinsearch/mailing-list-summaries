<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your	mempool are belong to us"</title>
  <updated>2023-10-25T14:51:39.058846+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-10-17 10:34:04+00:00</name>
  </author>
  <author>
    <name>ziggie 2023-10-17 07:21:35+00:00</name>
  </author>
  <link href="bitcoin-dev/Oct_2023/022004_Full-Disclosure-CVE-2023-40231-CVE-2023-40232-CVE-2023-40233-CVE-2023-40234-All-your-mempool-are-belong-to-us-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Oct_2023/022005_Full-Disclosure-CVE-2023-40231-CVE-2023-40232-CVE-2023-40233-CVE-2023-40234-All-your-mempool-are-belong-to-us-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your	mempool are belong to us"</title>
    <updated>2023-10-25T14:51:39.058915+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022004.html" rel="alternate"/>
    <summary>The email provides a detailed explanation of a potential attack on the Lightning Network (LN) and the mechanics behind it. It involves nodes A, B, and C connected through channels with different timelocks for transactions. The attack scenario starts with node C going offline after node B forwards the HTLC (Hash Time Locked Contract) from B to C. This results in all signed transactions, including the commitment transaction and HTLC-timeout transactions, being "stuck" at the feerate at the time.

At block height 100, node B notices that the B-&gt;C HTLC timelock has expired without node C claiming it. As a result, node B forces the B====C channel onchain. However, due to increased onchain feerates, the commitment transaction and HTLC-timeout transaction do not confirm. Meanwhile, node A is still online with node B and updates the onchain fees of the A====B channel pre-signed transactions to the latest fees.

At block height 144, node B is still unable to claim the A-&gt;B HTLC. In response, node A drops the A====B channel onchain, allowing A to recover the HTLC funds immediately because the fees are up-to-date. However, the feerates of the B====C pre-signed transactions remain at the old, uncompetitive rates.

At this point, node C broadcasts an HTLC-success transaction with high feerates that Child-Pays-for-Parent (CPFPs) the commitment transaction. By doing this, node C replaces the HTLC-timeout transaction, which has a lower feerate. Consequently, node C successfully claims the value of the HTLC, while node B can no longer use the knowledge of the preimage because its own incoming HTLC was already confirmed as claimed by node A.

The email also explains why the HTLC-timeout transaction is pre-signed and why node B cannot feebump it. In the Poon-Dryja mechanism, the HTLCs are "infected" by the Poon-Dryja penalty case, which prevents cheating with an old, revoked transaction. To change the feerate of the HTLC-timeout transaction, both node B and node C need to agree to re-sign it at a higher feerate. However, the HTLC-success transaction spends only the branch involving node C, allowing C to feebump it arbitrarily without B's cooperation.

In conclusion, the email provides a detailed explanation of the attack scenario on the Lightning Network, including timelocks, channel confirmations, fee updates, and the differences between HTLC-timeout and HTLC-success transactions.

Apart from the attack scenario, the email also raises a request for more information about an observed attack on the mainnet. The sender expresses gratitude for a detailed explanation on pinning attacks and asks for specific details on how the attack was monitored on the chain. They inquire about tools that can be used to detect suspicious behavior.

The sender highlights that controlling two neighboring nodes is not necessary to target a victim. By cycling the attack on the tail side and delaying the confirmation of the HTLC-timeout covenant, the peer at the front of the victim will force-close the channel and claim their timeout-path in the same way, canceling back the initial HTLC amount to the attacker's initial node.

To make the attack more costly, the sender suggests introducing a feebumping race between the victim and the attacker on the tail side of the attack. This can be done by aggressively fee-bumping the HTLC-output if the preimage is seen and can also be claimed via the HTLC-timeout path. They propose using fees up to 50% of the HTLC value, increasing the cost for the peer attempting to steal the HTLC.

Additionally, the sender recommends a mitigation for node runners, which involves restricting the amount and number of HTLCs for big channels to unknown peers. This restriction quickly leads to a loss for the attacker when they attempt to steal small HTLCs.

Overall, the email discusses pinning attacks, requests more information about a specific attack, proposes monitoring tools, highlights the possibility of targeting a victim without controlling two neighboring nodes, suggests introducing a feebumping race to increase the cost of the attack, and recommends restricting the amount and number of HTLCs for big channels to unknown peers as a mitigation.</summary>
    <published>2023-10-17T10:34:04+00:00</published>
  </entry>
</feed>
