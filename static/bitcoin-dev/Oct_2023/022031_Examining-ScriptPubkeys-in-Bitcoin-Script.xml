<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Examining ScriptPubkeys in Bitcoin Script</title>
  <updated>2023-10-21T01:54:27.960633+00:00</updated>
  <author>
    <name>Rusty Russell 2023-10-20 03:40:37+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Examining ScriptPubkeys in Bitcoin Script</title>
    <updated>2023-10-21T01:54:27.960661+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022031.html" rel="alternate"/>
    <summary>In this email, the sender discusses their exploration of what would be required to usefully validate Taproot outputs in Bitcoin Script. They mention that such functionality is necessary for usable vaults. The sender provides a link to a blog post where they have documented their findings on examining scriptPubkey in script.The sender also mentions that they are open to collaboration and invite others to join in producing a prototype and debugging their script examples. They provide a TL;DR summary, stating that by adding certain operations like OP_MULTISHA256, OP_KEYADDTWEAK, and OP_LESS, along with weakening the OP_SUCCESSx rule, it is possible to prove a two-leaf tapscript tree in about 110 bytes of Script. This enables useful spending constraints based on a template approach.Overall, the email highlights the sender's research on validating Taproot outputs in Bitcoin Script and their interest in collaborating with others to further develop and test their ideas.</summary>
    <published>2023-10-20T03:40:37+00:00</published>
  </entry>
</feed>
