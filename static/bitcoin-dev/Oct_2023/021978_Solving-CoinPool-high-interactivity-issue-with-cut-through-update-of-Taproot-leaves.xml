<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Solving CoinPool high-interactivity issue with cut-through update of Taproot leaves</title>
  <updated>2023-10-04T01:54:56.033367+00:00</updated>
  <author>
    <name>Johan Tor√•s Halseth 2023-10-03 11:24:20+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Solving CoinPool high-interactivity issue with cut-through update of Taproot leaves</title>
    <updated>2023-10-04T01:54:56.033409+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021978.html" rel="alternate"/>
    <summary>In the email, Johan suggests that OP_CHECKCONTRACTVERIFY may be able to achieve what Antoine is looking for. He provides a link to a discussion on the Bitcoin-dev mailing list for more information (https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-May/021719.html).Johan explains that by committing the participants' public keys and balances in the dynamic data instead of the taptree, it is possible to have a subset of online users agree to pool their aggregated balances in a new output. Meanwhile, the funds of offline users would remain inaccessible to them in a second output.To implement this, the coinpool UTXO would be spent with a transaction that has two outputs. The first output would be the "remainder" of the previous coinpool, representing the offline users. The second output would be the new coinpool among the online users. If an offline user comes back online and tries to double spend the UTXO, Eltoo can be used to handle the situation.This approach allows for a flexible management of funds between online and offline users, ensuring that the offline users' funds are secure and accessible when they come back online.Please note that the farewell part of the email has been ignored, as per the given rules.</summary>
    <published>2023-10-03T11:24:20+00:00</published>
  </entry>
</feed>
