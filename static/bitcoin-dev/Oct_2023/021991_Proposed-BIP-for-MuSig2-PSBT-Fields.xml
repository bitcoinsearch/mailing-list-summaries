<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Proposed BIP for MuSig2 PSBT Fields</title>
  <updated>2023-10-15T01:59:26.501520+00:00</updated>
  <author>
    <name>Anthony Towns 2023-10-11 23:47:58+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Proposed BIP for MuSig2 PSBT Fields</title>
    <updated>2023-10-15T01:59:26.501556+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/021991.html" rel="alternate"/>
    <summary>The email discusses the absence of adaptor signature support in BIP 327. While libsecp256k1-zkp has implemented it, there is a lack of support in BIP 327. The expected change to address this issue would involve adding an additional field to specify the adaptor in PSBT_IN_MUSIG2_PUB_ADAPTOR (optional, 33B compressed pubkey, 32B-hash-or-omitted) and an additional field to specify the adaptor secret in PSBT_IN_MUSIG2_PRIV_ADAPTOR (32B). The PartialSigAgg should check if PUB_ADAPTOR is present and incorporate the value from PSBT_IN_MUSIG2_PRIV_ADAPTOR, failing if it is not present. It is important to note that when using adaptor signatures, signers who do not know the adaptor secret will need to ensure that the partial signatures provided by signers who do/might know the secret are valid. However, this cannot be automated at the PSBT level and depends on the protocol. The author suggests that it would be beneficial to have this specified as soon as possible so that it can be supported by all signers. Furthermore, the email highlights a typo in the term "participant" being consistently misspelled as "particpant" and suggests improving the readability of tables by putting the description as a separate row.</summary>
    <published>2023-10-11T23:47:58+00:00</published>
  </entry>
</feed>
