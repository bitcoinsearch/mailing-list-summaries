<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
  <updated>2023-10-18T01:55:11.473716+00:00</updated>
  <author>
    <name>Antoine Riard 2023-10-17 18:34:52+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Full Disclosure: CVE-2023-40231 / CVE-2023-40232 / CVE-2023-40233 / CVE-2023-40234 "All your mempool are belong to us"</title>
    <updated>2023-10-18T01:55:11.473754+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-October/022012.html" rel="alternate"/>
    <summary>The email discusses a scenario involving three participants, A, B, and C, and their interactions within a payment channel network. The main focus is on the replacement mechanism for HTLC (Hash Time-Locked Contract) transactions.In the scenario, B forces the B====C channel on-chain because C has not claimed it. The HTLC-timeout transaction, which is used to recover funds in case of a timeout, does not confirm. However, this is not a problem as C's HTLC-preimage, which confirms the transaction, is still valid after the HTLC timelock has expired. This HTLC-preimage is then replaced itself.A tries to recover the HTLC funds on the A===B channel. Contrary to the common belief that fee rates and mempool congestion are factors in this process, the exploit lies within the replacement mechanism itself. The CPFP (Child Pays For Parent) technique, which allows a low feerate transaction to be confirmed by attaching a high feerate transaction to one of its outputs, is utilized to confirm the transaction.C broadcasts an HTLC-success transaction at block height 144, replacing B's HTLC-timeout transaction. This high feerate transaction is broadcasted at every block between blocks 100 and 144. It is worth noting that B cannot feebump the HTLC-timeout due to the use of sighash_single | anyonecanpay on C's signature.To understand the technical details and implementation of this scenario, refer to the following link: [GitHub - Test Commit](https://github.com/ariard/bitcoin/commit/19d61fa8cf22a5050b51c4005603f43d72f1efcf).</summary>
    <published>2023-10-17T18:34:52+00:00</published>
  </entry>
</feed>
