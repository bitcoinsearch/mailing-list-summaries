<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Compressed Bitcoin Transactions</title>
  <updated>2024-01-19T02:01:49.988715+00:00</updated>
  <author>
    <name>Jonas Schnelli 2024-01-18 09:24:02+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Compressed Bitcoin Transactions</title>
    <updated>2024-01-19T02:01:49.988752+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2024-January/022292.html" rel="alternate"/>
    <summary>The email touches upon the technical considerations regarding the compression of peer-to-peer (P2P) traffic in different versions and encryption scenarios. It notes that while non-encrypted P2P traffic from version 1 could theoretically be compressed at a different layer of the Open Systems Interconnection (OSI) model, the encrypted traffic of version 2 is less likely to benefit from such an approach. Encrypted data typically appears pseudorandom, which reduces the effectiveness of traditional compression techniques applied outside the application layer.

The sender suggests evaluating a specific compression proposal designed for the application layer and compares its efficiency with LZO and gzip, which are standard compression methods applied to legacy transaction encoding. The suggested proposal could potentially offer significant space savings with reduced CPU usage. This would be especially beneficial for the efficient propagation of blocks within the network, which is a critical factor for performance.

Furthermore, the author references a prior discussion on GitHub about the merits of compressing blocks before transmission, providing a link to the pull request for further information: https://github.com/bitcoin/bitcoin/pull/6973. This implies that the topic has been an ongoing conversation in the community, and there's interest in exploring various methods to optimize network traffic related to block propagation.</summary>
    <published>2024-01-18T09:24:02+00:00</published>
  </entry>
</feed>
