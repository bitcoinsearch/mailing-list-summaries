<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>CheckTemplateVerify Does Not Scale Due to UTXO's Required For Fee Payment</title>
  <updated>2024-01-31T01:54:59.668793+00:00</updated>
  <author>
    <name>ZmnSCPxj 2024-01-30 05:07:16+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>CheckTemplateVerify Does Not Scale Due to UTXO's Required For Fee Payment</title>
    <updated>2024-01-31T01:54:59.668823+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2024-January/022322.html" rel="alternate"/>
    <summary>In the email, ZmnSCPxj elaborates on the rationale behind the "initiator pays" principle for onchain fees in the context of the Lightning Network (LN). The writer describes a hypothetical attack where an attacker could exploit an LN node by opening a channel during low-fee periods and subsequently draining the funds to another node they control. This would leave the victim with a commitment transaction that would require an onchain fee for closure.

The "initiator pays" system is defended as it places the financial burden of this fee on the attacker, which is deemed fair since the attacker initiated the channel. This approach also discourages the attacker from repeating this strategy since they would incur repeated onchain fees for each new channel opened.

Moreover, ZmnSCPxj discusses the necessity for victim nodes to maintain a non-zero reserve proportional to the channel size, obliging the attacker to commit funds and somewhat mitigating the attack's impact. The writer also acknowledges that though the advantages of "initiator pays" might be small, it may still be significant enough to retain over a multi-fee-version proposal.

ZmnSCPxj then refers to the Decker-Russell-Osuntokun (DRO) model where both parties hold the same offchain transactions, known as "LN-symmetry". The writer suggests two alternatives to this model: splitting the fee in a "fair" way or creating an artificial asymmetry where one side pays the fees based on a modified `nSequence` in the update and state transactions as outlined in the Poon-Dryja payment channel design.

Finally, the email proposes a variation on the fee structure where the initiator receives full signatures for all fee rate versions while the other party only gets them for the lowest fee version. However, if a multi-version proposal can be constructed that either splits fees between both sides or assigns fees to the exiting party, then this variation would be redundant. The writer signs off with a formal tone without any personal farewell.</summary>
    <published>2024-01-30T05:07:16+00:00</published>
  </entry>
</feed>
