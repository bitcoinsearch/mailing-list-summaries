<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - MuSig2 derivation, descriptor, and PSBT field BIPs</title>
  <updated>2024-01-17T02:04:28.815385+00:00</updated>
  <author>
    <name>Christopher Allen 2024-01-16 08:18:26+00:00</name>
  </author>
  <author>
    <name>Ava Chow 2024-01-15 23:29:46+00:00</name>
  </author>
  <link href="bitcoin-dev/Jan_2024/022283_MuSig2-derivation-descriptor-and-PSBT-field-BIPs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Jan_2024/022282_MuSig2-derivation-descriptor-and-PSBT-field-BIPs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - MuSig2 derivation, descriptor, and PSBT field BIPs</title>
    <updated>2024-01-17T02:04:28.815425+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2024-January/022283.html" rel="alternate"/>
    <summary>The utilization of x-only pubkeys within multisig protocols like FROST and MuSig2 presents a series of challenges and considerations. The technical intricacies of these protocols can sometimes lead to misunderstandings, particularly with the assumption that x-only keys are simply a straightforward optimization rather than a feature with potential complications in more complex applications. It is essential for developers to be aware of the nuances associated with these keys to ensure their correct implementation within higher-level cryptographic schemes.

Significant updates have been made to the Bitcoin Improvement Proposals concerning MuSig2, with particular emphasis on descriptors and Partially Signed Bitcoin Transactions (PSBT) fields. A new BIP has been introduced which addresses the construction and derivation of synthetic extended public keys, segregating it from the original descriptors BIP due to its broader application. While the descriptors BIP has remained largely the same, there is an ongoing discussion about possibly removing ranged derivation from certain expressions while keeping it for the aggregate public key. This matter is open to community feedback.

The PSBT fields BIP has undergone a crucial amendment where the aggregate public key will now be represented as a plain public key instead of being restricted to an 'xonly' format. This change is aimed at streamlining the identification of derived keys by embedding the evenness bit into the serialized fingerprint of either the parent key or the aggregate public key. This integration facilitates verification within the PSBT context, enabling accurate determination of whether a key is indeed derived from an aggregate public key specified within the same PSBT.

For those interested in delving deeper into these revisions, the updated BIPs are available online. The Derivation BIP details the process for generating synthetic extended public keys and can be reviewed at the provided GitHub link. The Descriptors BIP, outlining how descriptors should be structured, is also accessible for examination. Lastly, the PSBT fields BIP, which encompasses changes relevant to PSBT structures, can be found at its respective GitHub URL. The invitation to review these documents underscores the value placed on community expertise in refining these critical financial protocols.</summary>
    <published>2024-01-16T08:18:26+00:00</published>
  </entry>
</feed>
