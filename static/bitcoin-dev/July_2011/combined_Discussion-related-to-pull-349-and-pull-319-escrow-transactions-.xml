<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Discussion related to pull 349 and pull 319 (escrow transactions)</title>
  <updated>2023-05-18T21:41:46.890270+00:00</updated>
  <author>
    <name>Gregory Maxwell 2011-08-04 20:35:53</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-07-23 23:39:13</name>
  </author>
  <link href="bitcoin-dev/Aug_2011/000298_Discussion-related-to-pull-349-and-pull-319-escrow-transactions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2011/000217_Discussion-related-to-pull-349-and-pull-319-escrow-transactions-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Discussion related to pull 349 and pull 319 (escrow transactions)</title>
    <updated>2023-05-18T21:41:46.890270+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000298.html" rel="alternate"/>
    <summary>In an email exchange, a discussion about the implementation of multiple signature escrowed transactions in Bitcoin was had. The current focus on maturity/bugfixes is probably going to delay the full patch for this feature, but the IsStandard part is uncontroversial and could go in quickly. It was suggested that Pull 319 be split into two pull requests: one which does the IsStandard change and one which adds the full escrow feature set. This way when the escrow patch does enter the mainline client it will meet up with a network which is happy to handle its transactions. Pull 349 contains a candidate fix for an issue with multisig validation, but it carries a risk of creating differences in how nodes validate transactions leading to lasting forks. The implementation of multiple signature escrowed transactions is something they believed Bitcoin ought to have sooner rather than later, especially since Clearcoin was gone. The patch needs more testing and discussion before it can be added to the client, but it won't be deployable until after an updated isStandard is widely used in the network. One challenge is that because it requires a new transaction type, it may lead to differences in how nodes validate transactions, causing lasting forks. There are different ways to fix this issue, including defining that OP_PUSHDATA* cannot be used to push the smaller lengths, which could be more efficiently encoded with the direct length opcodes. Another way would be to change out the templating code works to make sure it codes the template the same way the original was coded.</summary>
    <published>2011-08-04T20:35:53+00:00</published>
  </entry>
</feed>
