<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Roadmap/schedules</title>
  <updated>2023-05-18T23:22:06.111984+00:00</updated>
  <author>
    <name>Matt Corallo 2011-08-11 08:48:09</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-08-10 18:57:53</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-10 16:59:14</name>
  </author>
  <link href="bitcoin-dev/Aug_2011/000351_Roadmap-schedules.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000339_Roadmap-schedules.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000335_Roadmap-schedules.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Roadmap/schedules</title>
    <updated>2023-05-18T23:22:06.111984+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000351.html" rel="alternate"/>
    <summary>In this communication, Gavin Andresen outlines his roadmap for Bitcoin development priorities and testing over the next few months. One of the main focuses is improving wallet security by shipping Matt's wallet encryption along with groffer's Multisign patch (#319). However, there is a lack of documentation on how to prepare bitcoind installations for encryption. Another issue that needs to be addressed is new code causing CRITICAL_SECTION deadlocks, which is a chronic problem. It is suggested that re-architecting to be single-threaded/asio is probably the right thing to do. Sipa had begun looking at doing some reworking of the locking system to support more broad stuff like read-only locks, but there was no progress update. Andresen also emphasizes the importance of thoroughly testing any PULL request that involves more than trivial code changes before pulling it. He believes that QA will naturally grow out of some sort of dedicated support organization rather than have a dev fiat requirement. Testing tends to happen in the periphery of open source projects. Pieter proposed a draft for a reworked fee system that assigns a score to each transaction group that always keeps increasing over time. The memory pool should be sorted according to those scores, and the lowest scoring ones should be dropped when a configurable memory limit is reached. For mining, the top N transaction groups should be selected from the pool in such a way that an average configurable fee per byte is maintained. Nodes can measure and estimate this distribution, and calculate expected time to inclusion for a given fee. However, it is hard to define a scoring system for transactions that tries to mimic the cost for the network to handle that transaction.Andresen's priority list for the next few months includes network health, chronic problems with new code causing CRITICAL_SECTION deadlocks, wallet security, bug fixing, and testing. He would like to see a release-after-next that includes fClient mode, Sipa's wallet and key export/import, moving from wxWidgets to qt for the GUI, and un-hardcoding fee handling. Additionally, he would like to see research-y features such as "Impolite peer" detection/reaction to prevent various DOS/Sybil attacks, better detection/reaction to double spend attempts or block-chain splits, and code for mining pool participants that helps keep mining pool operators honest. Everything else is considered lower priority, but if it is important to other people (and non-controversial), thoroughly tested, and there's zero chance it introduces a security vulnerability, then there will be no objections to pulling it.</summary>
    <published>2011-08-11T08:48:09+00:00</published>
  </entry>
</feed>
