<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Roadmap/schedules</title>
  <updated>2023-05-19T00:54:58.431100+00:00</updated>
  <author>
    <name>Matt Corallo 2011-08-11 08:48:09</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-08-10 18:57:53</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-10 16:59:14</name>
  </author>
  <link href="bitcoin-dev/Aug_2011/000351_Roadmap-schedules.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000339_Roadmap-schedules.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000335_Roadmap-schedules.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Roadmap/schedules</title>
    <updated>2023-05-19T00:54:58.431100+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000351.html" rel="alternate"/>
    <summary>Gavin Andresen, a Bitcoin developer, has outlined his priority list for the coming months. He aims to address the issue of network health, which lacks metrics, and new code causing CRITICAL_SECTION deadlocks that require early detection. Re-architecting to be single-threaded/asio may be necessary in the long term. Wallet security, including Matt's wallet encryption and groffer's Multisign patch, needs to be shipped soon. Additionally, 44 bugs on the issue list need to be prioritized and assigned, and someone must verify they get closed when fixed. More unit tests and automated testing are required, as well as finding funds or people for a dedicated "core bitcoin quality assurance team."In the release-after-next, Gavin wants to see fClient mode, Sipa's wallet and key export/import, moving from wxWidgets to Qt for the GUI, and un-hardcoding fee handling. Lastly, research-y features he'd like to see soon include "Impolite peer" detection/reaction, better detection/reaction to double spend attempts or block-chain splits, and code for mining pool participants that helps keep mining pool operators honest.Regarding the deadlock issue, Matt Corallo suggested solutions such as moving towards a bitcoin library that would be single-threaded/asio or doing careful checking and reworking of the locking system. He also proposed a system with one lock for each component of the code and using reader-writer locks instead of exclusive locks where possible. Pieter, another developer, proposed a draft for a reworked fee system. In this system, each transaction group is assigned a score that always keeps increasing over time. The memory pool is sorted according to these scores, and the lowest scoring ones are dropped when a configurable memory limit is reached. For mining, the top N transaction groups are selected from the pool in such a way that an average configurable fee per byte is maintained. As the mining node chooses a cutoff score above which transactions are included, the network converges to a fixed probability distribution for the score at which transactions are included. However, defining a scoring system for transactions that is independent of the current exchange value of bitcoins and from which kind of transactions are common on the network, but still tries to mimic the cost for the network to handle that transaction is difficult.Sipa's solution for un-hardcoding the fee handling was also mentioned.</summary>
    <published>2011-08-11T08:48:09+00:00</published>
  </entry>
</feed>
