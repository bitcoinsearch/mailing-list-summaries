<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Double spend detection to speed up transaction trust</title>
  <updated>2023-05-19T00:53:00.336002+00:00</updated>
  <author>
    <name>Matt Corallo 2011-08-05 21:30:50</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-05 21:23:09</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-05 12:06:09</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 22:21:53</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-04 22:18:40</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 20:38:25</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 20:33:29</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-04 20:08:07</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 18:39:56</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-05 12:00:02</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 22:16:13</name>
  </author>
  <author>
    <name>Matt Corallo 2011-08-04 17:45:17</name>
  </author>
  <link href="bitcoin-dev/Aug_2011/000325_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000324_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000318_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000305_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000304_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000299_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000296_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000294_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000292_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000316_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000303_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000290_Double-spend-detection-to-speed-up-transaction-trust.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Double spend detection to speed up transaction trust</title>
    <updated>2023-05-19T00:53:00.336002+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000325.html" rel="alternate"/>
    <summary>In this conversation, the participants discuss various topics related to Bitcoin protocol. One of the topics is the metric for the number of incoming connections and its relevance to the security of the network. The discussion concludes that neither bandwidth nor connection count is a good metric for choosing the number of incoming slots. The harm being caused by 'connect-to-everyone' nodes in .ru/.ua, which are considered DOS attacks on the network, is also discussed. Additionally, it is argued that a double-spend fighting option can be achieved through mining pools offering a real-time feed of accepted transactions. However, Matt Corallo argues that there is no need to add more traffic to the network when the same information can be obtained through other means such as providing the IP of the node. The conversation ends with a discussion on the relevance of the network's opinion in deciding which chain becomes the block-chain-to-rule-them-all and how half the miners working on one chain and the other half on the other chain could result in 50/50 chances of either leg getting confirmed.Another topic discussed in the conversation is the possibility of detecting double-spends rapidly, which is crucial for small businesses to use the client without requiring a deep understanding of the system. It was argued that the prevention of double-spends has already been resolved by Bitcoin, but it is about detection and quickly dealing with such cases. The proposal to mark a message with MSG_DOUBLESPEND was met with objections because it would result in more network traffic and there is no clear incentive for making changes. The suggestion to propagate conflicts on each conflicted input was seen as an interesting feature, but it might not be useful given that the software already waits for enough confirmations before considering something confirmed. The conservative nature of Bitcoin's development was noted, and the objection to pretty much every change was explained as wanting to prevent potential financial loss. The participants debate whether or not additional network complexity would be necessary to prevent double-spending in scenarios such as vending machines. The IGD protocol and its deployment on routers is also discussed, with the conversation revolving around finding ways to improve the security of Bitcoin transactions without compromising network efficiency.The discussion also includes suggestions for detecting double spends in bitcoin transactions. One suggestion is to have well-connected nodes monitor the network to detect double-spends and alert those who need to know that the transaction should not be accepted, without adding more stuff to the network protocol. Another suggestion is to connect to lots of clients and if they all send the same transaction, then double spend is unlikely but if some don't send you the transaction or send a conflicting one, then double spend is in progress. The participants propose that merchants rely on Bitcoin payment processors which can handle double-spend checks and tell a merchant a transaction is confirmed in ten seconds for small transactions, an hour for large ones, or anywhere in between. Such payment processors could also mine or have contracts with large miners which allows them to influence the transactions which are to be confirmed, allowing for even quicker confirmations and the offering of insurance against unconfirmed transactions being invalidated.In terms of a scenario where two scammers get together to buy two Ferraris using only one set of BTC, one solution proposed is that vendors wait for six confirmations before releasing goods. However, this is a long time though and more than most would be willing to wait. A proposal is to have a node broadcast a MSG_DOUBLESPEND instead of a MSG_TX when it drops a transaction that is not valid in the event of a double spend attempt. The vendor can then operate whatever policy they want: wait for six, ten, twenty confirmations, call the police, etc. Miners can also significantly lower the priority of any transactions that get flagged in this way.</summary>
    <published>2011-08-05T21:30:50+00:00</published>
  </entry>
</feed>
