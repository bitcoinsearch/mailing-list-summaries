<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - From the forums: one-confirmation attack</title>
  <updated>2023-05-18T23:22:20.635752+00:00</updated>
  <author>
    <name>Gregory Maxwell 2011-08-18 17:27:29</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-18 16:46:17</name>
  </author>
  <link href="bitcoin-dev/Aug_2011/000380_From-the-forums-one-confirmation-attack.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000378_From-the-forums-one-confirmation-attack.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - From the forums: one-confirmation attack</title>
    <updated>2023-05-18T23:22:20.635752+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000380.html" rel="alternate"/>
    <summary>In a thread discussing the potential for double-spend attacks, theymos suggests that nodes receiving new transactions via blocks should relay those transactions as if they had received them normally. Gavin Andresen comments that waiting for a number of blocks is an excellent metric and provides robustness against almost all attack patterns, as it equates to real difficulty and expense in a way that can't be faked. Andresen goes on to describe an attack pattern which doesn't require the attacker to have any hash power at all, but rather captures miners as unwilling or willing but plausibly deniable participants. The lost income from orphaned blocks is externalized to the victimized miners. Nodes adding in a few manually configured peerings can kill the attack, but we currently don't have software for this as addnode doesn't worry about keeping the links up and major pools aren't interested in participating.</summary>
    <published>2011-08-18T17:27:29+00:00</published>
  </entry>
</feed>
