<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - New standard transaction types: time to schedule a blockchain split?</title>
  <updated>2023-05-19T00:57:04.332794+00:00</updated>
  <author>
    <name>Pieter Wuille 2011-08-25 20:14:54</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-25 18:31:49</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-24 20:29:06</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-24 16:46:42</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-08-26 21:30:11</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-08-25 21:06:44</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-25 20:29:03</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-24 17:19:52</name>
  </author>
  <author>
    <name>Pieter Wuille 2011-08-24 16:18:54</name>
  </author>
  <author>
    <name>Gregory Maxwell 2011-08-24 15:45:09</name>
  </author>
  <link href="bitcoin-dev/Aug_2011/000418_New-standard-transaction-types-time-to-schedule-a-blockchain-split-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000417_New-standard-transaction-types-time-to-schedule-a-blockchain-split-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000413_New-standard-transaction-types-time-to-schedule-a-blockchain-split-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000400_New-standard-transaction-types-time-to-schedule-a-blockchain-split-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000427_New-standard-transaction-types-time-to-schedule-a-blockchain-split-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000420_New-standard-transaction-types-time-to-schedule-a-blockchain-split-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000419_New-standard-transaction-types-time-to-schedule-a-blockchain-split-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000404_New-standard-transaction-types-time-to-schedule-a-blockchain-split-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000398_New-standard-transaction-types-time-to-schedule-a-blockchain-split-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2011/000394_New-standard-transaction-types-time-to-schedule-a-blockchain-split-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - New standard transaction types: time to schedule a blockchain split?</title>
    <updated>2023-05-19T00:57:04.332794+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2011-August/000418.html" rel="alternate"/>
    <summary>The conversation among experts in the Bitcoin community centered around proposals for improving the Bitcoin protocol. One proposal suggested defining an address type that could encode any payment script based on RPL notation, which would be more compact and easily parseable. The proposal included two extra pseudo-instructions: one representing an address check and another representing a pubkey check. This method would enable customers to bypass clerks or implement a multisig transaction after receiving the money transfer.Another proposal suggested adding an RSA-like scheme to allow m-out-of-n signatures while distributing shares of the key that are points on a curve having zero-value for the actual key. However, this scheme does not solve the problem of malware turning a computer against the user. Discussions also included suggestions for replacing hard limits with dynamically adaptable limits, adjusting difficulty every block without limits, increasing precision, and removing the 100 confirmation requirement for spending generated coins. However, the experts agreed that making bitcoin less trustworthy is not a good idea.The conversation started with the discussion of complex transaction scripts and encoding them in a compact form. The idea was to allow a class of scripts that represent boolean expressions over signature checks to pass the IsStandard() test so that whenever such an expression is needed in the future, there will at least be a way to encode it in a way that the network will accept it. Some questioned whether accepting these scripts would cause any problems.Different estimates were given for the size of various addresses with complicated rules. It was concluded that having new 'standard' multisignature transactions would be the fastest way to very secure and hard-to-lose Bitcoin wallets. However, some argued against it, saying that if these new standard transactions are accepted, then defining a new kind of bitcoin address that lets coins be deposited into a multisignature-protected wallet would become necessary. This would require addresses that are 2 or 3 times as big as current bitcoin addresses and would be incompatible with old clients. It was suggested that this issue could be addressed by enabling opcodes so that new Bitcoin addresses can be small, and scheduling a blockchain split for N months from now. However, one member suggested that an address which hashes an ordered concatenation of many addresses (perhaps plus a length argument) could be used instead. Another member mentioned that incompatibility would not be complete: the only limit is that old clients couldn't send funds to escrow addresses--which is an issue no matter how you encode the information.Finally, the use cases for arbitrary scripts in a user-facing address were discussed, and it was suggested that defining another type of URI for each kind of transaction would be more efficient than doing pattern matching against some encoded script template.</summary>
    <published>2011-08-25T20:14:54+00:00</published>
  </entry>
</feed>
