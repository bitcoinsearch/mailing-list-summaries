<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Sentinel Chains: A Novel Two-Way Peg</title>
  <updated>2023-08-29T02:16:28.662378+00:00</updated>
  <author>
    <name>ZmnSCPxj 2023-08-28 13:48:39+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Sentinel Chains: A Novel Two-Way Peg</title>
    <updated>2023-08-29T02:16:28.662411+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021915.html" rel="alternate"/>
    <summary>In the email, ZmnSCPxj is asking Ryan about the consequences of modifying the Sentinel Chain open-source software. Specifically, ZmnSCPxj wants to know what would happen if they make the software honest for 999 sidechain blocks and then have it lie about the validity of the 1000th block. ZmnSCPxj is curious if mainchain nodes would need to download and validate all the previous 999 sidechain blocks before verifying the 1000th block itself. The context suggests that ZmnSCPxj is exploring the impact of this modification on the overall functionality and validation process of the Sentinel Chain software.It is important to note that the email does not provide any additional details or explanations for why ZmnSCPxj wants to make this modification or the specific goals they hope to achieve. However, based on the question posed, it can be inferred that ZmnSCPxj is interested in understanding the potential implications and behavior of the software under these circumstances.Overall, the email raises a technical inquiry regarding the behavior of modified Sentinel Chain software when lied about the validity of a specific block, and specifically questions the requirements and processes involved in validating sidechain blocks within the mainchain nodes.</summary>
    <published>2023-08-28T13:48:39+00:00</published>
  </entry>
</feed>
