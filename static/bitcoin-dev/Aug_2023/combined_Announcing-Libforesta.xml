<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Announcing Libforesta</title>
  <updated>2023-08-02T18:36:39.336174+00:00</updated>
  <author>
    <name>Bastiaan van den Berg 2023-08-01 08:02:55+00:00</name>
  </author>
  <author>
    <name>Davidson Souza 2023-07-31 17:47:26+00:00</name>
  </author>
  <link href="bitcoin-dev/Aug_2023/021832_Announcing-Libforesta.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021830_Announcing-Libforesta.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Announcing Libforesta</title>
    <updated>2023-08-02T18:36:39.338178+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021832.html" rel="alternate"/>
    <summary>Davidson Souza has introduced a project called `libfloresta` to the Bitcoin developers mailing list. This project is a derivative of his previous project called `Floresta`, which is a Fully-Validating Bitcoin Full node with an integrated watch-only wallet and Electrum Server powered by Utreexo. The main objective of `libfloresta` is to create a compact, simple, and ready-to-use full node specifically designed for low-power devices such as single-board computers (SBCs) and smartphones.To achieve this goal, Davidson is writing the main logic of the project in Rust and generating bindings to the original code. By compiling it to WebAssembly (WASM), `libfloresta` can run virtually anywhere. Although the project is still in its early stages, it has already been successfully used on signet without encountering any issues. Mainnet support is nearly ready, with the exception of some performance issues related to bridge nodes that need to be resolved.Davidson encourages users to check out the project on his GitHub page, where the code is available. Additionally, he provides an initial blog post explaining how to use `libfloresta` in Rust. As the project matures and becomes available on other platforms, he plans to write more documentation. Feedback regarding the project is greatly appreciated.Regarding consensus, Davidson clarifies that `libfloresta` does not reimplement the Bitcoin Consensus machine from scratch. Instead, he is utilizing `libbitcoinconsensus` and intends to incorporate the full `libbitcoinkernel` in the future. While this approach does not guarantee consistency, it minimizes the risk of misimplementations that could lead to splits. In order to identify any inconsistencies before they become problematic, Davidson is cross-testing `libfloresta` against Bitcoin Core.In conclusion, Davidson Souza introduces `libfloresta`, a project aimed at providing a compact and ready-to-use full node for Bitcoin on low-power devices. He shares his progress, encourages feedback from users, and clarifies the approach to consensus. Davidson expresses gratitude to Vinteum for their support in his work with utreexo and Floresta. `libfloresta` is an exciting project that is actively being developed, and any input or suggestions are welcomed.</summary>
    <published>2023-08-01T08:02:55+00:00</published>
  </entry>
</feed>
