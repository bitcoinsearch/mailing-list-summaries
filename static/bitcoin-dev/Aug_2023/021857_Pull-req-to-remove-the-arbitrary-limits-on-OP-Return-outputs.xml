<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Pull-req to remove the arbitrary limits on OP_Return outputs</title>
  <updated>2023-08-07T02:10:04.104120+00:00</updated>
  <author>
    <name>John Light 2023-08-06 20:35:38+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Pull-req to remove the arbitrary limits on OP_Return outputs</title>
    <updated>2023-08-07T02:10:04.104155+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021857.html" rel="alternate"/>
    <summary>Hi Peter,I have some questions regarding your proposal to remove the OP_RETURN output count and data size limits, specifically in relation to its impact on full node operators. Firstly, I would like to know if there are any scenarios where using OP_RETURN to embed data actually results in fewer bytes onchain compared to embedding the same data using the segwit/taproot witness space. Robin Linus suggested that there may be a case where this "effectively results in a discount for small inscriptions". It would be helpful to have confirmation on this and obtain specific details about the range of inscription sizes that would receive the discount if it is indeed true. I have also cc'd Robin directly on this email to invite him to respond to this question.Secondly, I came across documentation about OP_RETURN stating that these outputs are "provably-prunable". I am curious to know if there are any tools available for full node operators to prune this data from their nodes. During my research, I found PR #2791 by Pieter Wuille, which implemented pruning of provably-unspendable outputs, presumed to include OP_RETURN outputs. However, I couldn't find definitive answers, so I have a couple more questions related to this:i) Is the unspendable output pruning implemented in PR #2791 enabled by default or does it require a flag to be set by full node operators? If it requires a flag, what is the flag called and how can it be enabled? Conversely, if it is enabled by default, how can it be disabled?ii) If a full node operator prunes OP_RETURN outputs, does it in any way hinder their ability to assist a new node in initial block download (IBD) for blockchain validation? Additionally, would the answer differ if we were discussing the pruning of Taproot witness space (i.e., "envelopes" or "inscriptions") instead of OP_RETURN outputs?I appreciate your time and expertise in addressing these questions.Regards,John Light</summary>
    <published>2023-08-06T20:35:38+00:00</published>
  </entry>
</feed>
