<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Blinded 2-party Musig2</title>
  <updated>2023-08-10T02:10:14.446190+00:00</updated>
  <author>
    <name>Tom Trevethan 2023-08-09 15:14:36+00:00</name>
  </author>
  <author>
    <name>moonsettler 2023-08-08 17:44:06+00:00</name>
  </author>
  <author>
    <name>Tom Trevethan 2023-08-07 00:55:38+00:00</name>
  </author>
  <author>
    <name>Jonas Nick 2023-07-27 08:07:58+00:00</name>
  </author>
  <author>
    <name>AdamISZ 2023-07-27 05:51:14+00:00</name>
  </author>
  <author>
    <name>Lloyd Fournier 2023-07-27 02:54:17+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2023-07-26 22:06:44+00:00</name>
  </author>
  <author>
    <name>Tom Trevethan 2023-07-26 20:35:00+00:00</name>
  </author>
  <author>
    <name>Jonas Nick 2023-07-26 19:59:26+00:00</name>
  </author>
  <author>
    <name>moonsettler 2023-07-26 19:28:50+00:00</name>
  </author>
  <author>
    <name>AdamISZ 2023-07-26 19:19:44+00:00</name>
  </author>
  <author>
    <name>Andrew Poelstra 2023-07-26 17:40:26+00:00</name>
  </author>
  <author>
    <name>Tom Trevethan 2023-07-26 16:32:06+00:00</name>
  </author>
  <author>
    <name>Jonas Nick 2023-07-26 14:59:42+00:00</name>
  </author>
  <author>
    <name>moonsettler 2023-07-26 09:44:50+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2023-07-26 04:09:41+00:00</name>
  </author>
  <author>
    <name>Tom Trevethan 2023-07-25 16:05:48+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2023-07-25 14:12:31+00:00</name>
  </author>
  <author>
    <name>AdamISZ 2023-07-24 16:51:44+00:00</name>
  </author>
  <author>
    <name>Tom Trevethan 2023-07-24 16:22:15+00:00</name>
  </author>
  <author>
    <name>Tom Trevethan 2023-07-24 16:08:28+00:00</name>
  </author>
  <author>
    <name>Tom Trevethan 2023-07-24 15:57:41+00:00</name>
  </author>
  <author>
    <name>Jonas Nick 2023-07-24 15:40:16+00:00</name>
  </author>
  <author>
    <name>Jonas Nick 2023-07-24 15:39:09+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2023-07-24 14:40:10+00:00</name>
  </author>
  <author>
    <name>Erik Aronesty 2023-07-24 14:25:00+00:00</name>
  </author>
  <author>
    <name>Jonas Nick 2023-07-24 14:12:47+00:00</name>
  </author>
  <author>
    <name>ZmnSCPxj 2023-07-24 10:50:13+00:00</name>
  </author>
  <author>
    <name>Tom Trevethan 2023-07-24 07:46:11+00:00</name>
  </author>
  <link href="bitcoin-dev/Aug_2023/021867_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021863_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021860_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021821_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021820_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021818_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021817_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021816_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021815_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021814_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021813_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021811_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021812_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021810_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021806_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021807_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021804_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021803_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021802_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021801_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021800_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021799_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021798_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021797_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021796_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021795_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021794_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021793_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <link href="bitcoin-dev/July_2023/021792_Blinded-2-party-Musig2.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Blinded 2-party Musig2</title>
    <updated>2023-08-10T02:10:14.446514+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021867.html" rel="alternate"/>
    <summary>The discussion involves the effectiveness of POSK in preventing accidental vulnerabilities and the importance of comprehensive protocol design for security in Bitcoin transactions. Participants share insights on the v=2 nonces signing protocol of musig2, which aims to prevent the Wagner attack. The key aggregation coefficient is set to 1 for each key during a statecoin transfer to prevent "rogue key attacks." The modified key generation protocol involves the server generating a private key x1 and sending the corresponding public key X1 to the user. The user generates a private key x2, a blinding nonce z, and computes the aggregate public key X = z.(X1 + X2). The signing protocol includes the server generating nonces R11 and R12 and sending them to the user. The user generates their own nonces R21 and R22, computes R1 = R11 + R21, R2 = R12 + R22, b = H(X,(R1,R2),m), R = R1 + b.R2, and c = (X,R,m). The user sends y = cz and b to the server, who computes s1 = yx1 + r11 + br12 and sends it to the user. The user computes s2 = yx2 + r21 + br22, s = s1 + s2, resulting in the signature (s,R). During statecoin transfer, the client verifies the coin address correctness, and the server updates the key shares by generating a random blinding nonce e and sending it to the user. The user adds their private key to the nonce, encrypts it with the receiver public key, and sends it to the receiver. The receiver decrypts it, subtracts their private key, and sends the result to the server. The server updates the private key share, ensuring the aggregation of the new server key share with the new client key share is equal to the aggregation of the old server key share.In another discussion, participants explore potential vulnerabilities of blind MuSig schemes, particularly MuSig1. Concerns are raised about skipping the nonce commitment round or sending the message before determining the nonce. An alternative scheme involving a commitment to the public key X2 and proving in zero knowledge that c = SHA256(X1 + X2, R1 + R2, m) is proposed. However, further exploration is needed. The term "posk" is mentioned but its relevance is unclear. One participant expresses skepticism about the effectiveness of blind MuSig and proposes a different scheme. The discussion highlights the challenges of implementing a secure blind signing scheme.On the bitcoin-dev mailing list, concerns are raised by Jonas Nick about the proposed blind musig scheme's effectiveness. A variant of the attack used to make MuSig1 insecure is suggested. Jonas outlines steps a malicious client could take to exploit the vulnerability. To address the issue, an alternative scheme is proposed where the client sends a commitment to the public key X2, nonce R2, and message m to the server. The server replies with a nonce R1. The client then proves in zero knowledge that the commitment is derived correctly using SHA256. The server replies with a signature s1. However, the effectiveness of this alternative scheme is uncertain.In another thread, Tom Trevethan discusses the implementation of a version of 2-of-2 Schnorr MuSig2 for statechains. Party 1 is fully blinded, holding a private key required for aggregate signature generation but not learning the aggregate public key, signature, or message. Trust in the statechain server is required for security. Tom explains the key aggregation, nonce generation, challenge computation, and signature calculation steps. Adjustments are made for blinding party 1, where key and nonce aggregation are performed by party 2. Concerns are raised about the vulnerability of Tom's scheme to specific attacks, as it only has one 'R' point per party instead of multiple required by MuSig2.Overall, the discussion revolves around the implementation of 2-of-2 Schnorr MuSig2 for statechains, with concerns raised about blind musig schemes and alternative proposals.</summary>
    <published>2023-08-09T15:14:36+00:00</published>
  </entry>
</feed>
