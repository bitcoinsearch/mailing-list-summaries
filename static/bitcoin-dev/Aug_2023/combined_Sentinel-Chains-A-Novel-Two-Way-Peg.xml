<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Sentinel Chains: A Novel Two-Way Peg</title>
  <updated>2023-08-21T01:53:20.437174+00:00</updated>
  <author>
    <name>ryan at breen.xyz 2023-08-19 18:58:15+00:00</name>
  </author>
  <author>
    <name>Ruben Somsen 2023-08-19 14:35:10+00:00</name>
  </author>
  <author>
    <name>ryan at breen.xyz 2023-08-16 02:02:38+00:00</name>
  </author>
  <link href="bitcoin-dev/Aug_2023/021900_Sentinel-Chains-A-Novel-Two-Way-Peg.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021896_Sentinel-Chains-A-Novel-Two-Way-Peg.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021894_Sentinel-Chains-A-Novel-Two-Way-Peg.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Sentinel Chains: A Novel Two-Way Peg</title>
    <updated>2023-08-21T01:53:20.437238+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021900.html" rel="alternate"/>
    <summary>Ruben responds to Ryan's proposal and discusses the concept of "fraud proofs" in the context of Bitcoin. He explains that fraud proofs involve committing to every computational step and allowing anyone to reveal erroneous steps, thus proving that a state transition or block is invalid. However, Ruben points out that fraud proofs do not address the issue of data availability.Ruben explains that if someone claims data is unavailable, the only way to verify this claim is by downloading the data. This poses a problem because malicious peers can cause others to download all the data, resulting in no bandwidth savings. He mentions that fraud proofs could still reduce the need for computation by verifying only the parts for which fraud notifications are received, but it does not completely solve the scaling issue.Ruben provides some historical context, mentioning that fraud proofs were considered for inclusion in segwit (Segregated Witness), but were abandoned due to the data availability problem. He also shares a link to an update on the topic: https://bitcoincore.org/en/2016/01/26/segwit-benefits/update-2016-10-19Finally, Ruben mentions that there is a potential solution to the data availability issue called PoW fraud proofs/softchains. He provides a link to a description of this solution: https://gist.github.com/RubenSomsen/7ecf7f13dc2496aa7eed8815a02f13d1. He notes that he currently believes this solution is better suited for low-bandwidth mainchain nodes rather than sidechains.Ruben concludes by saying that sampling data availability through erasure codes is also possible, but it is complex and fragile.Overall, Ruben's response provides insight into the concept of fraud proofs, highlights the limitation of data availability, and suggests potential solutions to address this issue in the context of Bitcoin.In another email, Ryan discusses the implementation of a two-way sidechain peg within the Bitcoin protocol. He proposes a solution outlined in more detail on his blog and in a discussion on Stacker News. The main challenge addressed by BIP-300, the proposed solution, is how to establish a two-way peg without involving a multisig federation or requiring miners and full nodes to have knowledge about the sidechain or run a sidechain node.The method proposed by BIP-300 involves conducting sidechain withdrawals directly through the miners. To prevent theft, the proposal mandates a three-month period for peg-outs, during which all miners vote on the peg-out. This allows the community to respond in case of incorrect peg-outs or theft, as miners are expected to make the correct decisions under community pressure. Withdrawals are grouped into one large bundle per three-month period to streamline the process of social consensus.Despite criticisms, Ryan finds BIP-300 to be a viable and likely effective solution, considering that Bitcoin's mechanism is rooted in social consensus. However, he believes there are tools available now that can improve the process, leading to the concept of Sentinel chains.Sentinel chains involve sidechain nodes functioning as Sentinels, notifying full nodes of thefts via a secondary network. These nodes monitor the state of Bitcoin blocks and mempool transactions, actively searching for peg-outs that go against sidechain consensus to steal funds. They transmit invalid transactions or blocks to public Nostr servers. Full nodes interested in participating in sidechain consensus can run a small daemon alongside Bitcoin Core, monitoring Nostr nodes for messages about invalid transactions and instructing Bitcoin Core, via RPC calls, to ignore and not forward those transactions.Full nodes can choose any group of individuals or organizations to receive updates from Nostr, forming their own decentralized web of trust. This approach reverses the conventional model of two-way pegged sidechains, as sidechains now monitor nodes instead of requiring nodes to monitor sidechains.Similar to drivechains, Sentinel chains require an initial consensus soft fork, but they differ in that they allow for instantaneous and individual withdrawals without the need for a three-month gradual social consensus. Additionally, a single daemon can monitor notifications from multiple Sentinel chains, making the solution highly scalable for numerous sidechains.In summary, drivechains involve an initial consensus soft fork, treat each new sidechain as a miner-activated soft fork, feature withdrawals occurring in three-month periods, involve withdrawals in bundles, exclude Bitcoin full nodes from participation in sidechain consensus, and are currently production-ready. On the other hand, Sentinel chains require no initial soft fork, permit each new sidechain to be miner-activated or user-activated, allow instantaneous withdrawals, facilitate individual withdrawals, enable Bitcoin full nodes to engage in consensus, and are only at the concept stage.Sentinel chains potentially offer advantages over other two-way pegs, particularly in terms of speed and efficiency of consensus. They also align more closely with Bitcoin's principles by keeping power within the realm of full nodes. Moreover, they protect Core-only users from potential bug consequences resulting from consensus changes directly implemented in Bitcoin</summary>
    <published>2023-08-19T18:58:15+00:00</published>
  </entry>
</feed>
