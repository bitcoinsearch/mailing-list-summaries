<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Pull-req to remove the arbitrary limits on OP_Return outputs</title>
  <updated>2023-08-07T22:29:22.439670+00:00</updated>
  <author>
    <name>John Light 2023-08-06 20:35:38+00:00</name>
  </author>
  <author>
    <name>Peter Todd 2023-08-03 11:42:40+00:00</name>
  </author>
  <link href="bitcoin-dev/Aug_2023/021857_Pull-req-to-remove-the-arbitrary-limits-on-OP-Return-outputs.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021840_Pull-req-to-remove-the-arbitrary-limits-on-OP-Return-outputs.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Pull-req to remove the arbitrary limits on OP_Return outputs</title>
    <updated>2023-08-07T22:29:22.439670+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021857.html" rel="alternate"/>
    <summary>Hi Peter,I have a few questions regarding your proposal to remove the restrictions on OP_RETURN outputs. Firstly, I would like to know if there are any cases where using OP_RETURN to embed data actually results in fewer bytes onchain compared to embedding the same data using segwit/taproot witness space. Robin Linus suggested that there might be a case where small inscriptions receive a discount, resulting in fewer bytes onchain. It would be helpful to have confirmation and specific details about the range of inscription sizes that would receive this discount.Secondly, I would like to know if there are any tools available for full node operators to prune OP_RETURN data from their nodes. While researching this, I came across PR 2791 by Pieter Wuille, which implemented pruning of provably-unspendable outputs, including OP_RETURN outputs. I have a couple of questions related to this: i) Is the unspendable output pruning implemented in PR 2791 enabled by default or does it require a flag to be set by full node operators? If it requires a flag, what is the name of the flag and how can it be enabled? If it's enabled by default, how can it be disabled?ii) If a full node operator prunes OP_RETURN outputs, does it affect their ability to assist a new node with initial blockchain validation (IBD)? And would the answer be different if we were talking about pruning Taproot witness space instead of OP_RETURN outputs?Regarding the rationale behind your proposal, Sjors Provoost suggested on GitHub to send an email to this mailing list to notify the intention of merging the pull-request. The pull-request aims to remove the arbitrary restrictions on OP_Return outputs, specifically the 80-byte and 1 output per transaction standardness rules. The purpose of this proposal is to potentially eliminate transaction pinning vectors. Although the author of this email does not consider transaction pinning to be a significant concern, they still send this email as a notice of their intent.For more information on transaction pinning, readers can refer to the Bitcoin Operations Guide's article on the topic [1]. Additional insights can also be found on Peter Todd's website [2]. If you want to contact Peter Todd directly, his email address is peter@petertodd.org.[1] - https://bitcoinops.org/en/topics/transaction-pinning/[2] - https://petertodd.orgRegards,John Light</summary>
    <published>2023-08-06T20:35:38+00:00</published>
  </entry>
</feed>
