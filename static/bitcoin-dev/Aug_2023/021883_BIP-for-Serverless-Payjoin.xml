<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP for Serverless Payjoin</title>
  <updated>2023-08-14T01:52:49.946230+00:00</updated>
  <author>
    <name>Dan Gould 2023-08-12 21:20:37+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP for Serverless Payjoin</title>
    <updated>2023-08-14T01:52:49.946272+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021883.html" rel="alternate"/>
    <summary>Blockchain Commons UR is being suggested as the most elegant choice, considering the prevalence of QR codes. This would allow encoding a public key directly in the `pj=` endpoint without the need for a separate method. However, there are concerns regarding payjoin implementations written in JavaScript, as there is currently no JavaScript ur library available. It is suggested that a JavaScript library could be created based on the rust implementation. The draft has been updated to incorporate these suggestions and has been posted to the bips repository (https://github.com/bitcoin/bips/pull/1483). The major change in the draft is the replacement of symmetric crypto with a Noise IK-based cryptosystem using Secp256k1/Sha256/ChaChaPoly1305, which aims to address the issues identified by waxwing. Input on the transport protocol is also welcomed, particularly regarding the discussion on Nostr's censorship resistant properties. It is important to reach rough consensus within the BIP process before deployment. This is why the email is being sent to the list first instead of developing and deploying a complete reference implementation.</summary>
    <published>2023-08-12T21:20:37+00:00</published>
  </entry>
</feed>
