<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Concrete MATT opcodes</title>
  <updated>2023-08-09T02:06:29.134620+00:00</updated>
  <author>
    <name>Johan Tor√•s Halseth 2023-08-07 11:37:07+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Concrete MATT opcodes</title>
    <updated>2023-08-09T02:06:29.134648+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021862.html" rel="alternate"/>
    <summary>Salvatore, I appreciate the update on taptree verification. It's great that it can now be done on both input and outputs, and having them symmetrical makes it easier to learn. I have implemented the updated opcodes in btcd and also updated the example scripts for simulating CTV and Coinpools. Regarding the opcode parameter ordering, I feel that it would be more natural to have the tweaks (data, taptree) together before the internal key. However, if you have a different rationale for the current ordering, I would like to know. The deferred amount check seems out of place and insufficient for certain use cases like coinpools and CTV with multiple outputs. It might be better to either remove the amount preservation check or propose a more powerful amount introspection machinery. Please let me know your thoughts. Cheers, Johan</summary>
    <published>2023-08-07T11:37:07+00:00</published>
  </entry>
</feed>
