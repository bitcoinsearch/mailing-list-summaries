<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Concern about "Inscriptions"</title>
  <updated>2023-08-26T01:47:47.533215+00:00</updated>
  <author>
    <name>Erik Aronesty 2023-08-23 17:34:19+00:00</name>
  </author>
  <author>
    <name>GamedevAlice 2023-08-22 14:18:04+00:00</name>
  </author>
  <author>
    <name>martl.chris at proton.me 2023-08-22 05:15:12+00:00</name>
  </author>
  <author>
    <name>symphonicbtc 2023-08-21 22:34:03+00:00</name>
  </author>
  <author>
    <name>John Tromp 2023-08-21 16:28:50+00:00</name>
  </author>
  <author>
    <name>rotmaxi 2023-08-21 14:58:39+00:00</name>
  </author>
  <author>
    <name>Russell O'Connor 2023-08-21 14:47:18+00:00</name>
  </author>
  <author>
    <name>martl.chris at proton.me 2023-08-18 20:43:13+00:00</name>
  </author>
  <author>
    <name>Luke Dashjr 2023-08-02 15:46:21+00:00</name>
  </author>
  <author>
    <name>GamedevAlice 2023-08-02 11:07:27+00:00</name>
  </author>
  <link href="bitcoin-dev/Aug_2023/021911_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021913_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021912_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021906_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021904_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021903_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021902_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021895_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021842_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <link href="bitcoin-dev/Aug_2023/021837_Concern-about-Inscriptions-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Concern about "Inscriptions"</title>
    <updated>2023-08-26T01:47:47.533420+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021911.html" rel="alternate"/>
    <summary>The email discusses the implementation of a proof-of-work requirement in a public key on an open relay server protocol. The purpose of this addition is to make it more difficult for spammers or scammers to roll new keys and gain access to the network. It is mentioned that embedding information in a public key is not challenging, but there is a limit to how much can be embedded, especially if the goal is to allow mobile devices to generate a new key within a few minutes.In the email, Chris addresses the concern about "inscriptions" in the Bitcoin protocol. He emphasizes that understanding the strategy incorrectly or purposely driving the interaction into a false framing does not benefit Bitcoin. The proposed strategy aims to increase the coercion cost of mining entities compared to the cooperation cost of mining entities regarding arbitrary data insertion. It is important to note that this strategy is not about banning or censoring.Chris clarifies that mentioning other ways or methods to insert arbitrary data should not be seen as a threat, but rather as topics that Bitcoin developers should consider solving. It is necessary to assume that arbitrary data insertions are not innocent or negligible.The Bitcoin system is currently facing a struggle between two visions. One vision is characterized by every node operator having control, resulting in a highly decentralized system where nobody alone controls. The other vision is controlled by a few highly capitalized entity node operators, leading to a highly centralized system where a committee controls. To achieve the latter vision, Chris suggests incrementing the cost of operating a regular Bitcoin node, also known as an archival full node. This tactic would reduce network decentralization, making it vulnerable to central entity elimination or control acquisition. It is worth noting that the central entity does not necessarily have to be a national-state government.The email was forwarded by Russell O'Connor, and it is part of a discussion on the Bitcoin protocol. However, the farewell part of the email should be ignored for the purpose of summarizing the content.Overall, Chris highlights the importance of understanding the strategy correctly and considering the implications of arbitrary data insertions in order to address the ongoing struggle between decentralization and centralization in the Bitcoin system.Secret key schemes, such as ECDSA, can be inefficient in terms of data usage and may be more costly for users compared to allowing arbitrary data. In the case of ECDSA, re-using k values can allow for data encoding in both k and the entire secret key. This can also be done by brute-forcing a k value to encode data in a signature, as seen in compromised hardware key exfiltration attacks. Additionally, one can attempt to brute-force keys in order to encode data in the public key. However, limiting the storage of arbitrary data in a system that relies on secret keys being arbitrary data is challenging and expensive.The Mimblewimble protocol is known for its resistance to spam and inscription attacks. In this context, it is important to note that range proofs in the protocol already prove knowledge of blinding factors in Pedersen commitments. This eliminates the need for additional padding to prevent the encoding of spam into cryptographic material. As a result, pure Mimblewimble blockchains are considered to be highly resistant to inscription and spam attacks.There is a project called STAMPS that breaks up image data into chunks and embeds them in bare multisig outputs. This method consumes more space and increases the size of the UTXO set compared to stuffing data in a witness. Pay-to-Contact protocols could be used to tweak a pubkey with a small blob of data, allowing someone to produce a signature proving knowledge of the private key.The email discusses the possibility of banning "arbitrary data" in programming and its potential consequences. The author argues that if arbitrary data is banned, actors will simply encode their data within sets of public keys as a way to bypass the restriction. Public key data is indistinguishable from random data, making it difficult to determine whether a given public key is actually encoding data or serving its intended purpose as a public key. The author suggests that unless the blockchain is padded with proof of knowledge of secret keys, it will be challenging to distinguish between legitimate public keys and those used for encoding data.The email draws parallels to how certain governments attempt to censor internet protocols, and users respond by tunneling their protocol through something that appears innocent, such as HTTPS. The remaining HTTPS stream, like public keys, is indistinguishable from random data and can be utilized as a communications channel for arbitrary data. The author posits that if efforts are made to ban arbitrary data, users will adapt by tunneling their data over innocent-looking public key data instead.The author also mentions Counterparty, a programming platform that has previously encoded their data within public key data, highlighting that this concern is not hypothetical but has already been implemented in practice.In this email, the sender discusses the ongoing issue of Bitcoin script exploits and the vulnerabilities they pose to the system. They mention that these exploits are not new and have been a problem for over</summary>
    <published>2023-08-23T17:34:19+00:00</published>
  </entry>
</feed>
