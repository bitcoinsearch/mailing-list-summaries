<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Signing a Bitcoin Transaction with Lamport Signatures (no changes needed)</title>
  <updated>2024-05-03T02:03:48.850437+00:00</updated>
  <author>
    <name>Ethan Heilman 2024-05-01 20:02:00+00:00</name>
  </author>
  <author>
    <name>Antoine Riard 2024-05-01 03:46:00+00:00</name>
  </author>
  <author>
    <name>Ethan Heilman 2024-04-30 20:43:00+00:00</name>
  </author>
  <author>
    <name>Andrew Poelstra 2024-04-30 14:21:00+00:00</name>
  </author>
  <author>
    <name>Ethan Heilman 2024-04-30 13:25:00+00:00</name>
  </author>
  <author>
    <name>Matthew Zipkin 2024-04-30 12:32:00+00:00</name>
  </author>
  <author>
    <name>Ethan Heilman 2024-04-29 00:30:00+00:00</name>
  </author>
  <link href="bitcoin-dev/May_2024/m4598d2909fd95ee0eaf5249d3c527534a97f4ec7_Signing-a-Bitcoin-Transaction-with-Lamport-Signatures-no-changes-needed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/May_2024/m2366b783e1a2fe3962a453cfe71e83948c76b067_Signing-a-Bitcoin-Transaction-with-Lamport-Signatures-no-changes-needed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2024/m1aed003971fcff909120c5761459328d827d6a9e_Signing-a-Bitcoin-Transaction-with-Lamport-Signatures-no-changes-needed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2024/mf0a2fc2a5059fca5b68d7b9eaad6bdd8afa3649f_Signing-a-Bitcoin-Transaction-with-Lamport-Signatures-no-changes-needed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2024/m18aba50dfca9d0e096f3f1446893aa06ad5fe8a8_Signing-a-Bitcoin-Transaction-with-Lamport-Signatures-no-changes-needed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2024/m087e273dd3b3db05a2a7016636b6f61f91a3c433_Signing-a-Bitcoin-Transaction-with-Lamport-Signatures-no-changes-needed-.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2024/mb7511d27ee5a8e00005dd4a71830839d97004ecf_Signing-a-Bitcoin-Transaction-with-Lamport-Signatures-no-changes-needed-.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Signing a Bitcoin Transaction with Lamport Signatures (no changes needed)</title>
    <updated>2024-05-03T02:03:48.850504+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CAEM=y+XjPwsst=rU5KS==F8VfXaLtcfgoWt2CuY+hBMmLXhCsA@mail.gmail.com/T/#m4598d2909fd95ee0eaf5249d3c527534a97f4ec7" rel="alternate"/>
    <summary>The email exchange between Antoine and Ethan delves into the complexities of implementing a secure cryptographic scheme within Bitcoin's blockchain, specifically discussing the emulation of Lamport signatures via ECDSA's `k` nonce alterations and the potential vulnerabilities this introduces. The conversation critically examines the security assumptions underlying this approach, emphasizing concerns over the unforgeability of the scheme and the risk posed by quantum computing to the ECDSA signature algorithm. Antoine points out the inherent risks in relying on specific properties of ECDSA signatures without a solid proof of security, highlighting the inadequacy of 64 bits of security and the feasibility of bypassing signature security through precomputed values.

Further elaboration on the scheme's optimization suggests a reduction in opcode usage by consolidating the validation of multiple ECDSA signatures into a single check. This proposed method capitalizes on the combinatorial advantage offered by positioning shorter signatures, aiming to enhance efficiency while maintaining security against attackers with significant computational resources. However, concerns are raised about the practicality of increasing the number of on-chain pre-committed signatures as a means to bolster security, given the computational expense involved and the current limitations imposed by Bitcoin's protocol, such as the 201-opcode limit and the 4MWU block size restriction.

The dialogue extends into a discussion about the future of cryptographic security in the face of advancing quantum computing technology. A theoretical mitigation strategy involves setting a fixed 'r=1' value for all ECDSA signatures to counteract quantum vulnerabilities. Despite this, the conversation acknowledges the necessity of further innovation, including a potential soft fork, to fully protect Bitcoin from quantum attacks.

At the heart of the discussion is an exploration of integrating Lamport signatures within Bitcoin's script environment to enable advanced functionalities like covenants. This innovative approach, discussed at MIT DCI, leverages the variable length of ECDSA signatures as a proxy for transaction hashes, proposing a novel method that significantly increases cryptographic security but also introduces new challenges, such as susceptibility to certain types of attacks and the practical limitations of requiring a large number of signatures.

Throughout the email exchange, there is a recurring theme of balancing the pursuit of cryptographic advancements with the imperative of ensuring robust security measures. The conversation highlights both the potential and the pitfalls of experimenting with new cryptographic schemes within the Bitcoin ecosystem. It reflects a broader discourse on the evolution of blockchain technology, underscoring the ongoing need for research, collaboration, and innovation to address emerging threats and leverage opportunities for enhancing digital currency security.</summary>
    <published>2024-05-01T20:02:00+00:00</published>
  </entry>
</feed>
