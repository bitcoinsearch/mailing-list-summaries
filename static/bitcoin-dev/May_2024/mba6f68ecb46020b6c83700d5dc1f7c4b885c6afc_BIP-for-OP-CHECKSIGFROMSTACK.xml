<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>BIP for OP_CHECKSIGFROMSTACK</title>
  <updated>2024-05-16T02:00:06.508015+00:00</updated>
  <author>
    <name>Brandon Black 2024-05-14 21:55:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>BIP for OP_CHECKSIGFROMSTACK</title>
    <updated>2024-05-16T02:00:06.508049+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/ZkPdyMzR3DKkUlQd@console/T/#mba6f68ecb46020b6c83700d5dc1f7c4b885c6afc" rel="alternate"/>
    <summary>Andrew Poelstra initiated a discussion regarding the inclusion of an implementation for CHECKSIGFROMSTACKADD (CSFSA) in a Bitcoin Improvement Proposal (BIP). Initially, Poelstra was hesitant to include CSFSA, considering it could be achieved through existing opcodes and alternative stack use. However, after witnessing advanced miniscripting applications presented by Rob Hamilton, the utility and potential prevalence of CSFSA became apparent, leading to a reconsideration towards its addition, suggesting the utilization of another SUCCESS opcode for its implementation.

Another point of contemplation raised was whether to restrict CHECKSIGFROMSTACKVERIFY (CSFSV) to tapscript exclusively. This consideration stems from the proposal's partial aim to complement BIP119 and the nature of CTV as a NOP upgrade that remains compatible with legacy scripts. The inclusion of CSFSV as a NOP within the proposal underscores an openness to community input on whether maintaining its availability across script types (including legacy scripts) is beneficial or if it should be confined to tapscript applications.</summary>
    <published>2024-05-14T21:55:00+00:00</published>
  </entry>
</feed>
