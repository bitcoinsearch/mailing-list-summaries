<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>0</id>
  <title>A Fool's Errand or should I try?</title>
  <updated>2024-05-05T02:05:45.657281+00:00</updated>
  <author>
    <name>Fractal Encrypt 2024-05-04 15:00:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>0</id>
    <title>A Fool's Errand or should I try?</title>
    <updated>2024-05-05T02:05:45.657310+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/75628135-32ae-4df3-be52-9f7d054bc096n@googlegroups.com/T/#u#m7d421b0f03e221d3e00a528b8c1599227fbd0698" rel="alternate"/>
    <summary>The sender expresses a keen interest in enhancing the functionality of `decoderawtransaction` within Bitcoin development, aiming to include transaction fee information and possibly the satoshis per virtual byte (sats/vB) metric. This interest stems from personal experiences with creating transactions using `createrawtransaction` and encountering difficulties in accurately calculating fees manually. The current limitation of `decoderawtransaction` not displaying fee information is noted, attributed to its inability to determine the value of inputs in a transaction.

To circumvent this issue for more accurate fee verification, the individual resorts to using `createpsbt` (Create Partially Signed Bitcoin Transaction) instead, which provides detailed information upon finalization, including fees. However, this method is considered more labor-intensive for straightforward transactions, especially when all UTXOs used as inputs are contained within the sender's wallet.

The proposed solution involves modifying `decoderawtransaction` to automatically fetch UTXO details for each input, calculate the total input value, and then subtract the total output value to ascertain the transaction fee. Additional considerations include determining whether inputs are from the user's wallet, suggesting a possible command argument to conditionally display fee information based on this factor. Furthermore, compatibility with nodes operating with `txindex` enabled, which have access to the entire chainstate for transaction ID lookup, is also highlighted as a necessary consideration.

The sender acknowledges their limited technical skills but counters this with high interest and persistence, seeking guidance, mentorship, or even criticism for their project idea. They express hope that if successful, they could contribute the enhancement back to the community through a pull request, despite initially intending the project for personal use and learning within their own node environment.</summary>
    <published>2024-05-04T15:00:00+00:00</published>
  </entry>
</feed>
