<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Penlock, a paper-computer for secret-splitting BIP39 seed phrases</title>
  <updated>2024-05-15T02:01:30.173644+00:00</updated>
  <author>
    <name>Andrew Poelstra 2024-05-14 13:42:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Penlock, a paper-computer for secret-splitting BIP39 seed phrases</title>
    <updated>2024-05-15T02:01:30.173678+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/9580J-OlDrkh-JivYUV3ziFhpJ8o5FbZhYz0U0sYL7_wPcy5y3EeRRKNKaPYPOh11A2QZgNNeo3QaOnP3OaMXamWjaY1YjXQiQ9EVEEI7NM=@proton.me/T/#m2021d225090bbed4f8aece8a3d9de8cb63f4d095" rel="alternate"/>
    <summary>In the exploration of mathematical operations within Galois Fields (GF(P)), specifically the application of slide wheels for multiplication and division, an interesting method is highlighted. These operations rely on the principle that every nonzero number can be represented as 2^n for some n, allowing arithmetic operations to be conducted by simply adding or subtracting exponents. This approach introduces a unique form of slide wheel that lacks a natural ordering, contrasting with other tools like a slide chart which may operate with a more intuitive sequence.

The discussion extends into the realm of checksumming numbers, revealing a comparison with codex32's "translation" process. Despite codex32's ability to conduct quick checks in approximately five minutes, it is acknowledged that these are less comprehensive than the checksum methods being discussed. The conversation sheds light on the complexity and time investment required for splitting and recovery processes within the proposed system, attributed to the extensive character output from the checksum operation. This detailed examination uncovers the necessity of utilizing two distinct wheels for effectively navigating through the solving and recovery phases, contrary to the initial mention of a "single wheel".

Further insight is provided into the conceptual framework of the "solving window", drawing parallels to the "recovery symbol" used in codex32. It is suggested that this component could essentially function as a Lagrange polynomial, offering a pathway to computation through alternative means such as a slide wheel rather than relying solely on a lookup-table volvelle. This revelation is accompanied by a recommendation to potentially bypass the intricate underlying mathematical rationale by empirically developing a wheel through trial, error, and cross-referencing against established volvelles.

For further information on the mathematical underpinnings and practical applications discussed, readers are directed to explore additional resources provided by Andrew Poelstra of Blockstream Research, whose work can be found at [https://www.wpsoftware.net/andrew](https://www.wpsoftware.net/andrew). This exploration delves into the innovative intersections of mathematics and cryptographic processes, emphasizing the evolving nature of problem-solving mechanisms in the field.</summary>
    <published>2024-05-14T13:42:00+00:00</published>
  </entry>
</feed>
