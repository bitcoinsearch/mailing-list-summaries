<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Test cases for signing legacy inputs in transactions</title>
  <updated>2024-05-01T02:05:52.346076+00:00</updated>
  <author>
    <name>Edil Guimar√£es de Medeiros 2024-04-30 12:48:00+00:00</name>
  </author>
  <author>
    <name>Ali Sherief 2024-04-30 11:43:00+00:00</name>
  </author>
  <link href="bitcoin-dev/April_2024/m56d78e299a56adcf27619d850f5bed2d88520660_Test-cases-for-signing-legacy-inputs-in-transactions.xml" rel="alternate"/>
  <link href="bitcoin-dev/April_2024/m61d685ebd5dda64a646866189468f90437209f50_Test-cases-for-signing-legacy-inputs-in-transactions.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Test cases for signing legacy inputs in transactions</title>
    <updated>2024-05-01T02:05:52.346117+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/CANJiN3+tCVERL2Px19oDM5P9VGj=kYeoEUxNSrUqVod9N_mVrg@mail.gmail.com/T/#m56d78e299a56adcf27619d850f5bed2d88520660" rel="alternate"/>
    <summary>The discussion revolves around the challenge of testing Segwit transaction constructors in BIP143 and the difficulty in finding reproducible legacy transactions for testing purposes. Ali Sherief points out that while there is an abundance of raw transactions available for testing Segwit transaction constructors, locating reproducible legacy transactions poses a significant challenge. This difficulty arises mainly from two issues: the absence of crucial debugging information such as the preimage or private keys, and the non-deterministic nature of signatures created using OpenSSL, rendering them unsuitable for tests in contrast to those made with libsecp256k1.

Ali Sherief expresses an interest in discovering a source for raw legacy transactions accompanied by private keys to facilitate effective testing of his software. The conversation also touches on the trust placed in core as a foundational model for software development within the network. Despite potential concerns about relying heavily on core, the consensus seems to be that its widespread acceptance mitigates these worries, assuming compatibility with core equates to operational reliability across the network.</summary>
    <published>2024-04-30T12:48:00+00:00</published>
  </entry>
</feed>
