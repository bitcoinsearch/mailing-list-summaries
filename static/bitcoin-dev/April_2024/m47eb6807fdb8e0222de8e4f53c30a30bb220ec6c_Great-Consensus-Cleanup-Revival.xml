<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>1</id>
  <title>Great Consensus Cleanup Revival</title>
  <updated>2024-05-02T01:58:16.821911+00:00</updated>
  <author>
    <name>Mark F 2024-04-30 22:20:00+00:00</name>
  </author>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>1</id>
    <title>Great Consensus Cleanup Revival</title>
    <updated>2024-05-02T01:58:16.821949+00:00</updated>
    <link href="https://gnusha.org/pi/bitcoindev/gnM89sIQ7MhDgI62JciQEGy63DassEv7YZAMhj0IEuIo0EdnafykF6RH4OqjTTHIHsIoZvC2MnTUzJI7EfET4o-UQoD-XAQRDcct994VarE=@protonmail.com/T/#m47eb6807fdb8e0222de8e4f53c30a30bb220ec6c" rel="alternate"/>
    <summary>The discussion revolves around the concept of implementing a pegged extension-block side chain for Bitcoin, an idea that has been explored since at least 2014. The unique aspect of the forward blocks proposal, in contrast to previous ideas, is its ability to replay transactions on the compatibility blockchain. This ensures that even older versions of Bitcoin software, specifically those running since 2013, can access all blocks, have a complete listing of all Unspent Transaction Outputs (UTXOs), and see the transaction content as it appears. This compatibility feature highlights the importance of supporting older node versions within Bitcoin's diverse ecosystem, which includes critical infrastructure like block explorers, mempool websites, and various network monitoring and charting tools.

The forward blocks proposal leverages the timewarp bug to introduce several significant changes as soft forks, rather than hard forks, to the vanilla Bitcoin protocol. These changes include a proof-of-work modification, sharding, subsidy schedule smoothing, and flexible block size adjustments. The aim is to demonstrate that major protocol upgrades can be implemented in a manner that supports legacy systems without mandatory upgrades for non-mining nodes, thereby maintaining network visibility for all participants.

However, fixing the timewarp bug would eliminate the possibility of achieving certain enhancements, such as flexible block sizes and smoothed subsidy schedules, through this backward-compatible method. Addressing the timewarp bug would irreversibly prevent the Bitcoin community from scaling on-chain in a manner that is backward compatible with older versions of the software. This consideration underscores the gravity of permanently disabling such a capability, emphasizing the need for careful deliberation before deciding to fix the bug, given its implications for future scalability and compatibility within the Bitcoin network.</summary>
    <published>2024-04-30T22:20:00+00:00</published>
  </entry>
</feed>
