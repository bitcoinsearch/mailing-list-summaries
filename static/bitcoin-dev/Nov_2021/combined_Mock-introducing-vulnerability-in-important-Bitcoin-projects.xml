<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>2</id>
  <title>Combined summary - Mock introducing vulnerability in important Bitcoin projects</title>
  <updated>2023-05-22T16:20:15.674637+00:00</updated>
  <author>
    <name>Anthony Towns 2022-08-19 03:09:46</name>
  </author>
  <author>
    <name>Prayank 2021-11-18 20:29:24</name>
  </author>
  <link href="bitcoin-dev/Aug_2022/020866_Mock-introducing-vulnerability-in-important-Bitcoin-projects.xml" rel="alternate"/>
  <link href="bitcoin-dev/Nov_2021/019603_Mock-introducing-vulnerability-in-important-Bitcoin-projects.xml" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="0.9.0">python-feedgen</generator>
  <entry>
    <id>2</id>
    <title>Combined summary - Mock introducing vulnerability in important Bitcoin projects</title>
    <updated>2023-05-22T16:20:15.674637+00:00</updated>
    <link href="https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-August/020866.html" rel="alternate"/>
    <summary>In an email from November 2021, a developer named Prayank announced that they would be conducting a review exercise for three Bitcoin projects - Bitcoin Core, LND, and Bisq - using just one account. They created a salted hash for their username and stated that pull requests would be created within the next six months. If a vulnerability is caught during the review, it will be publicly announced, but if not, the inserted vulnerability and review failure will be privately revealed via normal private vulnerability-reporting channels. The exercise is expected to yield interesting results that will help improve the review process for greater security. A previous email from October 2021 discussed the value of studying and improving the review process to harden it against attacks, with the suggestion that every commit message should include a pair of 256-bit hex words. Public attempts at attack or testing of the review process would use the first 256-bit as a salt, and when hashed with SHA256, should result in the second 256-bit word. Those opting out would run a script that checks commit messages for the presence of this specific pattern. However, it was noted that developers cannot opt out of an NSA attempt at inserting vulnerabilities, so all developers should be forced to opt in on the "practice rounds".</summary>
    <published>2022-08-19T03:09:46+00:00</published>
  </entry>
</feed>
